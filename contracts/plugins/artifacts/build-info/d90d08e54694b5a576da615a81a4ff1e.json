{
	"id": "d90d08e54694b5a576da615a81a4ff1e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/plugins/StaterTransfers.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.15;\nimport '@openzeppelin/contracts/token/ERC1155/IERC1155.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\nimport '@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol';\nimport '@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol';\n\n\ncontract StaterTransfers is Ownable, ERC721Holder, ERC1155Holder {\n    \n\n    /*\n     * @DIIMIIM : standard method to send tokens from an account to another ( + payment fee to admin )\n     */\n    function transferTokens(\n        address from,\n        address payable to,\n        address currency,\n        uint256 qty1,\n        uint256 qty2\n    ) public {\n      if ( currency != address(0) ){\n          require(IERC20(currency).transferFrom(\n              from,\n              to, \n              qty1\n          ), \"Transfer of tokens to receiver failed\");\n          require(IERC20(currency).transferFrom(\n              from,\n              owner(), \n              qty2\n          ), \"Transfer of tokens to Stater failed\");\n      }else{\n          require(to.send(qty1), \"Transfer of ETH to receiver failed\");\n          require(payable(owner()).send(qty2), \"Transfer of ETH to Stater failed\");\n      }\n    }\n\n\n    /*\n     * @DIIMIIM : standard method to send items from an account to another\n     */\n    function transferItems(\n        address from, \n        address to, \n        address[] memory nftAddressArray, \n        uint256[] memory nftTokenIdArray,\n        uint8[] memory nftTokenTypeArray\n    ) public {\n        uint256 length = nftAddressArray.length;\n        require(length == nftTokenIdArray.length && nftTokenTypeArray.length == length, \"Token infos provided are invalid\");\n        for(uint256 i = 0; i < length; ++i) \n            if ( nftTokenTypeArray[i] == 0 )\n                IERC721(nftAddressArray[i]).safeTransferFrom(\n                    from,\n                    to,\n                    nftTokenIdArray[i]\n                );\n            else\n                IERC1155(nftAddressArray[i]).safeTransferFrom(\n                    from,\n                    to,\n                    nftTokenIdArray[i],\n                    1,\n                    '0x00'\n                );\n    }\n\n}"
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/utils/ERC1155Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC1155Receiver.sol\";\n\n/**\n * Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n *\n * IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n * stuck.\n *\n * @dev _Available since v3.1._\n */\ncontract ERC1155Holder is ERC1155Receiver {\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n */\ncontract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155Receiver.sol\";\nimport \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ERC1155Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":451:973  contract ERC1155Holder is ERC1155Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":451:973  contract ERC1155Holder is ERC1155Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":527:561  type(IERC1155Receiver).interfaceId */\n      0x4e2312e000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:523  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_24\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      tag_25\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":589:600  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:588  super.supportsInterface */\n      tag_26\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":903:909  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":928:964  this.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":921:964  return this.onERC1155BatchReceived.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":655:661  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":680:711  this.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":673:711  return this.onERC1155Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_30:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_31:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_32:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_33:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_34:\n        /* \"#utility.yul\":561:584   */\n      tag_66\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_33\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_67\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_67:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_35:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_69\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_34\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_8:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_72\n      tag_31\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":833:952   */\n    tag_71:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_73\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_35\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_36:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_37:\n        /* \"#utility.yul\":1268:1289   */\n      tag_76\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_36\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_11:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_78\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_37\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_38:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_39:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_81\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_38\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_40:\n        /* \"#utility.yul\":1825:1849   */\n      tag_83\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_39\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      dup1\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_84:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_41:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_86\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_40\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2142   */\n    tag_42:\n        /* \"#utility.yul\":2134:2135   */\n      0x00\n        /* \"#utility.yul\":2131:2132   */\n      dup1\n        /* \"#utility.yul\":2124:2136   */\n      revert\n        /* \"#utility.yul\":2148:2250   */\n    tag_43:\n        /* \"#utility.yul\":2189:2195   */\n      0x00\n        /* \"#utility.yul\":2240:2242   */\n      0x1f\n        /* \"#utility.yul\":2236:2243   */\n      not\n        /* \"#utility.yul\":2231:2233   */\n      0x1f\n        /* \"#utility.yul\":2224:2229   */\n      dup4\n        /* \"#utility.yul\":2220:2234   */\n      add\n        /* \"#utility.yul\":2216:2244   */\n      and\n        /* \"#utility.yul\":2206:2244   */\n      swap1\n      pop\n        /* \"#utility.yul\":2148:2250   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2256:2436   */\n    tag_44:\n        /* \"#utility.yul\":2304:2381   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2301:2302   */\n      0x00\n        /* \"#utility.yul\":2294:2382   */\n      mstore\n        /* \"#utility.yul\":2401:2405   */\n      0x41\n        /* \"#utility.yul\":2398:2399   */\n      0x04\n        /* \"#utility.yul\":2391:2406   */\n      mstore\n        /* \"#utility.yul\":2425:2429   */\n      0x24\n        /* \"#utility.yul\":2422:2423   */\n      0x00\n        /* \"#utility.yul\":2415:2430   */\n      revert\n        /* \"#utility.yul\":2442:2723   */\n    tag_45:\n        /* \"#utility.yul\":2525:2552   */\n      tag_91\n        /* \"#utility.yul\":2547:2551   */\n      dup3\n        /* \"#utility.yul\":2525:2552   */\n      tag_43\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2517:2523   */\n      dup2\n        /* \"#utility.yul\":2513:2553   */\n      add\n        /* \"#utility.yul\":2655:2661   */\n      dup2\n        /* \"#utility.yul\":2643:2653   */\n      dup2\n        /* \"#utility.yul\":2640:2662   */\n      lt\n        /* \"#utility.yul\":2619:2637   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2607:2617   */\n      dup3\n        /* \"#utility.yul\":2604:2638   */\n      gt\n        /* \"#utility.yul\":2601:2663   */\n      or\n        /* \"#utility.yul\":2598:2686   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":2666:2684   */\n      tag_93\n      tag_44\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2598:2686   */\n    tag_92:\n        /* \"#utility.yul\":2706:2716   */\n      dup1\n        /* \"#utility.yul\":2702:2704   */\n      0x40\n        /* \"#utility.yul\":2695:2717   */\n      mstore\n        /* \"#utility.yul\":2485:2723   */\n      pop\n        /* \"#utility.yul\":2442:2723   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2729:2858   */\n    tag_46:\n        /* \"#utility.yul\":2763:2769   */\n      0x00\n        /* \"#utility.yul\":2790:2810   */\n      tag_95\n      tag_30\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2780:2810   */\n      swap1\n      pop\n        /* \"#utility.yul\":2819:2852   */\n      tag_96\n        /* \"#utility.yul\":2847:2851   */\n      dup3\n        /* \"#utility.yul\":2839:2845   */\n      dup3\n        /* \"#utility.yul\":2819:2852   */\n      tag_45\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2729:2858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2864:3175   */\n    tag_47:\n        /* \"#utility.yul\":2941:2945   */\n      0x00\n        /* \"#utility.yul\":3031:3049   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3023:3029   */\n      dup3\n        /* \"#utility.yul\":3020:3050   */\n      gt\n        /* \"#utility.yul\":3017:3073   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":3053:3071   */\n      tag_99\n      tag_44\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3017:3073   */\n    tag_98:\n        /* \"#utility.yul\":3103:3107   */\n      0x20\n        /* \"#utility.yul\":3095:3101   */\n      dup3\n        /* \"#utility.yul\":3091:3108   */\n      mul\n        /* \"#utility.yul\":3083:3108   */\n      swap1\n      pop\n        /* \"#utility.yul\":3163:3167   */\n      0x20\n        /* \"#utility.yul\":3157:3161   */\n      dup2\n        /* \"#utility.yul\":3153:3168   */\n      add\n        /* \"#utility.yul\":3145:3168   */\n      swap1\n      pop\n        /* \"#utility.yul\":2864:3175   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3181:3298   */\n    tag_48:\n        /* \"#utility.yul\":3290:3291   */\n      0x00\n        /* \"#utility.yul\":3287:3288   */\n      dup1\n        /* \"#utility.yul\":3280:3292   */\n      revert\n        /* \"#utility.yul\":3304:3381   */\n    tag_49:\n        /* \"#utility.yul\":3341:3348   */\n      0x00\n        /* \"#utility.yul\":3370:3375   */\n      dup2\n        /* \"#utility.yul\":3359:3375   */\n      swap1\n      pop\n        /* \"#utility.yul\":3304:3381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3387:3509   */\n    tag_50:\n        /* \"#utility.yul\":3460:3484   */\n      tag_103\n        /* \"#utility.yul\":3478:3483   */\n      dup2\n        /* \"#utility.yul\":3460:3484   */\n      tag_49\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":3453:3458   */\n      dup2\n        /* \"#utility.yul\":3450:3485   */\n      eq\n        /* \"#utility.yul\":3440:3503   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":3499:3500   */\n      0x00\n        /* \"#utility.yul\":3496:3497   */\n      dup1\n        /* \"#utility.yul\":3489:3501   */\n      revert\n        /* \"#utility.yul\":3440:3503   */\n    tag_104:\n        /* \"#utility.yul\":3387:3509   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3515:3654   */\n    tag_51:\n        /* \"#utility.yul\":3561:3566   */\n      0x00\n        /* \"#utility.yul\":3599:3605   */\n      dup2\n        /* \"#utility.yul\":3586:3606   */\n      calldataload\n        /* \"#utility.yul\":3577:3606   */\n      swap1\n      pop\n        /* \"#utility.yul\":3615:3648   */\n      tag_106\n        /* \"#utility.yul\":3642:3647   */\n      dup2\n        /* \"#utility.yul\":3615:3648   */\n      tag_50\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3515:3654   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3677:4387   */\n    tag_52:\n        /* \"#utility.yul\":3773:3778   */\n      0x00\n        /* \"#utility.yul\":3798:3879   */\n      tag_108\n        /* \"#utility.yul\":3814:3878   */\n      tag_109\n        /* \"#utility.yul\":3871:3877   */\n      dup5\n        /* \"#utility.yul\":3814:3878   */\n      tag_47\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3798:3879   */\n      tag_46\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3789:3879   */\n      swap1\n      pop\n        /* \"#utility.yul\":3899:3904   */\n      dup1\n        /* \"#utility.yul\":3928:3934   */\n      dup4\n        /* \"#utility.yul\":3921:3926   */\n      dup3\n        /* \"#utility.yul\":3914:3935   */\n      mstore\n        /* \"#utility.yul\":3962:3966   */\n      0x20\n        /* \"#utility.yul\":3955:3960   */\n      dup3\n        /* \"#utility.yul\":3951:3967   */\n      add\n        /* \"#utility.yul\":3944:3967   */\n      swap1\n      pop\n        /* \"#utility.yul\":4015:4019   */\n      0x20\n        /* \"#utility.yul\":4007:4013   */\n      dup5\n        /* \"#utility.yul\":4003:4020   */\n      mul\n        /* \"#utility.yul\":3995:4001   */\n      dup4\n        /* \"#utility.yul\":3991:4021   */\n      add\n        /* \"#utility.yul\":4044:4047   */\n      dup6\n        /* \"#utility.yul\":4036:4042   */\n      dup2\n        /* \"#utility.yul\":4033:4048   */\n      gt\n        /* \"#utility.yul\":4030:4152   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":4063:4142   */\n      tag_111\n      tag_48\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":4030:4152   */\n    tag_110:\n        /* \"#utility.yul\":4178:4184   */\n      dup4\n        /* \"#utility.yul\":4161:4381   */\n    tag_112:\n        /* \"#utility.yul\":4195:4201   */\n      dup2\n        /* \"#utility.yul\":4190:4193   */\n      dup2\n        /* \"#utility.yul\":4187:4202   */\n      lt\n        /* \"#utility.yul\":4161:4381   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":4270:4273   */\n      dup1\n        /* \"#utility.yul\":4299:4336   */\n      tag_115\n        /* \"#utility.yul\":4332:4335   */\n      dup9\n        /* \"#utility.yul\":4320:4330   */\n      dup3\n        /* \"#utility.yul\":4299:4336   */\n      tag_51\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":4294:4297   */\n      dup5\n        /* \"#utility.yul\":4287:4337   */\n      mstore\n        /* \"#utility.yul\":4366:4370   */\n      0x20\n        /* \"#utility.yul\":4361:4364   */\n      dup5\n        /* \"#utility.yul\":4357:4371   */\n      add\n        /* \"#utility.yul\":4350:4371   */\n      swap4\n      pop\n        /* \"#utility.yul\":4237:4381   */\n      pop\n        /* \"#utility.yul\":4221:4225   */\n      0x20\n        /* \"#utility.yul\":4216:4219   */\n      dup2\n        /* \"#utility.yul\":4212:4226   */\n      add\n        /* \"#utility.yul\":4205:4226   */\n      swap1\n      pop\n        /* \"#utility.yul\":4161:4381   */\n      jump(tag_112)\n    tag_114:\n        /* \"#utility.yul\":4165:4186   */\n      pop\n        /* \"#utility.yul\":3779:4387   */\n      pop\n      pop\n        /* \"#utility.yul\":3677:4387   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4780   */\n    tag_53:\n        /* \"#utility.yul\":4481:4486   */\n      0x00\n        /* \"#utility.yul\":4530:4533   */\n      dup3\n        /* \"#utility.yul\":4523:4527   */\n      0x1f\n        /* \"#utility.yul\":4515:4521   */\n      dup4\n        /* \"#utility.yul\":4511:4528   */\n      add\n        /* \"#utility.yul\":4507:4534   */\n      slt\n        /* \"#utility.yul\":4497:4619   */\n      tag_117\n      jumpi\n        /* \"#utility.yul\":4538:4617   */\n      tag_118\n      tag_42\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4497:4619   */\n    tag_117:\n        /* \"#utility.yul\":4655:4661   */\n      dup2\n        /* \"#utility.yul\":4642:4662   */\n      calldataload\n        /* \"#utility.yul\":4680:4774   */\n      tag_119\n        /* \"#utility.yul\":4770:4773   */\n      dup5\n        /* \"#utility.yul\":4762:4768   */\n      dup3\n        /* \"#utility.yul\":4755:4759   */\n      0x20\n        /* \"#utility.yul\":4747:4753   */\n      dup7\n        /* \"#utility.yul\":4743:4760   */\n      add\n        /* \"#utility.yul\":4680:4774   */\n      tag_52\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":4671:4774   */\n      swap2\n      pop\n        /* \"#utility.yul\":4487:4780   */\n      pop\n        /* \"#utility.yul\":4410:4780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4786:4903   */\n    tag_54:\n        /* \"#utility.yul\":4895:4896   */\n      0x00\n        /* \"#utility.yul\":4892:4893   */\n      dup1\n        /* \"#utility.yul\":4885:4897   */\n      revert\n        /* \"#utility.yul\":4909:5216   */\n    tag_55:\n        /* \"#utility.yul\":4970:4974   */\n      0x00\n        /* \"#utility.yul\":5060:5078   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5052:5058   */\n      dup3\n        /* \"#utility.yul\":5049:5079   */\n      gt\n        /* \"#utility.yul\":5046:5102   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":5082:5100   */\n      tag_123\n      tag_44\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":5046:5102   */\n    tag_122:\n        /* \"#utility.yul\":5120:5149   */\n      tag_124\n        /* \"#utility.yul\":5142:5148   */\n      dup3\n        /* \"#utility.yul\":5120:5149   */\n      tag_43\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":5112:5149   */\n      swap1\n      pop\n        /* \"#utility.yul\":5204:5208   */\n      0x20\n        /* \"#utility.yul\":5198:5202   */\n      dup2\n        /* \"#utility.yul\":5194:5209   */\n      add\n        /* \"#utility.yul\":5186:5209   */\n      swap1\n      pop\n        /* \"#utility.yul\":4909:5216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5222:5376   */\n    tag_56:\n        /* \"#utility.yul\":5306:5312   */\n      dup3\n        /* \"#utility.yul\":5301:5304   */\n      dup2\n        /* \"#utility.yul\":5296:5299   */\n      dup4\n        /* \"#utility.yul\":5283:5313   */\n      calldatacopy\n        /* \"#utility.yul\":5368:5369   */\n      0x00\n        /* \"#utility.yul\":5359:5365   */\n      dup4\n        /* \"#utility.yul\":5354:5357   */\n      dup4\n        /* \"#utility.yul\":5350:5366   */\n      add\n        /* \"#utility.yul\":5343:5370   */\n      mstore\n        /* \"#utility.yul\":5222:5376   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5382:5792   */\n    tag_57:\n        /* \"#utility.yul\":5459:5464   */\n      0x00\n        /* \"#utility.yul\":5484:5549   */\n      tag_127\n        /* \"#utility.yul\":5500:5548   */\n      tag_128\n        /* \"#utility.yul\":5541:5547   */\n      dup5\n        /* \"#utility.yul\":5500:5548   */\n      tag_55\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":5484:5549   */\n      tag_46\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":5475:5549   */\n      swap1\n      pop\n        /* \"#utility.yul\":5572:5578   */\n      dup3\n        /* \"#utility.yul\":5565:5570   */\n      dup2\n        /* \"#utility.yul\":5558:5579   */\n      mstore\n        /* \"#utility.yul\":5610:5614   */\n      0x20\n        /* \"#utility.yul\":5603:5608   */\n      dup2\n        /* \"#utility.yul\":5599:5615   */\n      add\n        /* \"#utility.yul\":5648:5651   */\n      dup5\n        /* \"#utility.yul\":5639:5645   */\n      dup5\n        /* \"#utility.yul\":5634:5637   */\n      dup5\n        /* \"#utility.yul\":5630:5646   */\n      add\n        /* \"#utility.yul\":5627:5652   */\n      gt\n        /* \"#utility.yul\":5624:5736   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":5655:5734   */\n      tag_130\n      tag_54\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":5624:5736   */\n    tag_129:\n        /* \"#utility.yul\":5745:5786   */\n      tag_131\n        /* \"#utility.yul\":5779:5785   */\n      dup5\n        /* \"#utility.yul\":5774:5777   */\n      dup3\n        /* \"#utility.yul\":5769:5772   */\n      dup6\n        /* \"#utility.yul\":5745:5786   */\n      tag_56\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":5465:5792   */\n      pop\n        /* \"#utility.yul\":5382:5792   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5811:6149   */\n    tag_58:\n        /* \"#utility.yul\":5866:5871   */\n      0x00\n        /* \"#utility.yul\":5915:5918   */\n      dup3\n        /* \"#utility.yul\":5908:5912   */\n      0x1f\n        /* \"#utility.yul\":5900:5906   */\n      dup4\n        /* \"#utility.yul\":5896:5913   */\n      add\n        /* \"#utility.yul\":5892:5919   */\n      slt\n        /* \"#utility.yul\":5882:6004   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":5923:6002   */\n      tag_134\n      tag_42\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":5882:6004   */\n    tag_133:\n        /* \"#utility.yul\":6040:6046   */\n      dup2\n        /* \"#utility.yul\":6027:6047   */\n      calldataload\n        /* \"#utility.yul\":6065:6143   */\n      tag_135\n        /* \"#utility.yul\":6139:6142   */\n      dup5\n        /* \"#utility.yul\":6131:6137   */\n      dup3\n        /* \"#utility.yul\":6124:6128   */\n      0x20\n        /* \"#utility.yul\":6116:6122   */\n      dup7\n        /* \"#utility.yul\":6112:6129   */\n      add\n        /* \"#utility.yul\":6065:6143   */\n      tag_57\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":6056:6143   */\n      swap2\n      pop\n        /* \"#utility.yul\":5872:6149   */\n      pop\n        /* \"#utility.yul\":5811:6149   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6155:7664   */\n    tag_14:\n        /* \"#utility.yul\":6309:6315   */\n      0x00\n        /* \"#utility.yul\":6317:6323   */\n      dup1\n        /* \"#utility.yul\":6325:6331   */\n      0x00\n        /* \"#utility.yul\":6333:6339   */\n      dup1\n        /* \"#utility.yul\":6341:6347   */\n      0x00\n        /* \"#utility.yul\":6390:6393   */\n      0xa0\n        /* \"#utility.yul\":6378:6387   */\n      dup7\n        /* \"#utility.yul\":6369:6376   */\n      dup9\n        /* \"#utility.yul\":6365:6388   */\n      sub\n        /* \"#utility.yul\":6361:6394   */\n      slt\n        /* \"#utility.yul\":6358:6478   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":6397:6476   */\n      tag_138\n      tag_31\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":6358:6478   */\n    tag_137:\n        /* \"#utility.yul\":6517:6518   */\n      0x00\n        /* \"#utility.yul\":6542:6595   */\n      tag_139\n        /* \"#utility.yul\":6587:6594   */\n      dup9\n        /* \"#utility.yul\":6578:6584   */\n      dup3\n        /* \"#utility.yul\":6567:6576   */\n      dup10\n        /* \"#utility.yul\":6563:6585   */\n      add\n        /* \"#utility.yul\":6542:6595   */\n      tag_41\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":6532:6595   */\n      swap6\n      pop\n        /* \"#utility.yul\":6488:6605   */\n      pop\n        /* \"#utility.yul\":6644:6646   */\n      0x20\n        /* \"#utility.yul\":6670:6723   */\n      tag_140\n        /* \"#utility.yul\":6715:6722   */\n      dup9\n        /* \"#utility.yul\":6706:6712   */\n      dup3\n        /* \"#utility.yul\":6695:6704   */\n      dup10\n        /* \"#utility.yul\":6691:6713   */\n      add\n        /* \"#utility.yul\":6670:6723   */\n      tag_41\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":6660:6723   */\n      swap5\n      pop\n        /* \"#utility.yul\":6615:6733   */\n      pop\n        /* \"#utility.yul\":6800:6802   */\n      0x40\n        /* \"#utility.yul\":6789:6798   */\n      dup7\n        /* \"#utility.yul\":6785:6803   */\n      add\n        /* \"#utility.yul\":6772:6804   */\n      calldataload\n        /* \"#utility.yul\":6831:6849   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6823:6829   */\n      dup2\n        /* \"#utility.yul\":6820:6850   */\n      gt\n        /* \"#utility.yul\":6817:6934   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":6853:6932   */\n      tag_142\n      tag_32\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":6817:6934   */\n    tag_141:\n        /* \"#utility.yul\":6958:7036   */\n      tag_143\n        /* \"#utility.yul\":7028:7035   */\n      dup9\n        /* \"#utility.yul\":7019:7025   */\n      dup3\n        /* \"#utility.yul\":7008:7017   */\n      dup10\n        /* \"#utility.yul\":7004:7026   */\n      add\n        /* \"#utility.yul\":6958:7036   */\n      tag_53\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":6948:7036   */\n      swap4\n      pop\n        /* \"#utility.yul\":6743:7046   */\n      pop\n        /* \"#utility.yul\":7113:7115   */\n      0x60\n        /* \"#utility.yul\":7102:7111   */\n      dup7\n        /* \"#utility.yul\":7098:7116   */\n      add\n        /* \"#utility.yul\":7085:7117   */\n      calldataload\n        /* \"#utility.yul\":7144:7162   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7136:7142   */\n      dup2\n        /* \"#utility.yul\":7133:7163   */\n      gt\n        /* \"#utility.yul\":7130:7247   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":7166:7245   */\n      tag_145\n      tag_32\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":7130:7247   */\n    tag_144:\n        /* \"#utility.yul\":7271:7349   */\n      tag_146\n        /* \"#utility.yul\":7341:7348   */\n      dup9\n        /* \"#utility.yul\":7332:7338   */\n      dup3\n        /* \"#utility.yul\":7321:7330   */\n      dup10\n        /* \"#utility.yul\":7317:7339   */\n      add\n        /* \"#utility.yul\":7271:7349   */\n      tag_53\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":7261:7349   */\n      swap3\n      pop\n        /* \"#utility.yul\":7056:7359   */\n      pop\n        /* \"#utility.yul\":7426:7429   */\n      0x80\n        /* \"#utility.yul\":7415:7424   */\n      dup7\n        /* \"#utility.yul\":7411:7430   */\n      add\n        /* \"#utility.yul\":7398:7431   */\n      calldataload\n        /* \"#utility.yul\":7458:7476   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7450:7456   */\n      dup2\n        /* \"#utility.yul\":7447:7477   */\n      gt\n        /* \"#utility.yul\":7444:7561   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":7480:7559   */\n      tag_148\n      tag_32\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":7444:7561   */\n    tag_147:\n        /* \"#utility.yul\":7585:7647   */\n      tag_149\n        /* \"#utility.yul\":7639:7646   */\n      dup9\n        /* \"#utility.yul\":7630:7636   */\n      dup3\n        /* \"#utility.yul\":7619:7628   */\n      dup10\n        /* \"#utility.yul\":7615:7637   */\n      add\n        /* \"#utility.yul\":7585:7647   */\n      tag_58\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":7575:7647   */\n      swap2\n      pop\n        /* \"#utility.yul\":7369:7657   */\n      pop\n        /* \"#utility.yul\":6155:7664   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7670:7785   */\n    tag_59:\n        /* \"#utility.yul\":7755:7778   */\n      tag_151\n        /* \"#utility.yul\":7772:7777   */\n      dup2\n        /* \"#utility.yul\":7755:7778   */\n      tag_33\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":7750:7753   */\n      dup3\n        /* \"#utility.yul\":7743:7779   */\n      mstore\n        /* \"#utility.yul\":7670:7785   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8009   */\n    tag_17:\n        /* \"#utility.yul\":7882:7886   */\n      0x00\n        /* \"#utility.yul\":7920:7922   */\n      0x20\n        /* \"#utility.yul\":7909:7918   */\n      dup3\n        /* \"#utility.yul\":7905:7923   */\n      add\n        /* \"#utility.yul\":7897:7923   */\n      swap1\n      pop\n        /* \"#utility.yul\":7933:8002   */\n      tag_153\n        /* \"#utility.yul\":7999:8000   */\n      0x00\n        /* \"#utility.yul\":7988:7997   */\n      dup4\n        /* \"#utility.yul\":7984:8001   */\n      add\n        /* \"#utility.yul\":7975:7981   */\n      dup5\n        /* \"#utility.yul\":7933:8002   */\n      tag_59\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":7791:8009   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8015:9104   */\n    tag_20:\n        /* \"#utility.yul\":8119:8125   */\n      0x00\n        /* \"#utility.yul\":8127:8133   */\n      dup1\n        /* \"#utility.yul\":8135:8141   */\n      0x00\n        /* \"#utility.yul\":8143:8149   */\n      dup1\n        /* \"#utility.yul\":8151:8157   */\n      0x00\n        /* \"#utility.yul\":8200:8203   */\n      0xa0\n        /* \"#utility.yul\":8188:8197   */\n      dup7\n        /* \"#utility.yul\":8179:8186   */\n      dup9\n        /* \"#utility.yul\":8175:8198   */\n      sub\n        /* \"#utility.yul\":8171:8204   */\n      slt\n        /* \"#utility.yul\":8168:8288   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":8207:8286   */\n      tag_156\n      tag_31\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":8168:8288   */\n    tag_155:\n        /* \"#utility.yul\":8327:8328   */\n      0x00\n        /* \"#utility.yul\":8352:8405   */\n      tag_157\n        /* \"#utility.yul\":8397:8404   */\n      dup9\n        /* \"#utility.yul\":8388:8394   */\n      dup3\n        /* \"#utility.yul\":8377:8386   */\n      dup10\n        /* \"#utility.yul\":8373:8395   */\n      add\n        /* \"#utility.yul\":8352:8405   */\n      tag_41\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":8342:8405   */\n      swap6\n      pop\n        /* \"#utility.yul\":8298:8415   */\n      pop\n        /* \"#utility.yul\":8454:8456   */\n      0x20\n        /* \"#utility.yul\":8480:8533   */\n      tag_158\n        /* \"#utility.yul\":8525:8532   */\n      dup9\n        /* \"#utility.yul\":8516:8522   */\n      dup3\n        /* \"#utility.yul\":8505:8514   */\n      dup10\n        /* \"#utility.yul\":8501:8523   */\n      add\n        /* \"#utility.yul\":8480:8533   */\n      tag_41\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":8470:8533   */\n      swap5\n      pop\n        /* \"#utility.yul\":8425:8543   */\n      pop\n        /* \"#utility.yul\":8582:8584   */\n      0x40\n        /* \"#utility.yul\":8608:8661   */\n      tag_159\n        /* \"#utility.yul\":8653:8660   */\n      dup9\n        /* \"#utility.yul\":8644:8650   */\n      dup3\n        /* \"#utility.yul\":8633:8642   */\n      dup10\n        /* \"#utility.yul\":8629:8651   */\n      add\n        /* \"#utility.yul\":8608:8661   */\n      tag_51\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":8598:8661   */\n      swap4\n      pop\n        /* \"#utility.yul\":8553:8671   */\n      pop\n        /* \"#utility.yul\":8710:8712   */\n      0x60\n        /* \"#utility.yul\":8736:8789   */\n      tag_160\n        /* \"#utility.yul\":8781:8788   */\n      dup9\n        /* \"#utility.yul\":8772:8778   */\n      dup3\n        /* \"#utility.yul\":8761:8770   */\n      dup10\n        /* \"#utility.yul\":8757:8779   */\n      add\n        /* \"#utility.yul\":8736:8789   */\n      tag_51\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":8726:8789   */\n      swap3\n      pop\n        /* \"#utility.yul\":8681:8799   */\n      pop\n        /* \"#utility.yul\":8866:8869   */\n      0x80\n        /* \"#utility.yul\":8855:8864   */\n      dup7\n        /* \"#utility.yul\":8851:8870   */\n      add\n        /* \"#utility.yul\":8838:8871   */\n      calldataload\n        /* \"#utility.yul\":8898:8916   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8890:8896   */\n      dup2\n        /* \"#utility.yul\":8887:8917   */\n      gt\n        /* \"#utility.yul\":8884:9001   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":8920:8999   */\n      tag_162\n      tag_32\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":8884:9001   */\n    tag_161:\n        /* \"#utility.yul\":9025:9087   */\n      tag_163\n        /* \"#utility.yul\":9079:9086   */\n      dup9\n        /* \"#utility.yul\":9070:9076   */\n      dup3\n        /* \"#utility.yul\":9059:9068   */\n      dup10\n        /* \"#utility.yul\":9055:9077   */\n      add\n        /* \"#utility.yul\":9025:9087   */\n      tag_58\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":9015:9087   */\n      swap2\n      pop\n        /* \"#utility.yul\":8809:9097   */\n      pop\n        /* \"#utility.yul\":8015:9104   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203ad8afb3e654e049f97dab3c9e7325633e509d9abd0a6e5b1ab87375c0c3af5364736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061071b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c8114610076578063f23a6e61146100a6575b600080fd5b610060600480360381019061005b9190610250565b6100d6565b60405161006d9190610298565b60405180910390f35b610090600480360381019061008b9190610555565b610150565b60405161009d9190610633565b60405180910390f35b6100c060048036038101906100bb919061064e565b610165565b6040516100cd9190610633565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061014957506101488261017a565b5b9050919050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61022d816101f8565b811461023857600080fd5b50565b60008135905061024a81610224565b92915050565b600060208284031215610266576102656101ee565b5b60006102748482850161023b565b91505092915050565b60008115159050919050565b6102928161027d565b82525050565b60006020820190506102ad6000830184610289565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102de826102b3565b9050919050565b6102ee816102d3565b81146102f957600080fd5b50565b60008135905061030b816102e5565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61035f82610316565b810181811067ffffffffffffffff8211171561037e5761037d610327565b5b80604052505050565b60006103916101e4565b905061039d8282610356565b919050565b600067ffffffffffffffff8211156103bd576103bc610327565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6103e6816103d3565b81146103f157600080fd5b50565b600081359050610403816103dd565b92915050565b600061041c610417846103a2565b610387565b9050808382526020820190506020840283018581111561043f5761043e6103ce565b5b835b81811015610468578061045488826103f4565b845260208401935050602081019050610441565b5050509392505050565b600082601f83011261048757610486610311565b5b8135610497848260208601610409565b91505092915050565b600080fd5b600067ffffffffffffffff8211156104c0576104bf610327565b5b6104c982610316565b9050602081019050919050565b82818337600083830152505050565b60006104f86104f3846104a5565b610387565b905082815260208101848484011115610514576105136104a0565b5b61051f8482856104d6565b509392505050565b600082601f83011261053c5761053b610311565b5b813561054c8482602086016104e5565b91505092915050565b600080600080600060a08688031215610571576105706101ee565b5b600061057f888289016102fc565b9550506020610590888289016102fc565b945050604086013567ffffffffffffffff8111156105b1576105b06101f3565b5b6105bd88828901610472565b935050606086013567ffffffffffffffff8111156105de576105dd6101f3565b5b6105ea88828901610472565b925050608086013567ffffffffffffffff81111561060b5761060a6101f3565b5b61061788828901610527565b9150509295509295909350565b61062d816101f8565b82525050565b60006020820190506106486000830184610624565b92915050565b600080600080600060a0868803121561066a576106696101ee565b5b6000610678888289016102fc565b9550506020610689888289016102fc565b945050604061069a888289016103f4565b93505060606106ab888289016103f4565b925050608086013567ffffffffffffffff8111156106cc576106cb6101f3565b5b6106d888828901610527565b915050929550929590935056fea26469706673582212203ad8afb3e654e049f97dab3c9e7325633e509d9abd0a6e5b1ab87375c0c3af5364736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71B DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x250 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x149 JUMPI POP PUSH2 0x148 DUP3 PUSH2 0x17A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24A DUP2 PUSH2 0x224 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x266 JUMPI PUSH2 0x265 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x274 DUP5 DUP3 DUP6 ADD PUSH2 0x23B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x292 DUP2 PUSH2 0x27D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x289 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE DUP3 PUSH2 0x2B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EE DUP2 PUSH2 0x2D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30B DUP2 PUSH2 0x2E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x35F DUP3 PUSH2 0x316 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x37E JUMPI PUSH2 0x37D PUSH2 0x327 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391 PUSH2 0x1E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x39D DUP3 DUP3 PUSH2 0x356 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3BD JUMPI PUSH2 0x3BC PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E6 DUP2 PUSH2 0x3D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x403 DUP2 PUSH2 0x3DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41C PUSH2 0x417 DUP5 PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x43F JUMPI PUSH2 0x43E PUSH2 0x3CE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x468 JUMPI DUP1 PUSH2 0x454 DUP9 DUP3 PUSH2 0x3F4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x441 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x487 JUMPI PUSH2 0x486 PUSH2 0x311 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x497 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x409 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4BF PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH2 0x4C9 DUP3 PUSH2 0x316 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F8 PUSH2 0x4F3 DUP5 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x514 JUMPI PUSH2 0x513 PUSH2 0x4A0 JUMP JUMPDEST JUMPDEST PUSH2 0x51F DUP5 DUP3 DUP6 PUSH2 0x4D6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x53C JUMPI PUSH2 0x53B PUSH2 0x311 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x54C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x571 JUMPI PUSH2 0x570 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x57F DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x590 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B1 JUMPI PUSH2 0x5B0 PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x5BD DUP9 DUP3 DUP10 ADD PUSH2 0x472 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5DE JUMPI PUSH2 0x5DD PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x5EA DUP9 DUP3 DUP10 ADD PUSH2 0x472 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x60B JUMPI PUSH2 0x60A PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x617 DUP9 DUP3 DUP10 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x62D DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x648 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x66A JUMPI PUSH2 0x669 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x678 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x689 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x69A DUP9 DUP3 DUP10 ADD PUSH2 0x3F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x6AB DUP9 DUP3 DUP10 ADD PUSH2 0x3F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CC JUMPI PUSH2 0x6CB PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x6D8 DUP9 DUP3 DUP10 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xD8 0xAF 0xB3 0xE6 SLOAD 0xE0 0x49 0xF9 PUSH30 0xAB3C9E7325633E509D9ABD0A6E5B1AB87375C0C3AF5364736F6C63430008 0xE STOP CALLER ",
							"sourceMap": "451:522:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC1155BatchReceived_317": {
									"entryPoint": 336,
									"id": 317,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_294": {
									"entryPoint": 357,
									"id": 294,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@supportsInterface_351": {
									"entryPoint": 214,
									"id": 351,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_636": {
									"entryPoint": 378,
									"id": 636,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 1253,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 1319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 1365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 1614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 1572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 1587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 484,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 1238,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 974,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1184,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 499,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 494,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9107:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1555:7:13",
														"type": ""
													}
												],
												"src": "1518:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1695:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1705:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1716:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1677:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1687:7:13",
														"type": ""
													}
												],
												"src": "1650:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1795:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1852:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:43:13"
															},
															"nodeType": "YulIf",
															"src": "1805:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1788:5:13",
														"type": ""
													}
												],
												"src": "1752:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1932:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1942:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1951:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1910:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1918:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1926:5:13",
														"type": ""
													}
												],
												"src": "1880:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2114:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2134:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2124:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2124:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2124:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "2025:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2196:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2206:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2240:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2236:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2236:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2179:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2189:6:13",
														"type": ""
													}
												],
												"src": "2148:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2284:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2301:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2304:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2294:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2398:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2401:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2391:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2391:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2391:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2422:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2425:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2415:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2415:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2256:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2485:238:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2495:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2517:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2547:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2525:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2525:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2513:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2499:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2664:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2666:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2666:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2666:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2607:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2619:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2604:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2604:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2643:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2655:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2640:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2640:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2601:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2601:62:13"
															},
															"nodeType": "YulIf",
															"src": "2598:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2702:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2706:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2695:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2695:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2471:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2479:4:13",
														"type": ""
													}
												],
												"src": "2442:281:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2770:88:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2780:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2790:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2790:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2780:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2839:6:13"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2847:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2819:19:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2819:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2819:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2754:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2763:6:13",
														"type": ""
													}
												],
												"src": "2729:129:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2946:229:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3051:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3053:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3053:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3053:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3023:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3031:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3020:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3020:30:13"
															},
															"nodeType": "YulIf",
															"src": "3017:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3083:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3095:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3103:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3091:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3091:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3083:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3145:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3157:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3163:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3153:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3153:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3145:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2930:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2941:4:13",
														"type": ""
													}
												],
												"src": "2864:311:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3270:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3287:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3290:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3280:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3280:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3280:12:13"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "3181:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3349:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3359:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3370:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3359:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3331:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3341:7:13",
														"type": ""
													}
												],
												"src": "3304:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3430:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3487:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3496:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3499:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3489:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3489:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3489:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3453:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3478:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3460:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3460:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3450:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3450:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3443:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3443:43:13"
															},
															"nodeType": "YulIf",
															"src": "3440:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3423:5:13",
														"type": ""
													}
												],
												"src": "3387:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3567:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3577:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3599:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3586:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3586:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3577:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3642:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3615:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3615:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3615:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3545:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3553:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3561:5:13",
														"type": ""
													}
												],
												"src": "3515:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3779:608:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3789:90:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3871:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3814:56:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3814:64:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3798:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3798:81:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3789:5:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3888:16:13",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "3899:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3892:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3921:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3928:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3914:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3914:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3914:21:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3944:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3955:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3962:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3951:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3951:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3944:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3977:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3995:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4007:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "4003:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4003:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3991:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3991:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3981:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4049:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "4063:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4063:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4063:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4036:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4044:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4033:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4033:15:13"
															},
															"nodeType": "YulIf",
															"src": "4030:122:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:144:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4252:21:13",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "4270:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "4256:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4294:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "4320:10:13"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "4332:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "4299:20:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4299:37:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4287:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4287:50:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4287:50:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4350:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4361:3:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4366:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4357:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4357:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4350:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4190:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4195:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4187:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4187:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4203:25:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4205:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4216:3:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4221:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4212:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4212:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4205:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4165:21:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4167:17:13",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "4178:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "4171:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4161:220:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3749:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3757:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3765:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3773:5:13",
														"type": ""
													}
												],
												"src": "3677:710:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4487:293:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4536:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4538:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4538:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4538:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4515:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4523:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4511:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4511:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4530:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4507:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4507:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4500:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:35:13"
															},
															"nodeType": "YulIf",
															"src": "4497:122:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4628:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4655:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4642:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4642:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4632:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4671:103:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4747:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4755:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4743:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4743:17:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4762:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4770:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4680:62:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4680:94:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4671:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4465:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4473:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4481:5:13",
														"type": ""
													}
												],
												"src": "4410:370:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4875:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4892:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4895:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4885:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4885:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4885:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "4786:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4975:241:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5080:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5082:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5082:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5082:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5052:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5060:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5049:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5049:30:13"
															},
															"nodeType": "YulIf",
															"src": "5046:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5112:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5142:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "5120:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5120:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5112:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5186:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5198:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5204:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5194:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5194:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5186:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4959:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4970:4:13",
														"type": ""
													}
												],
												"src": "4909:307:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5273:103:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5296:3:13"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5301:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5306:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "5283:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5283:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5283:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5354:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5359:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5350:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5350:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5368:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5343:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5343:27:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5343:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5255:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "5260:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5265:6:13",
														"type": ""
													}
												],
												"src": "5222:154:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5465:327:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5475:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5541:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5500:40:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5500:48:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5484:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5484:65:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5475:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "5565:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5572:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5558:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5558:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5558:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5588:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "5603:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5610:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5599:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5599:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5592:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5653:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "5655:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5655:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5655:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5634:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5639:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5630:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5630:16:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5648:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5627:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5627:25:13"
															},
															"nodeType": "YulIf",
															"src": "5624:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5769:3:13"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5774:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5779:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5745:23:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5745:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5745:41:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5438:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5443:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5451:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5459:5:13",
														"type": ""
													}
												],
												"src": "5382:410:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5872:277:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5921:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "5923:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5923:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5923:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5900:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5908:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5896:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5896:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5915:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5892:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5892:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5885:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5885:35:13"
															},
															"nodeType": "YulIf",
															"src": "5882:122:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6013:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6040:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6027:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6027:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6017:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6056:87:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6116:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6124:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6112:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6112:17:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6131:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6139:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6065:46:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6065:78:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6056:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5850:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5858:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5866:5:13",
														"type": ""
													}
												],
												"src": "5811:338:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6348:1316:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6395:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6397:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6397:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6397:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6369:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6378:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6365:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6365:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6390:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6361:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6361:33:13"
															},
															"nodeType": "YulIf",
															"src": "6358:120:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "6488:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6503:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6517:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6507:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6532:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6567:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6578:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6563:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6563:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6587:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6542:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6542:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6532:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6615:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6630:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6644:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6634:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6660:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6695:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6706:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6691:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6691:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6715:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6670:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6670:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6660:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6743:303:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6758:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6789:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6800:2:13",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6785:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6785:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6772:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6772:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6762:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6851:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6853:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6853:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6853:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6823:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6831:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6820:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6820:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "6817:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6948:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7008:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7019:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7004:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7004:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7028:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6958:45:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6958:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6948:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7056:303:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7071:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7102:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7113:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7098:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7098:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7085:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7085:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7075:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7164:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7166:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7166:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7166:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7136:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7144:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7133:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7133:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "7130:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7261:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7321:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7332:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7317:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7317:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7341:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7271:45:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7271:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "7261:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7369:288:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7384:47:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7415:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7426:3:13",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7411:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7411:19:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7398:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7398:33:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7388:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7478:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7480:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7480:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7480:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7450:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7458:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7447:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7447:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "7444:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7575:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7619:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7630:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7615:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7615:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7639:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7585:29:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7585:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "7575:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6286:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6297:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6309:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6317:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6325:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6333:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6341:6:13",
														"type": ""
													}
												],
												"src": "6155:1509:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7733:52:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7750:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7772:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "7755:16:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7755:23:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7743:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7743:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7743:36:13"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7721:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7728:3:13",
														"type": ""
													}
												],
												"src": "7670:115:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7887:122:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7897:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7909:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7920:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7905:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7905:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7897:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7975:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7988:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7999:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7984:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7984:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7933:41:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7933:69:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7933:69:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7859:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7871:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7882:4:13",
														"type": ""
													}
												],
												"src": "7791:218:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8158:946:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8205:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8207:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8207:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8207:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8179:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8188:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8175:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8175:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8200:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8171:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8171:33:13"
															},
															"nodeType": "YulIf",
															"src": "8168:120:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "8298:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8313:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8327:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8317:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8342:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8377:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8388:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8373:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8373:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8397:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8352:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8352:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8342:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8425:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8440:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8454:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8444:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8470:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8505:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8516:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8501:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8501:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8525:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8480:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8480:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8470:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8553:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8568:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8582:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8572:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8598:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8633:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8644:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8629:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8629:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8653:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8608:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8608:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8598:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8681:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8696:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8710:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8700:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8726:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8761:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8772:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8757:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8757:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8781:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8736:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8736:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "8726:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8809:288:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8824:47:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8855:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8866:3:13",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8851:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8851:19:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8838:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8838:33:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8828:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8918:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8920:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8920:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8920:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8890:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8898:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8887:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8887:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "8884:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9015:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9059:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9070:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9055:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9055:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9079:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9025:29:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9025:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "9015:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8096:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8107:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8119:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8127:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8135:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8143:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8151:6:13",
														"type": ""
													}
												],
												"src": "8015:1089:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c8114610076578063f23a6e61146100a6575b600080fd5b610060600480360381019061005b9190610250565b6100d6565b60405161006d9190610298565b60405180910390f35b610090600480360381019061008b9190610555565b610150565b60405161009d9190610633565b60405180910390f35b6100c060048036038101906100bb919061064e565b610165565b6040516100cd9190610633565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061014957506101488261017a565b5b9050919050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61022d816101f8565b811461023857600080fd5b50565b60008135905061024a81610224565b92915050565b600060208284031215610266576102656101ee565b5b60006102748482850161023b565b91505092915050565b60008115159050919050565b6102928161027d565b82525050565b60006020820190506102ad6000830184610289565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102de826102b3565b9050919050565b6102ee816102d3565b81146102f957600080fd5b50565b60008135905061030b816102e5565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61035f82610316565b810181811067ffffffffffffffff8211171561037e5761037d610327565b5b80604052505050565b60006103916101e4565b905061039d8282610356565b919050565b600067ffffffffffffffff8211156103bd576103bc610327565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6103e6816103d3565b81146103f157600080fd5b50565b600081359050610403816103dd565b92915050565b600061041c610417846103a2565b610387565b9050808382526020820190506020840283018581111561043f5761043e6103ce565b5b835b81811015610468578061045488826103f4565b845260208401935050602081019050610441565b5050509392505050565b600082601f83011261048757610486610311565b5b8135610497848260208601610409565b91505092915050565b600080fd5b600067ffffffffffffffff8211156104c0576104bf610327565b5b6104c982610316565b9050602081019050919050565b82818337600083830152505050565b60006104f86104f3846104a5565b610387565b905082815260208101848484011115610514576105136104a0565b5b61051f8482856104d6565b509392505050565b600082601f83011261053c5761053b610311565b5b813561054c8482602086016104e5565b91505092915050565b600080600080600060a08688031215610571576105706101ee565b5b600061057f888289016102fc565b9550506020610590888289016102fc565b945050604086013567ffffffffffffffff8111156105b1576105b06101f3565b5b6105bd88828901610472565b935050606086013567ffffffffffffffff8111156105de576105dd6101f3565b5b6105ea88828901610472565b925050608086013567ffffffffffffffff81111561060b5761060a6101f3565b5b61061788828901610527565b9150509295509295909350565b61062d816101f8565b82525050565b60006020820190506106486000830184610624565b92915050565b600080600080600060a0868803121561066a576106696101ee565b5b6000610678888289016102fc565b9550506020610689888289016102fc565b945050604061069a888289016103f4565b93505060606106ab888289016103f4565b925050608086013567ffffffffffffffff8111156106cc576106cb6101f3565b5b6106d888828901610527565b915050929550929590935056fea26469706673582212203ad8afb3e654e049f97dab3c9e7325633e509d9abd0a6e5b1ab87375c0c3af5364736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x250 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x149 JUMPI POP PUSH2 0x148 DUP3 PUSH2 0x17A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24A DUP2 PUSH2 0x224 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x266 JUMPI PUSH2 0x265 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x274 DUP5 DUP3 DUP6 ADD PUSH2 0x23B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x292 DUP2 PUSH2 0x27D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x289 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE DUP3 PUSH2 0x2B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EE DUP2 PUSH2 0x2D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30B DUP2 PUSH2 0x2E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x35F DUP3 PUSH2 0x316 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x37E JUMPI PUSH2 0x37D PUSH2 0x327 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391 PUSH2 0x1E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x39D DUP3 DUP3 PUSH2 0x356 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3BD JUMPI PUSH2 0x3BC PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E6 DUP2 PUSH2 0x3D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x403 DUP2 PUSH2 0x3DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41C PUSH2 0x417 DUP5 PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x43F JUMPI PUSH2 0x43E PUSH2 0x3CE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x468 JUMPI DUP1 PUSH2 0x454 DUP9 DUP3 PUSH2 0x3F4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x441 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x487 JUMPI PUSH2 0x486 PUSH2 0x311 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x497 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x409 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4BF PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH2 0x4C9 DUP3 PUSH2 0x316 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F8 PUSH2 0x4F3 DUP5 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x514 JUMPI PUSH2 0x513 PUSH2 0x4A0 JUMP JUMPDEST JUMPDEST PUSH2 0x51F DUP5 DUP3 DUP6 PUSH2 0x4D6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x53C JUMPI PUSH2 0x53B PUSH2 0x311 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x54C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x571 JUMPI PUSH2 0x570 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x57F DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x590 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B1 JUMPI PUSH2 0x5B0 PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x5BD DUP9 DUP3 DUP10 ADD PUSH2 0x472 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5DE JUMPI PUSH2 0x5DD PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x5EA DUP9 DUP3 DUP10 ADD PUSH2 0x472 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x60B JUMPI PUSH2 0x60A PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x617 DUP9 DUP3 DUP10 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x62D DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x648 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x66A JUMPI PUSH2 0x669 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x678 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x689 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x69A DUP9 DUP3 DUP10 ADD PUSH2 0x3F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x6AB DUP9 DUP3 DUP10 ADD PUSH2 0x3F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CC JUMPI PUSH2 0x6CB PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x6D8 DUP9 DUP3 DUP10 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xD8 0xAF 0xB3 0xE6 SLOAD 0xE0 0x49 0xF9 PUSH30 0xAB3C9E7325633E509D9ABD0A6E5B1AB87375C0C3AF5364736F6C63430008 0xE STOP CALLER ",
							"sourceMap": "451:522:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;724:247:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;499:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;387:221:4;489:4;527:34;512:49;;;:11;:49;;;;:89;;;;565:36;589:11;565:23;:36::i;:::-;512:89;505:96;;387:221;;;:::o;724:247:3:-;903:6;928:36;;;921:43;;724:247;;;;;;;:::o;499:219::-;655:6;680:31;;;673:38;;499:219;;;;;;;:::o;829:155:10:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:117::-;2134:1;2131;2124:12;2148:102;2189:6;2240:2;2236:7;2231:2;2224:5;2220:14;2216:28;2206:38;;2148:102;;;:::o;2256:180::-;2304:77;2301:1;2294:88;2401:4;2398:1;2391:15;2425:4;2422:1;2415:15;2442:281;2525:27;2547:4;2525:27;:::i;:::-;2517:6;2513:40;2655:6;2643:10;2640:22;2619:18;2607:10;2604:34;2601:62;2598:88;;;2666:18;;:::i;:::-;2598:88;2706:10;2702:2;2695:22;2485:238;2442:281;;:::o;2729:129::-;2763:6;2790:20;;:::i;:::-;2780:30;;2819:33;2847:4;2839:6;2819:33;:::i;:::-;2729:129;;;:::o;2864:311::-;2941:4;3031:18;3023:6;3020:30;3017:56;;;3053:18;;:::i;:::-;3017:56;3103:4;3095:6;3091:17;3083:25;;3163:4;3157;3153:15;3145:23;;2864:311;;;:::o;3181:117::-;3290:1;3287;3280:12;3304:77;3341:7;3370:5;3359:16;;3304:77;;;:::o;3387:122::-;3460:24;3478:5;3460:24;:::i;:::-;3453:5;3450:35;3440:63;;3499:1;3496;3489:12;3440:63;3387:122;:::o;3515:139::-;3561:5;3599:6;3586:20;3577:29;;3615:33;3642:5;3615:33;:::i;:::-;3515:139;;;;:::o;3677:710::-;3773:5;3798:81;3814:64;3871:6;3814:64;:::i;:::-;3798:81;:::i;:::-;3789:90;;3899:5;3928:6;3921:5;3914:21;3962:4;3955:5;3951:16;3944:23;;4015:4;4007:6;4003:17;3995:6;3991:30;4044:3;4036:6;4033:15;4030:122;;;4063:79;;:::i;:::-;4030:122;4178:6;4161:220;4195:6;4190:3;4187:15;4161:220;;;4270:3;4299:37;4332:3;4320:10;4299:37;:::i;:::-;4294:3;4287:50;4366:4;4361:3;4357:14;4350:21;;4237:144;4221:4;4216:3;4212:14;4205:21;;4161:220;;;4165:21;3779:608;;3677:710;;;;;:::o;4410:370::-;4481:5;4530:3;4523:4;4515:6;4511:17;4507:27;4497:122;;4538:79;;:::i;:::-;4497:122;4655:6;4642:20;4680:94;4770:3;4762:6;4755:4;4747:6;4743:17;4680:94;:::i;:::-;4671:103;;4487:293;4410:370;;;;:::o;4786:117::-;4895:1;4892;4885:12;4909:307;4970:4;5060:18;5052:6;5049:30;5046:56;;;5082:18;;:::i;:::-;5046:56;5120:29;5142:6;5120:29;:::i;:::-;5112:37;;5204:4;5198;5194:15;5186:23;;4909:307;;;:::o;5222:154::-;5306:6;5301:3;5296;5283:30;5368:1;5359:6;5354:3;5350:16;5343:27;5222:154;;;:::o;5382:410::-;5459:5;5484:65;5500:48;5541:6;5500:48;:::i;:::-;5484:65;:::i;:::-;5475:74;;5572:6;5565:5;5558:21;5610:4;5603:5;5599:16;5648:3;5639:6;5634:3;5630:16;5627:25;5624:112;;;5655:79;;:::i;:::-;5624:112;5745:41;5779:6;5774:3;5769;5745:41;:::i;:::-;5465:327;5382:410;;;;;:::o;5811:338::-;5866:5;5915:3;5908:4;5900:6;5896:17;5892:27;5882:122;;5923:79;;:::i;:::-;5882:122;6040:6;6027:20;6065:78;6139:3;6131:6;6124:4;6116:6;6112:17;6065:78;:::i;:::-;6056:87;;5872:277;5811:338;;;;:::o;6155:1509::-;6309:6;6317;6325;6333;6341;6390:3;6378:9;6369:7;6365:23;6361:33;6358:120;;;6397:79;;:::i;:::-;6358:120;6517:1;6542:53;6587:7;6578:6;6567:9;6563:22;6542:53;:::i;:::-;6532:63;;6488:117;6644:2;6670:53;6715:7;6706:6;6695:9;6691:22;6670:53;:::i;:::-;6660:63;;6615:118;6800:2;6789:9;6785:18;6772:32;6831:18;6823:6;6820:30;6817:117;;;6853:79;;:::i;:::-;6817:117;6958:78;7028:7;7019:6;7008:9;7004:22;6958:78;:::i;:::-;6948:88;;6743:303;7113:2;7102:9;7098:18;7085:32;7144:18;7136:6;7133:30;7130:117;;;7166:79;;:::i;:::-;7130:117;7271:78;7341:7;7332:6;7321:9;7317:22;7271:78;:::i;:::-;7261:88;;7056:303;7426:3;7415:9;7411:19;7398:33;7458:18;7450:6;7447:30;7444:117;;;7480:79;;:::i;:::-;7444:117;7585:62;7639:7;7630:6;7619:9;7615:22;7585:62;:::i;:::-;7575:72;;7369:288;6155:1509;;;;;;;;:::o;7670:115::-;7755:23;7772:5;7755:23;:::i;:::-;7750:3;7743:36;7670:115;;:::o;7791:218::-;7882:4;7920:2;7909:9;7905:18;7897:26;;7933:69;7999:1;7988:9;7984:17;7975:6;7933:69;:::i;:::-;7791:218;;;;:::o;8015:1089::-;8119:6;8127;8135;8143;8151;8200:3;8188:9;8179:7;8175:23;8171:33;8168:120;;;8207:79;;:::i;:::-;8168:120;8327:1;8352:53;8397:7;8388:6;8377:9;8373:22;8352:53;:::i;:::-;8342:63;;8298:117;8454:2;8480:53;8525:7;8516:6;8505:9;8501:22;8480:53;:::i;:::-;8470:63;;8425:118;8582:2;8608:53;8653:7;8644:6;8633:9;8629:22;8608:53;:::i;:::-;8598:63;;8553:118;8710:2;8736:53;8781:7;8772:6;8761:9;8757:22;8736:53;:::i;:::-;8726:63;;8681:118;8866:3;8855:9;8851:19;8838:33;8898:18;8890:6;8887:30;8884:117;;;8920:79;;:::i;:::-;8884:117;9025:62;9079:7;9070:6;9059:9;9055:22;9025:62;:::i;:::-;9015:72;;8809:288;8015:1089;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "363800",
								"executionCost": "399",
								"totalCost": "364199"
							},
							"external": {
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"supportsInterface(bytes4)": "705"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203ad8afb3e654e049f97dab3c9e7325633e509d9abd0a6e5b1ab87375c0c3af5364736f6c634300080e0033",
									".code": [
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A7"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "BC197C81"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "F23A6E61"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 561,
											"name": "PUSH",
											"source": 4,
											"value": "4E2312E000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 512,
											"end": 523,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 512,
											"end": 601,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 512,
											"end": 601,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 565,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 589,
											"end": 600,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 565,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 565,
											"end": 601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 512,
											"end": 601,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 601,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 903,
											"end": 909,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 3,
											"value": "BC197C81"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 921,
											"end": 964,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 655,
											"end": 661,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 3,
											"value": "F23A6E61"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 673,
											"end": 711,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 673,
											"end": 711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2025,
											"end": 2142,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 2025,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2134,
											"end": 2135,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2124,
											"end": 2136,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2250,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 2148,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2242,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2236,
											"end": 2243,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2231,
											"end": 2233,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2224,
											"end": 2229,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2234,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2216,
											"end": 2244,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2250,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2250,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2250,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2256,
											"end": 2436,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2256,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2304,
											"end": 2381,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2301,
											"end": 2302,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2382,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2405,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2398,
											"end": 2399,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2391,
											"end": 2406,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2425,
											"end": 2429,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2422,
											"end": 2423,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2430,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2442,
											"end": 2723,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 2442,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2525,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2525,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 2525,
											"end": 2552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2525,
											"end": 2552,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 2525,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2517,
											"end": 2523,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2643,
											"end": 2653,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2662,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2607,
											"end": 2617,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2604,
											"end": 2638,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2601,
											"end": 2663,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2666,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 2666,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2666,
											"end": 2684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2666,
											"end": 2684,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 2666,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2706,
											"end": 2716,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2702,
											"end": 2704,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2695,
											"end": 2717,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2485,
											"end": 2723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2442,
											"end": 2723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2442,
											"end": 2723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2442,
											"end": 2723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2729,
											"end": 2858,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 2729,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2790,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 2790,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 2790,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2790,
											"end": 2810,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 2790,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2780,
											"end": 2810,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2780,
											"end": 2810,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 2847,
											"end": 2851,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2839,
											"end": 2845,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 2819,
											"end": 2852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2852,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 2819,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2729,
											"end": 2858,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2729,
											"end": 2858,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2729,
											"end": 2858,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2729,
											"end": 2858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2864,
											"end": 3175,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 2864,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3020,
											"end": 3050,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3017,
											"end": 3073,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3017,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 3017,
											"end": 3073,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3053,
											"end": 3071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3017,
											"end": 3073,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 3017,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3103,
											"end": 3107,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3101,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3091,
											"end": 3108,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3083,
											"end": 3108,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3083,
											"end": 3108,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3163,
											"end": 3167,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3161,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3145,
											"end": 3168,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3145,
											"end": 3168,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2864,
											"end": 3175,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2864,
											"end": 3175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2864,
											"end": 3175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2864,
											"end": 3175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3181,
											"end": 3298,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 3181,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3291,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3288,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3304,
											"end": 3381,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 3304,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3341,
											"end": 3348,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3375,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3375,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3375,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3304,
											"end": 3381,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3304,
											"end": 3381,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3304,
											"end": 3381,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3304,
											"end": 3381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3387,
											"end": 3509,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 3387,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3460,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 3478,
											"end": 3483,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3460,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 3460,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3460,
											"end": 3484,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 3460,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3453,
											"end": 3458,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3450,
											"end": 3485,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3440,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 3440,
											"end": 3503,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3499,
											"end": 3500,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3497,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3489,
											"end": 3501,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3440,
											"end": 3503,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 3440,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3387,
											"end": 3509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3387,
											"end": 3509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3561,
											"end": 3566,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3605,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3586,
											"end": 3606,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3577,
											"end": 3606,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3577,
											"end": 3606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3642,
											"end": 3647,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 3615,
											"end": 3648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3773,
											"end": 3778,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 3814,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 3871,
											"end": 3877,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3814,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 3814,
											"end": 3878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3814,
											"end": 3878,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 3814,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 3798,
											"end": 3879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 3879,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 3798,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3789,
											"end": 3879,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3789,
											"end": 3879,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3899,
											"end": 3904,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3921,
											"end": 3926,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3914,
											"end": 3935,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3962,
											"end": 3966,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3955,
											"end": 3960,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3951,
											"end": 3967,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3944,
											"end": 3967,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3944,
											"end": 3967,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4015,
											"end": 4019,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4007,
											"end": 4013,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4003,
											"end": 4020,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3995,
											"end": 4001,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3991,
											"end": 4021,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4044,
											"end": 4047,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4036,
											"end": 4042,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4033,
											"end": 4048,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4063,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 4063,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 4063,
											"end": 4142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4063,
											"end": 4142,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 4063,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4178,
											"end": 4184,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4190,
											"end": 4193,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4187,
											"end": 4202,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4270,
											"end": 4273,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4299,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 4332,
											"end": 4335,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4320,
											"end": 4330,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4299,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 4299,
											"end": 4336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4299,
											"end": 4336,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 4299,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4294,
											"end": 4297,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4287,
											"end": 4337,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4361,
											"end": 4364,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4350,
											"end": 4371,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4350,
											"end": 4371,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4237,
											"end": 4381,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4221,
											"end": 4225,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4216,
											"end": 4219,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4212,
											"end": 4226,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4205,
											"end": 4226,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4205,
											"end": 4226,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4165,
											"end": 4186,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3779,
											"end": 4387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3779,
											"end": 4387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3677,
											"end": 4387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4481,
											"end": 4486,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4533,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4523,
											"end": 4527,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4515,
											"end": 4521,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4511,
											"end": 4528,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4534,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4497,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 4497,
											"end": 4619,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 4538,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 4538,
											"end": 4617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4617,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 4538,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4497,
											"end": 4619,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 4497,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4661,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4642,
											"end": 4662,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4680,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 4770,
											"end": 4773,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4768,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4755,
											"end": 4759,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4747,
											"end": 4753,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4743,
											"end": 4760,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4680,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 4680,
											"end": 4774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4680,
											"end": 4774,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 4680,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4671,
											"end": 4774,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4671,
											"end": 4774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4487,
											"end": 4780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4786,
											"end": 4903,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 4786,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4896,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4892,
											"end": 4893,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4885,
											"end": 4897,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 5216,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 4909,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4970,
											"end": 4974,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5049,
											"end": 5079,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5082,
											"end": 5100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 5142,
											"end": 5148,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 5120,
											"end": 5149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5149,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 5120,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5149,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5149,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5208,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5209,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5186,
											"end": 5209,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5186,
											"end": 5209,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 5216,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 5216,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 5216,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 5216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5222,
											"end": 5376,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 5222,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5306,
											"end": 5312,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5301,
											"end": 5304,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5296,
											"end": 5299,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5283,
											"end": 5313,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 5368,
											"end": 5369,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5359,
											"end": 5365,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5354,
											"end": 5357,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5350,
											"end": 5366,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5222,
											"end": 5376,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5222,
											"end": 5376,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5222,
											"end": 5376,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5222,
											"end": 5376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5382,
											"end": 5792,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 5382,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5464,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 5500,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 5541,
											"end": 5547,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5500,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 5500,
											"end": 5548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5500,
											"end": 5548,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 5500,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5484,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 5484,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5484,
											"end": 5549,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 5484,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5549,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5572,
											"end": 5578,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5565,
											"end": 5570,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5558,
											"end": 5579,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5610,
											"end": 5614,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5603,
											"end": 5608,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5599,
											"end": 5615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5648,
											"end": 5651,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5639,
											"end": 5645,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5634,
											"end": 5637,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5630,
											"end": 5646,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5627,
											"end": 5652,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5624,
											"end": 5736,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5624,
											"end": 5736,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 5624,
											"end": 5736,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5655,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 5655,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 5655,
											"end": 5734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5655,
											"end": 5734,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 5655,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5624,
											"end": 5736,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 5624,
											"end": 5736,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5745,
											"end": 5786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 5779,
											"end": 5785,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5774,
											"end": 5777,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5769,
											"end": 5772,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5745,
											"end": 5786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 5745,
											"end": 5786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5745,
											"end": 5786,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 5745,
											"end": 5786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5465,
											"end": 5792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5382,
											"end": 5792,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5382,
											"end": 5792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5382,
											"end": 5792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5382,
											"end": 5792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5382,
											"end": 5792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5382,
											"end": 5792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5811,
											"end": 6149,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 5811,
											"end": 6149,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5866,
											"end": 5871,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5915,
											"end": 5918,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5908,
											"end": 5912,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5900,
											"end": 5906,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5896,
											"end": 5913,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5892,
											"end": 5919,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5882,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 5882,
											"end": 6004,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5923,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 5923,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 5923,
											"end": 6002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5923,
											"end": 6002,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 5923,
											"end": 6002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5882,
											"end": 6004,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 5882,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6040,
											"end": 6046,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6065,
											"end": 6143,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 6139,
											"end": 6142,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6131,
											"end": 6137,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6124,
											"end": 6128,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6116,
											"end": 6122,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6112,
											"end": 6129,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6065,
											"end": 6143,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 6065,
											"end": 6143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6065,
											"end": 6143,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 6065,
											"end": 6143,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6056,
											"end": 6143,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6056,
											"end": 6143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5872,
											"end": 6149,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5811,
											"end": 6149,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5811,
											"end": 6149,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5811,
											"end": 6149,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5811,
											"end": 6149,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5811,
											"end": 6149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 7664,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 6155,
											"end": 7664,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6309,
											"end": 6315,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6323,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6325,
											"end": 6331,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6339,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6341,
											"end": 6347,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6390,
											"end": 6393,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 6378,
											"end": 6387,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6369,
											"end": 6376,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6365,
											"end": 6388,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6361,
											"end": 6394,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6358,
											"end": 6478,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6358,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 6358,
											"end": 6478,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6397,
											"end": 6476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 6397,
											"end": 6476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 6397,
											"end": 6476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6397,
											"end": 6476,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 6397,
											"end": 6476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6358,
											"end": 6478,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 6358,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6517,
											"end": 6518,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6542,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 6587,
											"end": 6594,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6578,
											"end": 6584,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 6576,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 6563,
											"end": 6585,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6542,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 6542,
											"end": 6595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6542,
											"end": 6595,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 6542,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6532,
											"end": 6595,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6532,
											"end": 6595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6488,
											"end": 6605,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6670,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 6715,
											"end": 6722,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6706,
											"end": 6712,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6695,
											"end": 6704,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 6691,
											"end": 6713,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6670,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 6670,
											"end": 6723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6670,
											"end": 6723,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 6670,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 6723,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 6723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6615,
											"end": 6733,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6800,
											"end": 6802,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6789,
											"end": 6798,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6785,
											"end": 6803,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6772,
											"end": 6804,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6831,
											"end": 6849,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6823,
											"end": 6829,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6820,
											"end": 6850,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6817,
											"end": 6934,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6817,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 6817,
											"end": 6934,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6853,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 6853,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 6853,
											"end": 6932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6853,
											"end": 6932,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 6853,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6817,
											"end": 6934,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 6817,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6958,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 7028,
											"end": 7035,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7019,
											"end": 7025,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7008,
											"end": 7017,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7004,
											"end": 7026,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6958,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 6958,
											"end": 7036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6958,
											"end": 7036,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 6958,
											"end": 7036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6948,
											"end": 7036,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6948,
											"end": 7036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6743,
											"end": 7046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7113,
											"end": 7115,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7102,
											"end": 7111,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7098,
											"end": 7116,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7144,
											"end": 7162,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7133,
											"end": 7163,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7130,
											"end": 7247,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7130,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 7130,
											"end": 7247,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7166,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 7166,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 7166,
											"end": 7245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7166,
											"end": 7245,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 7166,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7130,
											"end": 7247,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 7130,
											"end": 7247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7271,
											"end": 7349,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 7341,
											"end": 7348,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7332,
											"end": 7338,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7321,
											"end": 7330,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7317,
											"end": 7339,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7271,
											"end": 7349,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 7271,
											"end": 7349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7271,
											"end": 7349,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 7271,
											"end": 7349,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7261,
											"end": 7349,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7261,
											"end": 7349,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7056,
											"end": 7359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7426,
											"end": 7429,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7415,
											"end": 7424,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7411,
											"end": 7430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7398,
											"end": 7431,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7458,
											"end": 7476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7450,
											"end": 7456,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7447,
											"end": 7477,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7444,
											"end": 7561,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7444,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 7444,
											"end": 7561,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7480,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 7480,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 7480,
											"end": 7559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7480,
											"end": 7559,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 7480,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7444,
											"end": 7561,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 7444,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 7639,
											"end": 7646,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7630,
											"end": 7636,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7619,
											"end": 7628,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7615,
											"end": 7637,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 7585,
											"end": 7647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7647,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 7585,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7575,
											"end": 7647,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7575,
											"end": 7647,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7369,
											"end": 7657,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 7664,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 7664,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 7664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 7664,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 7664,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 7664,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 7664,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 7664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 7664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7670,
											"end": 7785,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 7670,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7755,
											"end": 7778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 7772,
											"end": 7777,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7755,
											"end": 7778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 7755,
											"end": 7778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7755,
											"end": 7778,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 7755,
											"end": 7778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7750,
											"end": 7753,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7743,
											"end": 7779,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7670,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7670,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7670,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 8009,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 7791,
											"end": 8009,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7882,
											"end": 7886,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7920,
											"end": 7922,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7909,
											"end": 7918,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7905,
											"end": 7923,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7897,
											"end": 7923,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7897,
											"end": 7923,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7933,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 7999,
											"end": 8000,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7988,
											"end": 7997,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7984,
											"end": 8001,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7975,
											"end": 7981,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7933,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 7933,
											"end": 8002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7933,
											"end": 8002,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 7933,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 8009,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 8009,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 8009,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 8009,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 8009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8015,
											"end": 9104,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8015,
											"end": 9104,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8119,
											"end": 8125,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8127,
											"end": 8133,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8135,
											"end": 8141,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8143,
											"end": 8149,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8151,
											"end": 8157,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8200,
											"end": 8203,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 8188,
											"end": 8197,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8179,
											"end": 8186,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8175,
											"end": 8198,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8204,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8168,
											"end": 8288,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8168,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 8168,
											"end": 8288,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8207,
											"end": 8286,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 8207,
											"end": 8286,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 8207,
											"end": 8286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8207,
											"end": 8286,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 8207,
											"end": 8286,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8168,
											"end": 8288,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 8168,
											"end": 8288,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8327,
											"end": 8328,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8352,
											"end": 8405,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 8397,
											"end": 8404,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8388,
											"end": 8394,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8377,
											"end": 8386,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 8373,
											"end": 8395,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8352,
											"end": 8405,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 8352,
											"end": 8405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8352,
											"end": 8405,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 8352,
											"end": 8405,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8342,
											"end": 8405,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 8342,
											"end": 8405,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8298,
											"end": 8415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8454,
											"end": 8456,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8480,
											"end": 8533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 8525,
											"end": 8532,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8516,
											"end": 8522,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8505,
											"end": 8514,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 8501,
											"end": 8523,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8480,
											"end": 8533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 8480,
											"end": 8533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8480,
											"end": 8533,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 8480,
											"end": 8533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8470,
											"end": 8533,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 8470,
											"end": 8533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8543,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8582,
											"end": 8584,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8608,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 8653,
											"end": 8660,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8644,
											"end": 8650,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8633,
											"end": 8642,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 8629,
											"end": 8651,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8608,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 8608,
											"end": 8661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8608,
											"end": 8661,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 8608,
											"end": 8661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8598,
											"end": 8661,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8598,
											"end": 8661,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8553,
											"end": 8671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8710,
											"end": 8712,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8736,
											"end": 8789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 8781,
											"end": 8788,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8772,
											"end": 8778,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8761,
											"end": 8770,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 8757,
											"end": 8779,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8736,
											"end": 8789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 8736,
											"end": 8789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8736,
											"end": 8789,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 8736,
											"end": 8789,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8726,
											"end": 8789,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8726,
											"end": 8789,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8681,
											"end": 8799,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8866,
											"end": 8869,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 8855,
											"end": 8864,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8851,
											"end": 8870,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8838,
											"end": 8871,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8898,
											"end": 8916,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8890,
											"end": 8896,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8887,
											"end": 8917,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 9001,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 8884,
											"end": 9001,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8920,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 8920,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 8920,
											"end": 8999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8920,
											"end": 8999,
											"name": "tag",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 8920,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 9001,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 8884,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9025,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 9079,
											"end": 9086,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9070,
											"end": 9076,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9059,
											"end": 9068,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 9055,
											"end": 9077,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9025,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 9025,
											"end": 9087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9025,
											"end": 9087,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 9025,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9015,
											"end": 9087,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9015,
											"end": 9087,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8809,
											"end": 9097,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8015,
											"end": 9104,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8015,
											"end": 9104,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 8015,
											"end": 9104,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8015,
											"end": 9104,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8015,
											"end": 9104,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 8015,
											"end": 9104,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8015,
											"end": 9104,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8015,
											"end": 9104,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8015,
											"end": 9104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/plugins/StaterTransfers.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":\"ERC1155Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.",
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":\"ERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"ERC721Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":726:732  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":751:781  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":744:781  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_11:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_12:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_13:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_14:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_15:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_39\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_14\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_16:\n        /* \"#utility.yul\":641:665   */\n      tag_41\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_15\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_42\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_42:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_17:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_44\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_16\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_18:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_19:\n        /* \"#utility.yul\":997:1021   */\n      tag_47\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_18\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_48\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_48:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_20:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_50\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_19\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1314   */\n    tag_21:\n        /* \"#utility.yul\":1306:1307   */\n      0x00\n        /* \"#utility.yul\":1303:1304   */\n      dup1\n        /* \"#utility.yul\":1296:1308   */\n      revert\n        /* \"#utility.yul\":1320:1437   */\n    tag_22:\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1426:1427   */\n      dup1\n        /* \"#utility.yul\":1419:1431   */\n      revert\n        /* \"#utility.yul\":1443:1545   */\n    tag_23:\n        /* \"#utility.yul\":1484:1490   */\n      0x00\n        /* \"#utility.yul\":1535:1537   */\n      0x1f\n        /* \"#utility.yul\":1531:1538   */\n      not\n        /* \"#utility.yul\":1526:1528   */\n      0x1f\n        /* \"#utility.yul\":1519:1524   */\n      dup4\n        /* \"#utility.yul\":1515:1529   */\n      add\n        /* \"#utility.yul\":1511:1539   */\n      and\n        /* \"#utility.yul\":1501:1539   */\n      swap1\n      pop\n        /* \"#utility.yul\":1443:1545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1551:1731   */\n    tag_24:\n        /* \"#utility.yul\":1599:1676   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1596:1597   */\n      0x00\n        /* \"#utility.yul\":1589:1677   */\n      mstore\n        /* \"#utility.yul\":1696:1700   */\n      0x41\n        /* \"#utility.yul\":1693:1694   */\n      0x04\n        /* \"#utility.yul\":1686:1701   */\n      mstore\n        /* \"#utility.yul\":1720:1724   */\n      0x24\n        /* \"#utility.yul\":1717:1718   */\n      0x00\n        /* \"#utility.yul\":1710:1725   */\n      revert\n        /* \"#utility.yul\":1737:2018   */\n    tag_25:\n        /* \"#utility.yul\":1820:1847   */\n      tag_56\n        /* \"#utility.yul\":1842:1846   */\n      dup3\n        /* \"#utility.yul\":1820:1847   */\n      tag_23\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1812:1818   */\n      dup2\n        /* \"#utility.yul\":1808:1848   */\n      add\n        /* \"#utility.yul\":1950:1956   */\n      dup2\n        /* \"#utility.yul\":1938:1948   */\n      dup2\n        /* \"#utility.yul\":1935:1957   */\n      lt\n        /* \"#utility.yul\":1914:1932   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1902:1912   */\n      dup3\n        /* \"#utility.yul\":1899:1933   */\n      gt\n        /* \"#utility.yul\":1896:1958   */\n      or\n        /* \"#utility.yul\":1893:1981   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":1961:1979   */\n      tag_58\n      tag_24\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1893:1981   */\n    tag_57:\n        /* \"#utility.yul\":2001:2011   */\n      dup1\n        /* \"#utility.yul\":1997:1999   */\n      0x40\n        /* \"#utility.yul\":1990:2012   */\n      mstore\n        /* \"#utility.yul\":1780:2018   */\n      pop\n        /* \"#utility.yul\":1737:2018   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2024:2153   */\n    tag_26:\n        /* \"#utility.yul\":2058:2064   */\n      0x00\n        /* \"#utility.yul\":2085:2105   */\n      tag_60\n      tag_11\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":2075:2105   */\n      swap1\n      pop\n        /* \"#utility.yul\":2114:2147   */\n      tag_61\n        /* \"#utility.yul\":2142:2146   */\n      dup3\n        /* \"#utility.yul\":2134:2140   */\n      dup3\n        /* \"#utility.yul\":2114:2147   */\n      tag_25\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":2024:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2466   */\n    tag_27:\n        /* \"#utility.yul\":2220:2224   */\n      0x00\n        /* \"#utility.yul\":2310:2328   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2302:2308   */\n      dup3\n        /* \"#utility.yul\":2299:2329   */\n      gt\n        /* \"#utility.yul\":2296:2352   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":2332:2350   */\n      tag_64\n      tag_24\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2296:2352   */\n    tag_63:\n        /* \"#utility.yul\":2370:2399   */\n      tag_65\n        /* \"#utility.yul\":2392:2398   */\n      dup3\n        /* \"#utility.yul\":2370:2399   */\n      tag_23\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2362:2399   */\n      swap1\n      pop\n        /* \"#utility.yul\":2454:2458   */\n      0x20\n        /* \"#utility.yul\":2448:2452   */\n      dup2\n        /* \"#utility.yul\":2444:2459   */\n      add\n        /* \"#utility.yul\":2436:2459   */\n      swap1\n      pop\n        /* \"#utility.yul\":2159:2466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2472:2626   */\n    tag_28:\n        /* \"#utility.yul\":2556:2562   */\n      dup3\n        /* \"#utility.yul\":2551:2554   */\n      dup2\n        /* \"#utility.yul\":2546:2549   */\n      dup4\n        /* \"#utility.yul\":2533:2563   */\n      calldatacopy\n        /* \"#utility.yul\":2618:2619   */\n      0x00\n        /* \"#utility.yul\":2609:2615   */\n      dup4\n        /* \"#utility.yul\":2604:2607   */\n      dup4\n        /* \"#utility.yul\":2600:2616   */\n      add\n        /* \"#utility.yul\":2593:2620   */\n      mstore\n        /* \"#utility.yul\":2472:2626   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2632:3042   */\n    tag_29:\n        /* \"#utility.yul\":2709:2714   */\n      0x00\n        /* \"#utility.yul\":2734:2799   */\n      tag_68\n        /* \"#utility.yul\":2750:2798   */\n      tag_69\n        /* \"#utility.yul\":2791:2797   */\n      dup5\n        /* \"#utility.yul\":2750:2798   */\n      tag_27\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2734:2799   */\n      tag_26\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2725:2799   */\n      swap1\n      pop\n        /* \"#utility.yul\":2822:2828   */\n      dup3\n        /* \"#utility.yul\":2815:2820   */\n      dup2\n        /* \"#utility.yul\":2808:2829   */\n      mstore\n        /* \"#utility.yul\":2860:2864   */\n      0x20\n        /* \"#utility.yul\":2853:2858   */\n      dup2\n        /* \"#utility.yul\":2849:2865   */\n      add\n        /* \"#utility.yul\":2898:2901   */\n      dup5\n        /* \"#utility.yul\":2889:2895   */\n      dup5\n        /* \"#utility.yul\":2884:2887   */\n      dup5\n        /* \"#utility.yul\":2880:2896   */\n      add\n        /* \"#utility.yul\":2877:2902   */\n      gt\n        /* \"#utility.yul\":2874:2986   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2905:2984   */\n      tag_71\n      tag_22\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2874:2986   */\n    tag_70:\n        /* \"#utility.yul\":2995:3036   */\n      tag_72\n        /* \"#utility.yul\":3029:3035   */\n      dup5\n        /* \"#utility.yul\":3024:3027   */\n      dup3\n        /* \"#utility.yul\":3019:3022   */\n      dup6\n        /* \"#utility.yul\":2995:3036   */\n      tag_28\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2715:3042   */\n      pop\n        /* \"#utility.yul\":2632:3042   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3061:3399   */\n    tag_30:\n        /* \"#utility.yul\":3116:3121   */\n      0x00\n        /* \"#utility.yul\":3165:3168   */\n      dup3\n        /* \"#utility.yul\":3158:3162   */\n      0x1f\n        /* \"#utility.yul\":3150:3156   */\n      dup4\n        /* \"#utility.yul\":3146:3163   */\n      add\n        /* \"#utility.yul\":3142:3169   */\n      slt\n        /* \"#utility.yul\":3132:3254   */\n      tag_74\n      jumpi\n        /* \"#utility.yul\":3173:3252   */\n      tag_75\n      tag_21\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":3132:3254   */\n    tag_74:\n        /* \"#utility.yul\":3290:3296   */\n      dup2\n        /* \"#utility.yul\":3277:3297   */\n      calldataload\n        /* \"#utility.yul\":3315:3393   */\n      tag_76\n        /* \"#utility.yul\":3389:3392   */\n      dup5\n        /* \"#utility.yul\":3381:3387   */\n      dup3\n        /* \"#utility.yul\":3374:3378   */\n      0x20\n        /* \"#utility.yul\":3366:3372   */\n      dup7\n        /* \"#utility.yul\":3362:3379   */\n      add\n        /* \"#utility.yul\":3315:3393   */\n      tag_29\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":3306:3393   */\n      swap2\n      pop\n        /* \"#utility.yul\":3122:3399   */\n      pop\n        /* \"#utility.yul\":3061:3399   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3405:4348   */\n    tag_6:\n        /* \"#utility.yul\":3500:3506   */\n      0x00\n        /* \"#utility.yul\":3508:3514   */\n      dup1\n        /* \"#utility.yul\":3516:3522   */\n      0x00\n        /* \"#utility.yul\":3524:3530   */\n      dup1\n        /* \"#utility.yul\":3573:3576   */\n      0x80\n        /* \"#utility.yul\":3561:3570   */\n      dup6\n        /* \"#utility.yul\":3552:3559   */\n      dup8\n        /* \"#utility.yul\":3548:3571   */\n      sub\n        /* \"#utility.yul\":3544:3577   */\n      slt\n        /* \"#utility.yul\":3541:3661   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":3580:3659   */\n      tag_79\n      tag_12\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":3541:3661   */\n    tag_78:\n        /* \"#utility.yul\":3700:3701   */\n      0x00\n        /* \"#utility.yul\":3725:3778   */\n      tag_80\n        /* \"#utility.yul\":3770:3777   */\n      dup8\n        /* \"#utility.yul\":3761:3767   */\n      dup3\n        /* \"#utility.yul\":3750:3759   */\n      dup9\n        /* \"#utility.yul\":3746:3768   */\n      add\n        /* \"#utility.yul\":3725:3778   */\n      tag_17\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":3715:3778   */\n      swap5\n      pop\n        /* \"#utility.yul\":3671:3788   */\n      pop\n        /* \"#utility.yul\":3827:3829   */\n      0x20\n        /* \"#utility.yul\":3853:3906   */\n      tag_81\n        /* \"#utility.yul\":3898:3905   */\n      dup8\n        /* \"#utility.yul\":3889:3895   */\n      dup3\n        /* \"#utility.yul\":3878:3887   */\n      dup9\n        /* \"#utility.yul\":3874:3896   */\n      add\n        /* \"#utility.yul\":3853:3906   */\n      tag_17\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":3843:3906   */\n      swap4\n      pop\n        /* \"#utility.yul\":3798:3916   */\n      pop\n        /* \"#utility.yul\":3955:3957   */\n      0x40\n        /* \"#utility.yul\":3981:4034   */\n      tag_82\n        /* \"#utility.yul\":4026:4033   */\n      dup8\n        /* \"#utility.yul\":4017:4023   */\n      dup3\n        /* \"#utility.yul\":4006:4015   */\n      dup9\n        /* \"#utility.yul\":4002:4024   */\n      add\n        /* \"#utility.yul\":3981:4034   */\n      tag_20\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":3971:4034   */\n      swap3\n      pop\n        /* \"#utility.yul\":3926:4044   */\n      pop\n        /* \"#utility.yul\":4111:4113   */\n      0x60\n        /* \"#utility.yul\":4100:4109   */\n      dup6\n        /* \"#utility.yul\":4096:4114   */\n      add\n        /* \"#utility.yul\":4083:4115   */\n      calldataload\n        /* \"#utility.yul\":4142:4160   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4134:4140   */\n      dup2\n        /* \"#utility.yul\":4131:4161   */\n      gt\n        /* \"#utility.yul\":4128:4245   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":4164:4243   */\n      tag_84\n      tag_13\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":4128:4245   */\n    tag_83:\n        /* \"#utility.yul\":4269:4331   */\n      tag_85\n        /* \"#utility.yul\":4323:4330   */\n      dup8\n        /* \"#utility.yul\":4314:4320   */\n      dup3\n        /* \"#utility.yul\":4303:4312   */\n      dup9\n        /* \"#utility.yul\":4299:4321   */\n      add\n        /* \"#utility.yul\":4269:4331   */\n      tag_30\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":4259:4331   */\n      swap2\n      pop\n        /* \"#utility.yul\":4054:4341   */\n      pop\n        /* \"#utility.yul\":3405:4348   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4354:4503   */\n    tag_31:\n        /* \"#utility.yul\":4390:4397   */\n      0x00\n        /* \"#utility.yul\":4430:4496   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4423:4428   */\n      dup3\n        /* \"#utility.yul\":4419:4497   */\n      and\n        /* \"#utility.yul\":4408:4497   */\n      swap1\n      pop\n        /* \"#utility.yul\":4354:4503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4509:4624   */\n    tag_32:\n        /* \"#utility.yul\":4594:4617   */\n      tag_88\n        /* \"#utility.yul\":4611:4616   */\n      dup2\n        /* \"#utility.yul\":4594:4617   */\n      tag_31\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":4589:4592   */\n      dup3\n        /* \"#utility.yul\":4582:4618   */\n      mstore\n        /* \"#utility.yul\":4509:4624   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4630:4848   */\n    tag_9:\n        /* \"#utility.yul\":4721:4725   */\n      0x00\n        /* \"#utility.yul\":4759:4761   */\n      0x20\n        /* \"#utility.yul\":4748:4757   */\n      dup3\n        /* \"#utility.yul\":4744:4762   */\n      add\n        /* \"#utility.yul\":4736:4762   */\n      swap1\n      pop\n        /* \"#utility.yul\":4772:4841   */\n      tag_90\n        /* \"#utility.yul\":4838:4839   */\n      0x00\n        /* \"#utility.yul\":4827:4836   */\n      dup4\n        /* \"#utility.yul\":4823:4840   */\n      add\n        /* \"#utility.yul\":4814:4820   */\n      dup5\n        /* \"#utility.yul\":4772:4841   */\n      tag_32\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":4630:4848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122055d472e0f401bdb5ef60a0f76ffdd2b6164d5b6793ce83e248e545f4eee0a0fc64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610371806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a60048036038101906100459190610262565b610060565b6040516100579190610320565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b382610088565b9050919050565b6100c3816100a8565b81146100ce57600080fd5b50565b6000813590506100e0816100ba565b92915050565b6000819050919050565b6100f9816100e6565b811461010457600080fd5b50565b600081359050610116816100f0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61016f82610126565b810181811067ffffffffffffffff8211171561018e5761018d610137565b5b80604052505050565b60006101a1610074565b90506101ad8282610166565b919050565b600067ffffffffffffffff8211156101cd576101cc610137565b5b6101d682610126565b9050602081019050919050565b82818337600083830152505050565b6000610205610200846101b2565b610197565b90508281526020810184848401111561022157610220610121565b5b61022c8482856101e3565b509392505050565b600082601f8301126102495761024861011c565b5b81356102598482602086016101f2565b91505092915050565b6000806000806080858703121561027c5761027b61007e565b5b600061028a878288016100d1565b945050602061029b878288016100d1565b93505060406102ac87828801610107565b925050606085013567ffffffffffffffff8111156102cd576102cc610083565b5b6102d987828801610234565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61031a816102e5565b82525050565b60006020820190506103356000830184610311565b9291505056fea264697066735822122055d472e0f401bdb5ef60a0f76ffdd2b6164d5b6793ce83e248e545f4eee0a0fc64736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3 DUP3 PUSH2 0x88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3 DUP2 PUSH2 0xA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0 DUP2 PUSH2 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x16F DUP3 PUSH2 0x126 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18E JUMPI PUSH2 0x18D PUSH2 0x137 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1 PUSH2 0x74 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD DUP3 DUP3 PUSH2 0x166 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CD JUMPI PUSH2 0x1CC PUSH2 0x137 JUMP JUMPDEST JUMPDEST PUSH2 0x1D6 DUP3 PUSH2 0x126 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205 PUSH2 0x200 DUP5 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x221 JUMPI PUSH2 0x220 PUSH2 0x121 JUMP JUMPDEST JUMPDEST PUSH2 0x22C DUP5 DUP3 DUP6 PUSH2 0x1E3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x11C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x259 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27B PUSH2 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x29B DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2AC DUP8 DUP3 DUP9 ADD PUSH2 0x107 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x83 JUMP JUMPDEST JUMPDEST PUSH2 0x2D9 DUP8 DUP3 DUP9 ADD PUSH2 0x234 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31A DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x335 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x311 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xD4 PUSH19 0xE0F401BDB5EF60A0F76FFDD2B6164D5B6793CE DUP4 0xE2 BASEFEE 0xE5 GASLIMIT DELEGATECALL 0xEE 0xE0 LOG0 0xFC PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "399:391:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC721Received_590": {
									"entryPoint": 96,
									"id": 590,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 498,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 116,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 483,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 311,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 284,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 131,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4851:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:13",
														"type": ""
													}
												],
												"src": "696:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:13",
														"type": ""
													}
												],
												"src": "841:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:13"
															},
															"nodeType": "YulIf",
															"src": "977:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:13",
														"type": ""
													}
												],
												"src": "924:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:13",
														"type": ""
													}
												],
												"src": "1052:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1286:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1303:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1296:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1296:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1197:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1409:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1426:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1419:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1419:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1419:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "1320:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1491:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1501:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1519:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1526:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1515:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1515:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1535:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1511:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1511:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1474:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1484:6:13",
														"type": ""
													}
												],
												"src": "1443:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1579:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1596:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1599:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1589:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1693:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1696:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1717:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1710:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1710:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1710:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1551:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1780:238:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1790:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1812:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "1842:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1820:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1820:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1808:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1794:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1959:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1961:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1961:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1961:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1902:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1914:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1899:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1899:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1938:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1950:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1935:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1896:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1896:62:13"
															},
															"nodeType": "YulIf",
															"src": "1893:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1997:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2001:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1990:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1990:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1990:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1766:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1774:4:13",
														"type": ""
													}
												],
												"src": "1737:281:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2065:88:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2075:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2085:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2075:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2134:6:13"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2142:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2114:19:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2114:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2114:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2049:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2058:6:13",
														"type": ""
													}
												],
												"src": "2024:129:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2225:241:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2330:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2332:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2332:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2332:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2302:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2310:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2299:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:30:13"
															},
															"nodeType": "YulIf",
															"src": "2296:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2362:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2392:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2370:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2436:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2448:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2454:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2444:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2436:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2209:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2220:4:13",
														"type": ""
													}
												],
												"src": "2159:307:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2523:103:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2546:3:13"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2551:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2556:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2533:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2533:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2533:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2604:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2609:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2600:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2600:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2618:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2593:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2593:27:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2593:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2505:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2510:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2515:6:13",
														"type": ""
													}
												],
												"src": "2472:154:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2715:327:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2725:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2791:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2750:40:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2750:48:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2734:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2734:65:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2725:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2815:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2822:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2808:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2808:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2808:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2838:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2853:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2860:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2849:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2849:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2842:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2903:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2905:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2905:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2905:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2884:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2889:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2880:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2880:16:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2898:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2877:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2877:25:13"
															},
															"nodeType": "YulIf",
															"src": "2874:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3019:3:13"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3024:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3029:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2995:23:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2995:41:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2688:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2693:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2701:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2709:5:13",
														"type": ""
													}
												],
												"src": "2632:410:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3122:277:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3171:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3173:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3173:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3173:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3150:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3158:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3146:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3146:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3165:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3142:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3142:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3135:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:35:13"
															},
															"nodeType": "YulIf",
															"src": "3132:122:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3263:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3290:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3277:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3277:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3267:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3306:87:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3366:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3374:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3362:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3362:17:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3381:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3389:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3315:46:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3315:78:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3306:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3100:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3108:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3116:5:13",
														"type": ""
													}
												],
												"src": "3061:338:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3531:817:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3578:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3580:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3580:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3580:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3552:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3561:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3548:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3548:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3573:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3544:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3544:33:13"
															},
															"nodeType": "YulIf",
															"src": "3541:120:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "3671:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3686:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3700:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3690:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3715:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3750:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3761:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3746:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3746:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3770:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3725:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3725:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3715:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3798:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3813:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3827:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3817:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3843:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3878:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3889:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3874:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3874:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3898:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3853:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3853:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3843:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3926:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3941:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3945:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3971:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4006:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4017:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4002:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4026:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3981:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3981:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3971:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4054:287:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4069:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4100:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4111:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4096:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4096:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4083:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4073:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4162:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4164:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4164:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4164:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4134:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4142:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4131:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4131:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "4128:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4259:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4303:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4314:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4299:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4299:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4323:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4269:29:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4269:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4259:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3477:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3488:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3500:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3508:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3516:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3524:6:13",
														"type": ""
													}
												],
												"src": "3405:943:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4398:105:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4408:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4423:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4430:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4419:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4419:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4408:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4380:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4390:7:13",
														"type": ""
													}
												],
												"src": "4354:149:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4572:52:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4589:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4611:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "4594:16:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4594:23:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4582:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4582:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4582:36:13"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4560:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4567:3:13",
														"type": ""
													}
												],
												"src": "4509:115:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4726:122:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4736:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4748:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4759:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4744:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4744:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4736:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4814:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4827:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4838:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4823:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4823:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4772:41:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:69:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4772:69:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4698:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4710:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4721:4:13",
														"type": ""
													}
												],
												"src": "4630:218:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a60048036038101906100459190610262565b610060565b6040516100579190610320565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b382610088565b9050919050565b6100c3816100a8565b81146100ce57600080fd5b50565b6000813590506100e0816100ba565b92915050565b6000819050919050565b6100f9816100e6565b811461010457600080fd5b50565b600081359050610116816100f0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61016f82610126565b810181811067ffffffffffffffff8211171561018e5761018d610137565b5b80604052505050565b60006101a1610074565b90506101ad8282610166565b919050565b600067ffffffffffffffff8211156101cd576101cc610137565b5b6101d682610126565b9050602081019050919050565b82818337600083830152505050565b6000610205610200846101b2565b610197565b90508281526020810184848401111561022157610220610121565b5b61022c8482856101e3565b509392505050565b600082601f8301126102495761024861011c565b5b81356102598482602086016101f2565b91505092915050565b6000806000806080858703121561027c5761027b61007e565b5b600061028a878288016100d1565b945050602061029b878288016100d1565b93505060406102ac87828801610107565b925050606085013567ffffffffffffffff8111156102cd576102cc610083565b5b6102d987828801610234565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61031a816102e5565b82525050565b60006020820190506103356000830184610311565b9291505056fea264697066735822122055d472e0f401bdb5ef60a0f76ffdd2b6164d5b6793ce83e248e545f4eee0a0fc64736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3 DUP3 PUSH2 0x88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3 DUP2 PUSH2 0xA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0 DUP2 PUSH2 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x16F DUP3 PUSH2 0x126 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18E JUMPI PUSH2 0x18D PUSH2 0x137 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1 PUSH2 0x74 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD DUP3 DUP3 PUSH2 0x166 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CD JUMPI PUSH2 0x1CC PUSH2 0x137 JUMP JUMPDEST JUMPDEST PUSH2 0x1D6 DUP3 PUSH2 0x126 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205 PUSH2 0x200 DUP5 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x221 JUMPI PUSH2 0x220 PUSH2 0x121 JUMP JUMPDEST JUMPDEST PUSH2 0x22C DUP5 DUP3 DUP6 PUSH2 0x1E3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x11C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x259 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27B PUSH2 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x29B DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2AC DUP8 DUP3 DUP9 ADD PUSH2 0x107 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x83 JUMP JUMPDEST JUMPDEST PUSH2 0x2D9 DUP8 DUP3 DUP9 ADD PUSH2 0x234 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31A DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x335 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x311 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xD4 PUSH19 0xE0F401BDB5EF60A0F76FFDD2B6164D5B6793CE DUP4 0xE2 BASEFEE 0xE5 GASLIMIT DELEGATECALL 0xEE 0xE0 LOG0 0xFC PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "399:391:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;726:6;751:30;;;744:37;;588:200;;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:102;1484:6;1535:2;1531:7;1526:2;1519:5;1515:14;1511:28;1501:38;;1443:102;;;:::o;1551:180::-;1599:77;1596:1;1589:88;1696:4;1693:1;1686:15;1720:4;1717:1;1710:15;1737:281;1820:27;1842:4;1820:27;:::i;:::-;1812:6;1808:40;1950:6;1938:10;1935:22;1914:18;1902:10;1899:34;1896:62;1893:88;;;1961:18;;:::i;:::-;1893:88;2001:10;1997:2;1990:22;1780:238;1737:281;;:::o;2024:129::-;2058:6;2085:20;;:::i;:::-;2075:30;;2114:33;2142:4;2134:6;2114:33;:::i;:::-;2024:129;;;:::o;2159:307::-;2220:4;2310:18;2302:6;2299:30;2296:56;;;2332:18;;:::i;:::-;2296:56;2370:29;2392:6;2370:29;:::i;:::-;2362:37;;2454:4;2448;2444:15;2436:23;;2159:307;;;:::o;2472:154::-;2556:6;2551:3;2546;2533:30;2618:1;2609:6;2604:3;2600:16;2593:27;2472:154;;;:::o;2632:410::-;2709:5;2734:65;2750:48;2791:6;2750:48;:::i;:::-;2734:65;:::i;:::-;2725:74;;2822:6;2815:5;2808:21;2860:4;2853:5;2849:16;2898:3;2889:6;2884:3;2880:16;2877:25;2874:112;;;2905:79;;:::i;:::-;2874:112;2995:41;3029:6;3024:3;3019;2995:41;:::i;:::-;2715:327;2632:410;;;;;:::o;3061:338::-;3116:5;3165:3;3158:4;3150:6;3146:17;3142:27;3132:122;;3173:79;;:::i;:::-;3132:122;3290:6;3277:20;3315:78;3389:3;3381:6;3374:4;3366:6;3362:17;3315:78;:::i;:::-;3306:87;;3122:277;3061:338;;;;:::o;3405:943::-;3500:6;3508;3516;3524;3573:3;3561:9;3552:7;3548:23;3544:33;3541:120;;;3580:79;;:::i;:::-;3541:120;3700:1;3725:53;3770:7;3761:6;3750:9;3746:22;3725:53;:::i;:::-;3715:63;;3671:117;3827:2;3853:53;3898:7;3889:6;3878:9;3874:22;3853:53;:::i;:::-;3843:63;;3798:118;3955:2;3981:53;4026:7;4017:6;4006:9;4002:22;3981:53;:::i;:::-;3971:63;;3926:118;4111:2;4100:9;4096:18;4083:32;4142:18;4134:6;4131:30;4128:117;;;4164:79;;:::i;:::-;4128:117;4269:62;4323:7;4314:6;4303:9;4299:22;4269:62;:::i;:::-;4259:72;;4054:287;3405:943;;;;;;;:::o;4354:149::-;4390:7;4430:66;4423:5;4419:78;4408:89;;4354:149;;;:::o;4509:115::-;4594:23;4611:5;4594:23;:::i;:::-;4589:3;4582:36;4509:115;;:::o;4630:218::-;4721:4;4759:2;4748:9;4744:18;4736:26;;4772:69;4838:1;4827:9;4823:17;4814:6;4772:69;:::i;:::-;4630:218;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "176200",
								"executionCost": "220",
								"totalCost": "176420"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122055d472e0f401bdb5ef60a0f76ffdd2b6164d5b6793ce83e248e545f4eee0a0fc64736f6c634300080e0033",
									".code": [
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 744,
											"end": 781,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 744,
											"end": 781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1419,
											"end": 1431,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1531,
											"end": 1538,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1526,
											"end": 1528,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1519,
											"end": 1524,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1515,
											"end": 1529,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1539,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1501,
											"end": 1539,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1501,
											"end": 1539,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1443,
											"end": 1545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1551,
											"end": 1731,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1551,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1599,
											"end": 1676,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1677,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1696,
											"end": 1700,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1693,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1720,
											"end": 1724,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1725,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1842,
											"end": 1846,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 1820,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1812,
											"end": 1818,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1848,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1950,
											"end": 1956,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1938,
											"end": 1948,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1935,
											"end": 1957,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1914,
											"end": 1932,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1902,
											"end": 1912,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1899,
											"end": 1933,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1896,
											"end": 1958,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1961,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2011,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1997,
											"end": 1999,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2012,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1780,
											"end": 2018,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1737,
											"end": 2018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 2085,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2075,
											"end": 2105,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2075,
											"end": 2105,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 2114,
											"end": 2147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2024,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2224,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2328,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2302,
											"end": 2308,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2299,
											"end": 2329,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2332,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 2392,
											"end": 2398,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 2370,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2362,
											"end": 2399,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2362,
											"end": 2399,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2454,
											"end": 2458,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2452,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2159,
											"end": 2466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2472,
											"end": 2626,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 2472,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2556,
											"end": 2562,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2551,
											"end": 2554,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2549,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2533,
											"end": 2563,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2619,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2604,
											"end": 2607,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2600,
											"end": 2616,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2472,
											"end": 2626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2472,
											"end": 2626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2472,
											"end": 2626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2472,
											"end": 2626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2632,
											"end": 3042,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 2632,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2714,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2734,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 2750,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 2791,
											"end": 2797,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2750,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 2750,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2750,
											"end": 2798,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 2750,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2734,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 2734,
											"end": 2799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2734,
											"end": 2799,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 2734,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2725,
											"end": 2799,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2725,
											"end": 2799,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2822,
											"end": 2828,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2815,
											"end": 2820,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2829,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2864,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2853,
											"end": 2858,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2849,
											"end": 2865,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2898,
											"end": 2901,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2889,
											"end": 2895,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2884,
											"end": 2887,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2880,
											"end": 2896,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2877,
											"end": 2902,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2905,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 2905,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 2905,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2905,
											"end": 2984,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 2905,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2995,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 3029,
											"end": 3035,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3027,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3019,
											"end": 3022,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2995,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 2995,
											"end": 3036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2995,
											"end": 3036,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 2995,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2715,
											"end": 3042,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2632,
											"end": 3042,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2632,
											"end": 3042,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2632,
											"end": 3042,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2632,
											"end": 3042,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2632,
											"end": 3042,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2632,
											"end": 3042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3061,
											"end": 3399,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 3061,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3116,
											"end": 3121,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3168,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3158,
											"end": 3162,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3150,
											"end": 3156,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3163,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3169,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3132,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 3132,
											"end": 3254,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3173,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 3173,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 3173,
											"end": 3252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3173,
											"end": 3252,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 3173,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3132,
											"end": 3254,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 3132,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3296,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3277,
											"end": 3297,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 3389,
											"end": 3392,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3374,
											"end": 3378,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3366,
											"end": 3372,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3362,
											"end": 3379,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 3315,
											"end": 3393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3393,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 3315,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3393,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3393,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3122,
											"end": 3399,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3061,
											"end": 3399,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3061,
											"end": 3399,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3061,
											"end": 3399,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3061,
											"end": 3399,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3061,
											"end": 3399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 4348,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 3405,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3500,
											"end": 3506,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3516,
											"end": 3522,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3530,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3573,
											"end": 3576,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3561,
											"end": 3570,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3552,
											"end": 3559,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3548,
											"end": 3571,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3544,
											"end": 3577,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3541,
											"end": 3661,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3541,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 3541,
											"end": 3661,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3580,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 3580,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 3580,
											"end": 3659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3580,
											"end": 3659,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 3580,
											"end": 3659,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3541,
											"end": 3661,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 3541,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3700,
											"end": 3701,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3725,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3770,
											"end": 3777,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3767,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3750,
											"end": 3759,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3768,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3725,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 3725,
											"end": 3778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3725,
											"end": 3778,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3725,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3715,
											"end": 3778,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3715,
											"end": 3778,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3671,
											"end": 3788,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3853,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 3898,
											"end": 3905,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3889,
											"end": 3895,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3878,
											"end": 3887,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3874,
											"end": 3896,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3853,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 3853,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3853,
											"end": 3906,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 3853,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3843,
											"end": 3906,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3843,
											"end": 3906,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 3916,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3955,
											"end": 3957,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3981,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 4026,
											"end": 4033,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4017,
											"end": 4023,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4006,
											"end": 4015,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4002,
											"end": 4024,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3981,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3981,
											"end": 4034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3981,
											"end": 4034,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 3981,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3971,
											"end": 4034,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3971,
											"end": 4034,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 4044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4113,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4100,
											"end": 4109,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4114,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4115,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4142,
											"end": 4160,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4134,
											"end": 4140,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4131,
											"end": 4161,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4128,
											"end": 4245,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4128,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 4128,
											"end": 4245,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4164,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4164,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 4164,
											"end": 4243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4164,
											"end": 4243,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4164,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4128,
											"end": 4245,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 4128,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 4323,
											"end": 4330,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4314,
											"end": 4320,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4312,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4299,
											"end": 4321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 4269,
											"end": 4331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4269,
											"end": 4331,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 4269,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4259,
											"end": 4331,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4259,
											"end": 4331,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4054,
											"end": 4341,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 4348,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 4348,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 4348,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 4348,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 4348,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 4348,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 4348,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 4348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4354,
											"end": 4503,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 4354,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4390,
											"end": 4397,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4430,
											"end": 4496,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4423,
											"end": 4428,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4419,
											"end": 4497,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4408,
											"end": 4497,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4408,
											"end": 4497,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4354,
											"end": 4503,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4354,
											"end": 4503,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4354,
											"end": 4503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4354,
											"end": 4503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4624,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 4509,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4594,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 4611,
											"end": 4616,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4594,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 4594,
											"end": 4617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4594,
											"end": 4617,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 4594,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 4592,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4582,
											"end": 4618,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4624,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4624,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4630,
											"end": 4848,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 4630,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4721,
											"end": 4725,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4761,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4748,
											"end": 4757,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4744,
											"end": 4762,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4736,
											"end": 4762,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4736,
											"end": 4762,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4772,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 4838,
											"end": 4839,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4827,
											"end": 4836,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4823,
											"end": 4840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4820,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4772,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 4772,
											"end": 4841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4772,
											"end": 4841,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 4772,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4630,
											"end": 4848,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4630,
											"end": 4848,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4630,
											"end": 4848,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4630,
											"end": 4848,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4630,
											"end": 4848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/plugins/StaterTransfers.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/plugins/StaterTransfers.sol": {
				"StaterTransfers": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "nftAddressArray",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "nftTokenIdArray",
									"type": "uint256[]"
								},
								{
									"internalType": "uint8[]",
									"name": "nftTokenTypeArray",
									"type": "uint8[]"
								}
							],
							"name": "transferItems",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "qty1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "qty2",
									"type": "uint256"
								}
							],
							"name": "transferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/plugins/StaterTransfers.sol\":430:2317  contract StaterTransfers is Ownable, ERC721Holder, ERC1155Holder {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/plugins/StaterTransfers.sol\":430:2317  contract StaterTransfers is Ownable, ERC721Holder, ERC1155Holder {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/plugins/StaterTransfers.sol\":430:2317  contract StaterTransfers is Ownable, ERC721Holder, ERC1155Holder {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/plugins/StaterTransfers.sol\":430:2317  contract StaterTransfers is Ownable, ERC721Holder, ERC1155Holder {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e3f4a5d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x407299d7\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/plugins/StaterTransfers.sol\":625:1330  function transferTokens(... */\n    tag_5:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/plugins/StaterTransfers.sol\":1427:2314  function transferItems(... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_8:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_9:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":527:561  type(IERC1155Receiver).interfaceId */\n      0x4e2312e000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:523  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_54\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      tag_55\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":589:600  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:588  super.supportsInterface */\n      tag_56\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":726:732  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":751:781  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":744:781  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/plugins/StaterTransfers.sol\":625:1330  function transferTokens(... */\n    tag_28:\n        /* \"contracts/plugins/StaterTransfers.sol\":815:816  0 */\n      0x00\n        /* \"contracts/plugins/StaterTransfers.sol\":795:817  currency != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/plugins/StaterTransfers.sol\":795:803  currency */\n      dup4\n        /* \"contracts/plugins/StaterTransfers.sol\":795:817  currency != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/plugins/StaterTransfers.sol\":790:1324  if ( currency != address(0) ){... */\n      tag_59\n      jumpi\n        /* \"contracts/plugins/StaterTransfers.sol\":846:854  currency */\n      dup3\n        /* \"contracts/plugins/StaterTransfers.sol\":839:868  IERC20(currency).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/plugins/StaterTransfers.sol\":884:888  from */\n      dup7\n        /* \"contracts/plugins/StaterTransfers.sol\":904:906  to */\n      dup7\n        /* \"contracts/plugins/StaterTransfers.sol\":923:927  qty1 */\n      dup6\n        /* \"contracts/plugins/StaterTransfers.sol\":839:939  IERC20(currency).transferFrom(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"contracts/plugins/StaterTransfers.sol\":831:981  require(IERC20(currency).transferFrom(... */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"contracts/plugins/StaterTransfers.sol\":1008:1016  currency */\n      dup3\n        /* \"contracts/plugins/StaterTransfers.sol\":1001:1030  IERC20(currency).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/plugins/StaterTransfers.sol\":1046:1050  from */\n      dup7\n        /* \"contracts/plugins/StaterTransfers.sol\":1066:1073  owner() */\n      tag_69\n        /* \"contracts/plugins/StaterTransfers.sol\":1066:1071  owner */\n      tag_36\n        /* \"contracts/plugins/StaterTransfers.sol\":1066:1073  owner() */\n      jump\t// in\n    tag_69:\n        /* \"contracts/plugins/StaterTransfers.sol\":1090:1094  qty2 */\n      dup5\n        /* \"contracts/plugins/StaterTransfers.sol\":1001:1106  IERC20(currency).transferFrom(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_73:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_74:\n        /* \"contracts/plugins/StaterTransfers.sol\":993:1146  require(IERC20(currency).transferFrom(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"contracts/plugins/StaterTransfers.sol\":790:1324  if ( currency != address(0) ){... */\n      jump(tag_78)\n    tag_59:\n        /* \"contracts/plugins/StaterTransfers.sol\":1179:1181  to */\n      dup4\n        /* \"contracts/plugins/StaterTransfers.sol\":1179:1186  to.send */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/plugins/StaterTransfers.sol\":1179:1192  to.send(qty1) */\n      0x08fc\n        /* \"contracts/plugins/StaterTransfers.sol\":1187:1191  qty1 */\n      dup4\n        /* \"contracts/plugins/StaterTransfers.sol\":1179:1192  to.send(qty1) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1171:1231  require(to.send(qty1), \"Transfer of ETH to receiver failed\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"contracts/plugins/StaterTransfers.sol\":1259:1266  owner() */\n      tag_83\n        /* \"contracts/plugins/StaterTransfers.sol\":1259:1264  owner */\n      tag_36\n        /* \"contracts/plugins/StaterTransfers.sol\":1259:1266  owner() */\n      jump\t// in\n    tag_83:\n        /* \"contracts/plugins/StaterTransfers.sol\":1251:1272  payable(owner()).send */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/plugins/StaterTransfers.sol\":1251:1278  payable(owner()).send(qty2) */\n      0x08fc\n        /* \"contracts/plugins/StaterTransfers.sol\":1273:1277  qty2 */\n      dup3\n        /* \"contracts/plugins/StaterTransfers.sol\":1251:1278  payable(owner()).send(qty2) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1243:1315  require(payable(owner()).send(qty2), \"Transfer of ETH to Stater failed\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"contracts/plugins/StaterTransfers.sol\":790:1324  if ( currency != address(0) ){... */\n    tag_78:\n        /* \"contracts/plugins/StaterTransfers.sol\":625:1330  function transferTokens(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/plugins/StaterTransfers.sol\":1427:2314  function transferItems(... */\n    tag_32:\n        /* \"contracts/plugins/StaterTransfers.sol\":1644:1658  uint256 length */\n      0x00\n        /* \"contracts/plugins/StaterTransfers.sol\":1661:1676  nftAddressArray */\n      dup4\n        /* \"contracts/plugins/StaterTransfers.sol\":1661:1683  nftAddressArray.length */\n      mload\n        /* \"contracts/plugins/StaterTransfers.sol\":1644:1683  uint256 length = nftAddressArray.length */\n      swap1\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1711:1726  nftTokenIdArray */\n      dup3\n        /* \"contracts/plugins/StaterTransfers.sol\":1711:1733  nftTokenIdArray.length */\n      mload\n        /* \"contracts/plugins/StaterTransfers.sol\":1701:1707  length */\n      dup2\n        /* \"contracts/plugins/StaterTransfers.sol\":1701:1733  length == nftTokenIdArray.length */\n      eq\n        /* \"contracts/plugins/StaterTransfers.sol\":1701:1771  length == nftTokenIdArray.length && nftTokenTypeArray.length == length */\n      dup1\n      iszero\n      tag_89\n      jumpi\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1765:1771  length */\n      dup1\n        /* \"contracts/plugins/StaterTransfers.sol\":1737:1754  nftTokenTypeArray */\n      dup3\n        /* \"contracts/plugins/StaterTransfers.sol\":1737:1761  nftTokenTypeArray.length */\n      mload\n        /* \"contracts/plugins/StaterTransfers.sol\":1737:1771  nftTokenTypeArray.length == length */\n      eq\n        /* \"contracts/plugins/StaterTransfers.sol\":1701:1771  length == nftTokenIdArray.length && nftTokenTypeArray.length == length */\n    tag_89:\n        /* \"contracts/plugins/StaterTransfers.sol\":1693:1808  require(length == nftTokenIdArray.length && nftTokenTypeArray.length == length, \"Token infos provided are invalid\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"contracts/plugins/StaterTransfers.sol\":1822:1831  uint256 i */\n      0x00\n        /* \"contracts/plugins/StaterTransfers.sol\":1818:2307  for(uint256 i = 0; i < length; ++i) ... */\n    tag_93:\n        /* \"contracts/plugins/StaterTransfers.sol\":1841:1847  length */\n      dup2\n        /* \"contracts/plugins/StaterTransfers.sol\":1837:1838  i */\n      dup2\n        /* \"contracts/plugins/StaterTransfers.sol\":1837:1847  i < length */\n      lt\n        /* \"contracts/plugins/StaterTransfers.sol\":1818:2307  for(uint256 i = 0; i < length; ++i) ... */\n      iszero\n      tag_94\n      jumpi\n        /* \"contracts/plugins/StaterTransfers.sol\":1896:1897  0 */\n      0x00\n        /* \"contracts/plugins/StaterTransfers.sol\":1872:1889  nftTokenTypeArray */\n      dup4\n        /* \"contracts/plugins/StaterTransfers.sol\":1890:1891  i */\n      dup3\n        /* \"contracts/plugins/StaterTransfers.sol\":1872:1892  nftTokenTypeArray[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/plugins/StaterTransfers.sol\":1872:1897  nftTokenTypeArray[i] == 0 */\n      0xff\n      and\n      sub\n        /* \"contracts/plugins/StaterTransfers.sol\":1867:2307  if ( nftTokenTypeArray[i] == 0 )... */\n      tag_99\n      jumpi\n        /* \"contracts/plugins/StaterTransfers.sol\":1924:1939  nftAddressArray */\n      dup5\n        /* \"contracts/plugins/StaterTransfers.sol\":1940:1941  i */\n      dup2\n        /* \"contracts/plugins/StaterTransfers.sol\":1924:1942  nftAddressArray[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_100\n      jumpi\n      tag_101\n      tag_98\n      jump\t// in\n    tag_101:\n    tag_100:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/plugins/StaterTransfers.sol\":1916:1960  IERC721(nftAddressArray[i]).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"contracts/plugins/StaterTransfers.sol\":1982:1986  from */\n      dup9\n        /* \"contracts/plugins/StaterTransfers.sol\":2008:2010  to */\n      dup9\n        /* \"contracts/plugins/StaterTransfers.sol\":2032:2047  nftTokenIdArray */\n      dup8\n        /* \"contracts/plugins/StaterTransfers.sol\":2048:2049  i */\n      dup6\n        /* \"contracts/plugins/StaterTransfers.sol\":2032:2050  nftTokenIdArray[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_102\n      jumpi\n      tag_103\n      tag_98\n      jump\t// in\n    tag_103:\n    tag_102:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/plugins/StaterTransfers.sol\":1916:2068  IERC721(nftAddressArray[i]).safeTransferFrom(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_104:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1867:2307  if ( nftTokenTypeArray[i] == 0 )... */\n      jump(tag_108)\n    tag_99:\n        /* \"contracts/plugins/StaterTransfers.sol\":2112:2127  nftAddressArray */\n      dup5\n        /* \"contracts/plugins/StaterTransfers.sol\":2128:2129  i */\n      dup2\n        /* \"contracts/plugins/StaterTransfers.sol\":2112:2130  nftAddressArray[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_109\n      jumpi\n      tag_110\n      tag_98\n      jump\t// in\n    tag_110:\n    tag_109:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/plugins/StaterTransfers.sol\":2103:2148  IERC1155(nftAddressArray[i]).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf242432a\n        /* \"contracts/plugins/StaterTransfers.sol\":2170:2174  from */\n      dup9\n        /* \"contracts/plugins/StaterTransfers.sol\":2196:2198  to */\n      dup9\n        /* \"contracts/plugins/StaterTransfers.sol\":2220:2235  nftTokenIdArray */\n      dup8\n        /* \"contracts/plugins/StaterTransfers.sol\":2236:2237  i */\n      dup6\n        /* \"contracts/plugins/StaterTransfers.sol\":2220:2238  nftTokenIdArray[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_111\n      jumpi\n      tag_112\n      tag_98\n      jump\t// in\n    tag_112:\n    tag_111:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/plugins/StaterTransfers.sol\":2260:2261  1 */\n      0x01\n        /* \"contracts/plugins/StaterTransfers.sol\":2103:2307  IERC1155(nftAddressArray[i]).safeTransferFrom(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_117\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1867:2307  if ( nftTokenTypeArray[i] == 0 )... */\n    tag_108:\n        /* \"contracts/plugins/StaterTransfers.sol\":1849:1852  ++i */\n      dup1\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      swap1\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1818:2307  for(uint256 i = 0; i < length; ++i) ... */\n      jump(tag_93)\n    tag_94:\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1634:2314  {... */\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1427:2314  function transferItems(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":903:909  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":928:964  this.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":921:964  return this.onERC1155BatchReceived.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":655:661  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":680:711  this.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":673:711  return this.onERC1155Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_126\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_146:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_147:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_148:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_149:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_150:\n        /* \"#utility.yul\":561:584   */\n      tag_225\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_149\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_226:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_151:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_228\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_150\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_15:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_231\n      tag_147\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":833:952   */\n    tag_230:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_232\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_151\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_152:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_153:\n        /* \"#utility.yul\":1268:1289   */\n      tag_235\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_152\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_18:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_237\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_153\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_154:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_155:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_240\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_154\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_156:\n        /* \"#utility.yul\":1825:1849   */\n      tag_242\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_155\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_243\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      dup1\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_243:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_157:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_245\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_156\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2102   */\n    tag_158:\n        /* \"#utility.yul\":2062:2069   */\n      0x00\n        /* \"#utility.yul\":2091:2096   */\n      dup2\n        /* \"#utility.yul\":2080:2096   */\n      swap1\n      pop\n        /* \"#utility.yul\":2025:2102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2108:2230   */\n    tag_159:\n        /* \"#utility.yul\":2181:2205   */\n      tag_248\n        /* \"#utility.yul\":2199:2204   */\n      dup2\n        /* \"#utility.yul\":2181:2205   */\n      tag_158\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":2174:2179   */\n      dup2\n        /* \"#utility.yul\":2171:2206   */\n      eq\n        /* \"#utility.yul\":2161:2224   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":2220:2221   */\n      0x00\n        /* \"#utility.yul\":2217:2218   */\n      dup1\n        /* \"#utility.yul\":2210:2222   */\n      revert\n        /* \"#utility.yul\":2161:2224   */\n    tag_249:\n        /* \"#utility.yul\":2108:2230   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2375   */\n    tag_160:\n        /* \"#utility.yul\":2282:2287   */\n      0x00\n        /* \"#utility.yul\":2320:2326   */\n      dup2\n        /* \"#utility.yul\":2307:2327   */\n      calldataload\n        /* \"#utility.yul\":2298:2327   */\n      swap1\n      pop\n        /* \"#utility.yul\":2336:2369   */\n      tag_251\n        /* \"#utility.yul\":2363:2368   */\n      dup2\n        /* \"#utility.yul\":2336:2369   */\n      tag_159\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2236:2375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2381:2498   */\n    tag_161:\n        /* \"#utility.yul\":2490:2491   */\n      0x00\n        /* \"#utility.yul\":2487:2488   */\n      dup1\n        /* \"#utility.yul\":2480:2492   */\n      revert\n        /* \"#utility.yul\":2504:2621   */\n    tag_162:\n        /* \"#utility.yul\":2613:2614   */\n      0x00\n        /* \"#utility.yul\":2610:2611   */\n      dup1\n        /* \"#utility.yul\":2603:2615   */\n      revert\n        /* \"#utility.yul\":2627:2729   */\n    tag_163:\n        /* \"#utility.yul\":2668:2674   */\n      0x00\n        /* \"#utility.yul\":2719:2721   */\n      0x1f\n        /* \"#utility.yul\":2715:2722   */\n      not\n        /* \"#utility.yul\":2710:2712   */\n      0x1f\n        /* \"#utility.yul\":2703:2708   */\n      dup4\n        /* \"#utility.yul\":2699:2713   */\n      add\n        /* \"#utility.yul\":2695:2723   */\n      and\n        /* \"#utility.yul\":2685:2723   */\n      swap1\n      pop\n        /* \"#utility.yul\":2627:2729   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2735:2915   */\n    tag_164:\n        /* \"#utility.yul\":2783:2860   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2780:2781   */\n      0x00\n        /* \"#utility.yul\":2773:2861   */\n      mstore\n        /* \"#utility.yul\":2880:2884   */\n      0x41\n        /* \"#utility.yul\":2877:2878   */\n      0x04\n        /* \"#utility.yul\":2870:2885   */\n      mstore\n        /* \"#utility.yul\":2904:2908   */\n      0x24\n        /* \"#utility.yul\":2901:2902   */\n      0x00\n        /* \"#utility.yul\":2894:2909   */\n      revert\n        /* \"#utility.yul\":2921:3202   */\n    tag_165:\n        /* \"#utility.yul\":3004:3031   */\n      tag_257\n        /* \"#utility.yul\":3026:3030   */\n      dup3\n        /* \"#utility.yul\":3004:3031   */\n      tag_163\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2996:3002   */\n      dup2\n        /* \"#utility.yul\":2992:3032   */\n      add\n        /* \"#utility.yul\":3134:3140   */\n      dup2\n        /* \"#utility.yul\":3122:3132   */\n      dup2\n        /* \"#utility.yul\":3119:3141   */\n      lt\n        /* \"#utility.yul\":3098:3116   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3086:3096   */\n      dup3\n        /* \"#utility.yul\":3083:3117   */\n      gt\n        /* \"#utility.yul\":3080:3142   */\n      or\n        /* \"#utility.yul\":3077:3165   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":3145:3163   */\n      tag_259\n      tag_164\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":3077:3165   */\n    tag_258:\n        /* \"#utility.yul\":3185:3195   */\n      dup1\n        /* \"#utility.yul\":3181:3183   */\n      0x40\n        /* \"#utility.yul\":3174:3196   */\n      mstore\n        /* \"#utility.yul\":2964:3202   */\n      pop\n        /* \"#utility.yul\":2921:3202   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3208:3337   */\n    tag_166:\n        /* \"#utility.yul\":3242:3248   */\n      0x00\n        /* \"#utility.yul\":3269:3289   */\n      tag_261\n      tag_146\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":3259:3289   */\n      swap1\n      pop\n        /* \"#utility.yul\":3298:3331   */\n      tag_262\n        /* \"#utility.yul\":3326:3330   */\n      dup3\n        /* \"#utility.yul\":3318:3324   */\n      dup3\n        /* \"#utility.yul\":3298:3331   */\n      tag_165\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3208:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3650   */\n    tag_167:\n        /* \"#utility.yul\":3404:3408   */\n      0x00\n        /* \"#utility.yul\":3494:3512   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3486:3492   */\n      dup3\n        /* \"#utility.yul\":3483:3513   */\n      gt\n        /* \"#utility.yul\":3480:3536   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":3516:3534   */\n      tag_265\n      tag_164\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":3480:3536   */\n    tag_264:\n        /* \"#utility.yul\":3554:3583   */\n      tag_266\n        /* \"#utility.yul\":3576:3582   */\n      dup3\n        /* \"#utility.yul\":3554:3583   */\n      tag_163\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3546:3583   */\n      swap1\n      pop\n        /* \"#utility.yul\":3638:3642   */\n      0x20\n        /* \"#utility.yul\":3632:3636   */\n      dup2\n        /* \"#utility.yul\":3628:3643   */\n      add\n        /* \"#utility.yul\":3620:3643   */\n      swap1\n      pop\n        /* \"#utility.yul\":3343:3650   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3656:3810   */\n    tag_168:\n        /* \"#utility.yul\":3740:3746   */\n      dup3\n        /* \"#utility.yul\":3735:3738   */\n      dup2\n        /* \"#utility.yul\":3730:3733   */\n      dup4\n        /* \"#utility.yul\":3717:3747   */\n      calldatacopy\n        /* \"#utility.yul\":3802:3803   */\n      0x00\n        /* \"#utility.yul\":3793:3799   */\n      dup4\n        /* \"#utility.yul\":3788:3791   */\n      dup4\n        /* \"#utility.yul\":3784:3800   */\n      add\n        /* \"#utility.yul\":3777:3804   */\n      mstore\n        /* \"#utility.yul\":3656:3810   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3816:4226   */\n    tag_169:\n        /* \"#utility.yul\":3893:3898   */\n      0x00\n        /* \"#utility.yul\":3918:3983   */\n      tag_269\n        /* \"#utility.yul\":3934:3982   */\n      tag_270\n        /* \"#utility.yul\":3975:3981   */\n      dup5\n        /* \"#utility.yul\":3934:3982   */\n      tag_167\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":3918:3983   */\n      tag_166\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3909:3983   */\n      swap1\n      pop\n        /* \"#utility.yul\":4006:4012   */\n      dup3\n        /* \"#utility.yul\":3999:4004   */\n      dup2\n        /* \"#utility.yul\":3992:4013   */\n      mstore\n        /* \"#utility.yul\":4044:4048   */\n      0x20\n        /* \"#utility.yul\":4037:4042   */\n      dup2\n        /* \"#utility.yul\":4033:4049   */\n      add\n        /* \"#utility.yul\":4082:4085   */\n      dup5\n        /* \"#utility.yul\":4073:4079   */\n      dup5\n        /* \"#utility.yul\":4068:4071   */\n      dup5\n        /* \"#utility.yul\":4064:4080   */\n      add\n        /* \"#utility.yul\":4061:4086   */\n      gt\n        /* \"#utility.yul\":4058:4170   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":4089:4168   */\n      tag_272\n      tag_162\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":4058:4170   */\n    tag_271:\n        /* \"#utility.yul\":4179:4220   */\n      tag_273\n        /* \"#utility.yul\":4213:4219   */\n      dup5\n        /* \"#utility.yul\":4208:4211   */\n      dup3\n        /* \"#utility.yul\":4203:4206   */\n      dup6\n        /* \"#utility.yul\":4179:4220   */\n      tag_168\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":3899:4226   */\n      pop\n        /* \"#utility.yul\":3816:4226   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4245:4583   */\n    tag_170:\n        /* \"#utility.yul\":4300:4305   */\n      0x00\n        /* \"#utility.yul\":4349:4352   */\n      dup3\n        /* \"#utility.yul\":4342:4346   */\n      0x1f\n        /* \"#utility.yul\":4334:4340   */\n      dup4\n        /* \"#utility.yul\":4330:4347   */\n      add\n        /* \"#utility.yul\":4326:4353   */\n      slt\n        /* \"#utility.yul\":4316:4438   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":4357:4436   */\n      tag_276\n      tag_161\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4316:4438   */\n    tag_275:\n        /* \"#utility.yul\":4474:4480   */\n      dup2\n        /* \"#utility.yul\":4461:4481   */\n      calldataload\n        /* \"#utility.yul\":4499:4577   */\n      tag_277\n        /* \"#utility.yul\":4573:4576   */\n      dup5\n        /* \"#utility.yul\":4565:4571   */\n      dup3\n        /* \"#utility.yul\":4558:4562   */\n      0x20\n        /* \"#utility.yul\":4550:4556   */\n      dup7\n        /* \"#utility.yul\":4546:4563   */\n      add\n        /* \"#utility.yul\":4499:4577   */\n      tag_169\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4490:4577   */\n      swap2\n      pop\n        /* \"#utility.yul\":4306:4583   */\n      pop\n        /* \"#utility.yul\":4245:4583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4589:5532   */\n    tag_21:\n        /* \"#utility.yul\":4684:4690   */\n      0x00\n        /* \"#utility.yul\":4692:4698   */\n      dup1\n        /* \"#utility.yul\":4700:4706   */\n      0x00\n        /* \"#utility.yul\":4708:4714   */\n      dup1\n        /* \"#utility.yul\":4757:4760   */\n      0x80\n        /* \"#utility.yul\":4745:4754   */\n      dup6\n        /* \"#utility.yul\":4736:4743   */\n      dup8\n        /* \"#utility.yul\":4732:4755   */\n      sub\n        /* \"#utility.yul\":4728:4761   */\n      slt\n        /* \"#utility.yul\":4725:4845   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":4764:4843   */\n      tag_280\n      tag_147\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":4725:4845   */\n    tag_279:\n        /* \"#utility.yul\":4884:4885   */\n      0x00\n        /* \"#utility.yul\":4909:4962   */\n      tag_281\n        /* \"#utility.yul\":4954:4961   */\n      dup8\n        /* \"#utility.yul\":4945:4951   */\n      dup3\n        /* \"#utility.yul\":4934:4943   */\n      dup9\n        /* \"#utility.yul\":4930:4952   */\n      add\n        /* \"#utility.yul\":4909:4962   */\n      tag_157\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":4899:4962   */\n      swap5\n      pop\n        /* \"#utility.yul\":4855:4972   */\n      pop\n        /* \"#utility.yul\":5011:5013   */\n      0x20\n        /* \"#utility.yul\":5037:5090   */\n      tag_282\n        /* \"#utility.yul\":5082:5089   */\n      dup8\n        /* \"#utility.yul\":5073:5079   */\n      dup3\n        /* \"#utility.yul\":5062:5071   */\n      dup9\n        /* \"#utility.yul\":5058:5080   */\n      add\n        /* \"#utility.yul\":5037:5090   */\n      tag_157\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":5027:5090   */\n      swap4\n      pop\n        /* \"#utility.yul\":4982:5100   */\n      pop\n        /* \"#utility.yul\":5139:5141   */\n      0x40\n        /* \"#utility.yul\":5165:5218   */\n      tag_283\n        /* \"#utility.yul\":5210:5217   */\n      dup8\n        /* \"#utility.yul\":5201:5207   */\n      dup3\n        /* \"#utility.yul\":5190:5199   */\n      dup9\n        /* \"#utility.yul\":5186:5208   */\n      add\n        /* \"#utility.yul\":5165:5218   */\n      tag_160\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5155:5218   */\n      swap3\n      pop\n        /* \"#utility.yul\":5110:5228   */\n      pop\n        /* \"#utility.yul\":5295:5297   */\n      0x60\n        /* \"#utility.yul\":5284:5293   */\n      dup6\n        /* \"#utility.yul\":5280:5298   */\n      add\n        /* \"#utility.yul\":5267:5299   */\n      calldataload\n        /* \"#utility.yul\":5326:5344   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5318:5324   */\n      dup2\n        /* \"#utility.yul\":5315:5345   */\n      gt\n        /* \"#utility.yul\":5312:5429   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":5348:5427   */\n      tag_285\n      tag_148\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5312:5429   */\n    tag_284:\n        /* \"#utility.yul\":5453:5515   */\n      tag_286\n        /* \"#utility.yul\":5507:5514   */\n      dup8\n        /* \"#utility.yul\":5498:5504   */\n      dup3\n        /* \"#utility.yul\":5487:5496   */\n      dup9\n        /* \"#utility.yul\":5483:5505   */\n      add\n        /* \"#utility.yul\":5453:5515   */\n      tag_170\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5443:5515   */\n      swap2\n      pop\n        /* \"#utility.yul\":5238:5525   */\n      pop\n        /* \"#utility.yul\":4589:5532   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5538:5653   */\n    tag_171:\n        /* \"#utility.yul\":5623:5646   */\n      tag_288\n        /* \"#utility.yul\":5640:5645   */\n      dup2\n        /* \"#utility.yul\":5623:5646   */\n      tag_149\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":5618:5621   */\n      dup3\n        /* \"#utility.yul\":5611:5647   */\n      mstore\n        /* \"#utility.yul\":5538:5653   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5659:5877   */\n    tag_24:\n        /* \"#utility.yul\":5750:5754   */\n      0x00\n        /* \"#utility.yul\":5788:5790   */\n      0x20\n        /* \"#utility.yul\":5777:5786   */\n      dup3\n        /* \"#utility.yul\":5773:5791   */\n      add\n        /* \"#utility.yul\":5765:5791   */\n      swap1\n      pop\n        /* \"#utility.yul\":5801:5870   */\n      tag_290\n        /* \"#utility.yul\":5867:5868   */\n      0x00\n        /* \"#utility.yul\":5856:5865   */\n      dup4\n        /* \"#utility.yul\":5852:5869   */\n      add\n        /* \"#utility.yul\":5843:5849   */\n      dup5\n        /* \"#utility.yul\":5801:5870   */\n      tag_171\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":5659:5877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5883:5987   */\n    tag_172:\n        /* \"#utility.yul\":5928:5935   */\n      0x00\n        /* \"#utility.yul\":5957:5981   */\n      tag_292\n        /* \"#utility.yul\":5975:5980   */\n      dup3\n        /* \"#utility.yul\":5957:5981   */\n      tag_154\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":5946:5981   */\n      swap1\n      pop\n        /* \"#utility.yul\":5883:5987   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5993:6131   */\n    tag_173:\n        /* \"#utility.yul\":6074:6106   */\n      tag_294\n        /* \"#utility.yul\":6100:6105   */\n      dup2\n        /* \"#utility.yul\":6074:6106   */\n      tag_172\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":6067:6072   */\n      dup2\n        /* \"#utility.yul\":6064:6107   */\n      eq\n        /* \"#utility.yul\":6054:6125   */\n      tag_295\n      jumpi\n        /* \"#utility.yul\":6121:6122   */\n      0x00\n        /* \"#utility.yul\":6118:6119   */\n      dup1\n        /* \"#utility.yul\":6111:6123   */\n      revert\n        /* \"#utility.yul\":6054:6125   */\n    tag_295:\n        /* \"#utility.yul\":5993:6131   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6137:6292   */\n    tag_174:\n        /* \"#utility.yul\":6191:6196   */\n      0x00\n        /* \"#utility.yul\":6229:6235   */\n      dup2\n        /* \"#utility.yul\":6216:6236   */\n      calldataload\n        /* \"#utility.yul\":6207:6236   */\n      swap1\n      pop\n        /* \"#utility.yul\":6245:6286   */\n      tag_297\n        /* \"#utility.yul\":6280:6285   */\n      dup2\n        /* \"#utility.yul\":6245:6286   */\n      tag_173\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":6137:6292   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6298:7225   */\n    tag_27:\n        /* \"#utility.yul\":6401:6407   */\n      0x00\n        /* \"#utility.yul\":6409:6415   */\n      dup1\n        /* \"#utility.yul\":6417:6423   */\n      0x00\n        /* \"#utility.yul\":6425:6431   */\n      dup1\n        /* \"#utility.yul\":6433:6439   */\n      0x00\n        /* \"#utility.yul\":6482:6485   */\n      0xa0\n        /* \"#utility.yul\":6470:6479   */\n      dup7\n        /* \"#utility.yul\":6461:6468   */\n      dup9\n        /* \"#utility.yul\":6457:6480   */\n      sub\n        /* \"#utility.yul\":6453:6486   */\n      slt\n        /* \"#utility.yul\":6450:6570   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":6489:6568   */\n      tag_300\n      tag_147\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":6450:6570   */\n    tag_299:\n        /* \"#utility.yul\":6609:6610   */\n      0x00\n        /* \"#utility.yul\":6634:6687   */\n      tag_301\n        /* \"#utility.yul\":6679:6686   */\n      dup9\n        /* \"#utility.yul\":6670:6676   */\n      dup3\n        /* \"#utility.yul\":6659:6668   */\n      dup10\n        /* \"#utility.yul\":6655:6677   */\n      add\n        /* \"#utility.yul\":6634:6687   */\n      tag_157\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":6624:6687   */\n      swap6\n      pop\n        /* \"#utility.yul\":6580:6697   */\n      pop\n        /* \"#utility.yul\":6736:6738   */\n      0x20\n        /* \"#utility.yul\":6762:6823   */\n      tag_302\n        /* \"#utility.yul\":6815:6822   */\n      dup9\n        /* \"#utility.yul\":6806:6812   */\n      dup3\n        /* \"#utility.yul\":6795:6804   */\n      dup10\n        /* \"#utility.yul\":6791:6813   */\n      add\n        /* \"#utility.yul\":6762:6823   */\n      tag_174\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":6752:6823   */\n      swap5\n      pop\n        /* \"#utility.yul\":6707:6833   */\n      pop\n        /* \"#utility.yul\":6872:6874   */\n      0x40\n        /* \"#utility.yul\":6898:6951   */\n      tag_303\n        /* \"#utility.yul\":6943:6950   */\n      dup9\n        /* \"#utility.yul\":6934:6940   */\n      dup3\n        /* \"#utility.yul\":6923:6932   */\n      dup10\n        /* \"#utility.yul\":6919:6941   */\n      add\n        /* \"#utility.yul\":6898:6951   */\n      tag_157\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":6888:6951   */\n      swap4\n      pop\n        /* \"#utility.yul\":6843:6961   */\n      pop\n        /* \"#utility.yul\":7000:7002   */\n      0x60\n        /* \"#utility.yul\":7026:7079   */\n      tag_304\n        /* \"#utility.yul\":7071:7078   */\n      dup9\n        /* \"#utility.yul\":7062:7068   */\n      dup3\n        /* \"#utility.yul\":7051:7060   */\n      dup10\n        /* \"#utility.yul\":7047:7069   */\n      add\n        /* \"#utility.yul\":7026:7079   */\n      tag_160\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":7016:7079   */\n      swap3\n      pop\n        /* \"#utility.yul\":6971:7089   */\n      pop\n        /* \"#utility.yul\":7128:7131   */\n      0x80\n        /* \"#utility.yul\":7155:7208   */\n      tag_305\n        /* \"#utility.yul\":7200:7207   */\n      dup9\n        /* \"#utility.yul\":7191:7197   */\n      dup3\n        /* \"#utility.yul\":7180:7189   */\n      dup10\n        /* \"#utility.yul\":7176:7198   */\n      add\n        /* \"#utility.yul\":7155:7208   */\n      tag_160\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":7145:7208   */\n      swap2\n      pop\n        /* \"#utility.yul\":7099:7218   */\n      pop\n        /* \"#utility.yul\":6298:7225   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7231:7542   */\n    tag_175:\n        /* \"#utility.yul\":7308:7312   */\n      0x00\n        /* \"#utility.yul\":7398:7416   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7390:7396   */\n      dup3\n        /* \"#utility.yul\":7387:7417   */\n      gt\n        /* \"#utility.yul\":7384:7440   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":7420:7438   */\n      tag_308\n      tag_164\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7384:7440   */\n    tag_307:\n        /* \"#utility.yul\":7470:7474   */\n      0x20\n        /* \"#utility.yul\":7462:7468   */\n      dup3\n        /* \"#utility.yul\":7458:7475   */\n      mul\n        /* \"#utility.yul\":7450:7475   */\n      swap1\n      pop\n        /* \"#utility.yul\":7530:7534   */\n      0x20\n        /* \"#utility.yul\":7524:7528   */\n      dup2\n        /* \"#utility.yul\":7520:7535   */\n      add\n        /* \"#utility.yul\":7512:7535   */\n      swap1\n      pop\n        /* \"#utility.yul\":7231:7542   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7548:7665   */\n    tag_176:\n        /* \"#utility.yul\":7657:7658   */\n      0x00\n        /* \"#utility.yul\":7654:7655   */\n      dup1\n        /* \"#utility.yul\":7647:7659   */\n      revert\n        /* \"#utility.yul\":7688:8398   */\n    tag_177:\n        /* \"#utility.yul\":7784:7789   */\n      0x00\n        /* \"#utility.yul\":7809:7890   */\n      tag_311\n        /* \"#utility.yul\":7825:7889   */\n      tag_312\n        /* \"#utility.yul\":7882:7888   */\n      dup5\n        /* \"#utility.yul\":7825:7889   */\n      tag_175\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":7809:7890   */\n      tag_166\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":7800:7890   */\n      swap1\n      pop\n        /* \"#utility.yul\":7910:7915   */\n      dup1\n        /* \"#utility.yul\":7939:7945   */\n      dup4\n        /* \"#utility.yul\":7932:7937   */\n      dup3\n        /* \"#utility.yul\":7925:7946   */\n      mstore\n        /* \"#utility.yul\":7973:7977   */\n      0x20\n        /* \"#utility.yul\":7966:7971   */\n      dup3\n        /* \"#utility.yul\":7962:7978   */\n      add\n        /* \"#utility.yul\":7955:7978   */\n      swap1\n      pop\n        /* \"#utility.yul\":8026:8030   */\n      0x20\n        /* \"#utility.yul\":8018:8024   */\n      dup5\n        /* \"#utility.yul\":8014:8031   */\n      mul\n        /* \"#utility.yul\":8006:8012   */\n      dup4\n        /* \"#utility.yul\":8002:8032   */\n      add\n        /* \"#utility.yul\":8055:8058   */\n      dup6\n        /* \"#utility.yul\":8047:8053   */\n      dup2\n        /* \"#utility.yul\":8044:8059   */\n      gt\n        /* \"#utility.yul\":8041:8163   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":8074:8153   */\n      tag_314\n      tag_176\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":8041:8163   */\n    tag_313:\n        /* \"#utility.yul\":8189:8195   */\n      dup4\n        /* \"#utility.yul\":8172:8392   */\n    tag_315:\n        /* \"#utility.yul\":8206:8212   */\n      dup2\n        /* \"#utility.yul\":8201:8204   */\n      dup2\n        /* \"#utility.yul\":8198:8213   */\n      lt\n        /* \"#utility.yul\":8172:8392   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":8281:8284   */\n      dup1\n        /* \"#utility.yul\":8310:8347   */\n      tag_318\n        /* \"#utility.yul\":8343:8346   */\n      dup9\n        /* \"#utility.yul\":8331:8341   */\n      dup3\n        /* \"#utility.yul\":8310:8347   */\n      tag_157\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":8305:8308   */\n      dup5\n        /* \"#utility.yul\":8298:8348   */\n      mstore\n        /* \"#utility.yul\":8377:8381   */\n      0x20\n        /* \"#utility.yul\":8372:8375   */\n      dup5\n        /* \"#utility.yul\":8368:8382   */\n      add\n        /* \"#utility.yul\":8361:8382   */\n      swap4\n      pop\n        /* \"#utility.yul\":8248:8392   */\n      pop\n        /* \"#utility.yul\":8232:8236   */\n      0x20\n        /* \"#utility.yul\":8227:8230   */\n      dup2\n        /* \"#utility.yul\":8223:8237   */\n      add\n        /* \"#utility.yul\":8216:8237   */\n      swap1\n      pop\n        /* \"#utility.yul\":8172:8392   */\n      jump(tag_315)\n    tag_317:\n        /* \"#utility.yul\":8176:8197   */\n      pop\n        /* \"#utility.yul\":7790:8398   */\n      pop\n      pop\n        /* \"#utility.yul\":7688:8398   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8421:8791   */\n    tag_178:\n        /* \"#utility.yul\":8492:8497   */\n      0x00\n        /* \"#utility.yul\":8541:8544   */\n      dup3\n        /* \"#utility.yul\":8534:8538   */\n      0x1f\n        /* \"#utility.yul\":8526:8532   */\n      dup4\n        /* \"#utility.yul\":8522:8539   */\n      add\n        /* \"#utility.yul\":8518:8545   */\n      slt\n        /* \"#utility.yul\":8508:8630   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":8549:8628   */\n      tag_321\n      tag_161\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":8508:8630   */\n    tag_320:\n        /* \"#utility.yul\":8666:8672   */\n      dup2\n        /* \"#utility.yul\":8653:8673   */\n      calldataload\n        /* \"#utility.yul\":8691:8785   */\n      tag_322\n        /* \"#utility.yul\":8781:8784   */\n      dup5\n        /* \"#utility.yul\":8773:8779   */\n      dup3\n        /* \"#utility.yul\":8766:8770   */\n      0x20\n        /* \"#utility.yul\":8758:8764   */\n      dup7\n        /* \"#utility.yul\":8754:8771   */\n      add\n        /* \"#utility.yul\":8691:8785   */\n      tag_177\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":8682:8785   */\n      swap2\n      pop\n        /* \"#utility.yul\":8498:8791   */\n      pop\n        /* \"#utility.yul\":8421:8791   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8797:9108   */\n    tag_179:\n        /* \"#utility.yul\":8874:8878   */\n      0x00\n        /* \"#utility.yul\":8964:8982   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8956:8962   */\n      dup3\n        /* \"#utility.yul\":8953:8983   */\n      gt\n        /* \"#utility.yul\":8950:9006   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":8986:9004   */\n      tag_325\n      tag_164\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":8950:9006   */\n    tag_324:\n        /* \"#utility.yul\":9036:9040   */\n      0x20\n        /* \"#utility.yul\":9028:9034   */\n      dup3\n        /* \"#utility.yul\":9024:9041   */\n      mul\n        /* \"#utility.yul\":9016:9041   */\n      swap1\n      pop\n        /* \"#utility.yul\":9096:9100   */\n      0x20\n        /* \"#utility.yul\":9090:9094   */\n      dup2\n        /* \"#utility.yul\":9086:9101   */\n      add\n        /* \"#utility.yul\":9078:9101   */\n      swap1\n      pop\n        /* \"#utility.yul\":8797:9108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9131:9841   */\n    tag_180:\n        /* \"#utility.yul\":9227:9232   */\n      0x00\n        /* \"#utility.yul\":9252:9333   */\n      tag_327\n        /* \"#utility.yul\":9268:9332   */\n      tag_328\n        /* \"#utility.yul\":9325:9331   */\n      dup5\n        /* \"#utility.yul\":9268:9332   */\n      tag_179\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":9252:9333   */\n      tag_166\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":9243:9333   */\n      swap1\n      pop\n        /* \"#utility.yul\":9353:9358   */\n      dup1\n        /* \"#utility.yul\":9382:9388   */\n      dup4\n        /* \"#utility.yul\":9375:9380   */\n      dup3\n        /* \"#utility.yul\":9368:9389   */\n      mstore\n        /* \"#utility.yul\":9416:9420   */\n      0x20\n        /* \"#utility.yul\":9409:9414   */\n      dup3\n        /* \"#utility.yul\":9405:9421   */\n      add\n        /* \"#utility.yul\":9398:9421   */\n      swap1\n      pop\n        /* \"#utility.yul\":9469:9473   */\n      0x20\n        /* \"#utility.yul\":9461:9467   */\n      dup5\n        /* \"#utility.yul\":9457:9474   */\n      mul\n        /* \"#utility.yul\":9449:9455   */\n      dup4\n        /* \"#utility.yul\":9445:9475   */\n      add\n        /* \"#utility.yul\":9498:9501   */\n      dup6\n        /* \"#utility.yul\":9490:9496   */\n      dup2\n        /* \"#utility.yul\":9487:9502   */\n      gt\n        /* \"#utility.yul\":9484:9606   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":9517:9596   */\n      tag_330\n      tag_176\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":9484:9606   */\n    tag_329:\n        /* \"#utility.yul\":9632:9638   */\n      dup4\n        /* \"#utility.yul\":9615:9835   */\n    tag_331:\n        /* \"#utility.yul\":9649:9655   */\n      dup2\n        /* \"#utility.yul\":9644:9647   */\n      dup2\n        /* \"#utility.yul\":9641:9656   */\n      lt\n        /* \"#utility.yul\":9615:9835   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":9724:9727   */\n      dup1\n        /* \"#utility.yul\":9753:9790   */\n      tag_334\n        /* \"#utility.yul\":9786:9789   */\n      dup9\n        /* \"#utility.yul\":9774:9784   */\n      dup3\n        /* \"#utility.yul\":9753:9790   */\n      tag_160\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":9748:9751   */\n      dup5\n        /* \"#utility.yul\":9741:9791   */\n      mstore\n        /* \"#utility.yul\":9820:9824   */\n      0x20\n        /* \"#utility.yul\":9815:9818   */\n      dup5\n        /* \"#utility.yul\":9811:9825   */\n      add\n        /* \"#utility.yul\":9804:9825   */\n      swap4\n      pop\n        /* \"#utility.yul\":9691:9835   */\n      pop\n        /* \"#utility.yul\":9675:9679   */\n      0x20\n        /* \"#utility.yul\":9670:9673   */\n      dup2\n        /* \"#utility.yul\":9666:9680   */\n      add\n        /* \"#utility.yul\":9659:9680   */\n      swap1\n      pop\n        /* \"#utility.yul\":9615:9835   */\n      jump(tag_331)\n    tag_333:\n        /* \"#utility.yul\":9619:9640   */\n      pop\n        /* \"#utility.yul\":9233:9841   */\n      pop\n      pop\n        /* \"#utility.yul\":9131:9841   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9864:10234   */\n    tag_181:\n        /* \"#utility.yul\":9935:9940   */\n      0x00\n        /* \"#utility.yul\":9984:9987   */\n      dup3\n        /* \"#utility.yul\":9977:9981   */\n      0x1f\n        /* \"#utility.yul\":9969:9975   */\n      dup4\n        /* \"#utility.yul\":9965:9982   */\n      add\n        /* \"#utility.yul\":9961:9988   */\n      slt\n        /* \"#utility.yul\":9951:10073   */\n      tag_336\n      jumpi\n        /* \"#utility.yul\":9992:10071   */\n      tag_337\n      tag_161\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":9951:10073   */\n    tag_336:\n        /* \"#utility.yul\":10109:10115   */\n      dup2\n        /* \"#utility.yul\":10096:10116   */\n      calldataload\n        /* \"#utility.yul\":10134:10228   */\n      tag_338\n        /* \"#utility.yul\":10224:10227   */\n      dup5\n        /* \"#utility.yul\":10216:10222   */\n      dup3\n        /* \"#utility.yul\":10209:10213   */\n      0x20\n        /* \"#utility.yul\":10201:10207   */\n      dup7\n        /* \"#utility.yul\":10197:10214   */\n      add\n        /* \"#utility.yul\":10134:10228   */\n      tag_180\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":10125:10228   */\n      swap2\n      pop\n        /* \"#utility.yul\":9941:10234   */\n      pop\n        /* \"#utility.yul\":9864:10234   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10240:10549   */\n    tag_182:\n        /* \"#utility.yul\":10315:10319   */\n      0x00\n        /* \"#utility.yul\":10405:10423   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10397:10403   */\n      dup3\n        /* \"#utility.yul\":10394:10424   */\n      gt\n        /* \"#utility.yul\":10391:10447   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":10427:10445   */\n      tag_341\n      tag_164\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":10391:10447   */\n    tag_340:\n        /* \"#utility.yul\":10477:10481   */\n      0x20\n        /* \"#utility.yul\":10469:10475   */\n      dup3\n        /* \"#utility.yul\":10465:10482   */\n      mul\n        /* \"#utility.yul\":10457:10482   */\n      swap1\n      pop\n        /* \"#utility.yul\":10537:10541   */\n      0x20\n        /* \"#utility.yul\":10531:10535   */\n      dup2\n        /* \"#utility.yul\":10527:10542   */\n      add\n        /* \"#utility.yul\":10519:10542   */\n      swap1\n      pop\n        /* \"#utility.yul\":10240:10549   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10555:10641   */\n    tag_183:\n        /* \"#utility.yul\":10590:10597   */\n      0x00\n        /* \"#utility.yul\":10630:10634   */\n      0xff\n        /* \"#utility.yul\":10623:10628   */\n      dup3\n        /* \"#utility.yul\":10619:10635   */\n      and\n        /* \"#utility.yul\":10608:10635   */\n      swap1\n      pop\n        /* \"#utility.yul\":10555:10641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10647:10765   */\n    tag_184:\n        /* \"#utility.yul\":10718:10740   */\n      tag_344\n        /* \"#utility.yul\":10734:10739   */\n      dup2\n        /* \"#utility.yul\":10718:10740   */\n      tag_183\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":10711:10716   */\n      dup2\n        /* \"#utility.yul\":10708:10741   */\n      eq\n        /* \"#utility.yul\":10698:10759   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":10755:10756   */\n      0x00\n        /* \"#utility.yul\":10752:10753   */\n      dup1\n        /* \"#utility.yul\":10745:10757   */\n      revert\n        /* \"#utility.yul\":10698:10759   */\n    tag_345:\n        /* \"#utility.yul\":10647:10765   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10771:10906   */\n    tag_185:\n        /* \"#utility.yul\":10815:10820   */\n      0x00\n        /* \"#utility.yul\":10853:10859   */\n      dup2\n        /* \"#utility.yul\":10840:10860   */\n      calldataload\n        /* \"#utility.yul\":10831:10860   */\n      swap1\n      pop\n        /* \"#utility.yul\":10869:10900   */\n      tag_347\n        /* \"#utility.yul\":10894:10899   */\n      dup2\n        /* \"#utility.yul\":10869:10900   */\n      tag_184\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":10771:10906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10927:11631   */\n    tag_186:\n        /* \"#utility.yul\":11021:11026   */\n      0x00\n        /* \"#utility.yul\":11046:11125   */\n      tag_349\n        /* \"#utility.yul\":11062:11124   */\n      tag_350\n        /* \"#utility.yul\":11117:11123   */\n      dup5\n        /* \"#utility.yul\":11062:11124   */\n      tag_182\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":11046:11125   */\n      tag_166\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":11037:11125   */\n      swap1\n      pop\n        /* \"#utility.yul\":11145:11150   */\n      dup1\n        /* \"#utility.yul\":11174:11180   */\n      dup4\n        /* \"#utility.yul\":11167:11172   */\n      dup3\n        /* \"#utility.yul\":11160:11181   */\n      mstore\n        /* \"#utility.yul\":11208:11212   */\n      0x20\n        /* \"#utility.yul\":11201:11206   */\n      dup3\n        /* \"#utility.yul\":11197:11213   */\n      add\n        /* \"#utility.yul\":11190:11213   */\n      swap1\n      pop\n        /* \"#utility.yul\":11261:11265   */\n      0x20\n        /* \"#utility.yul\":11253:11259   */\n      dup5\n        /* \"#utility.yul\":11249:11266   */\n      mul\n        /* \"#utility.yul\":11241:11247   */\n      dup4\n        /* \"#utility.yul\":11237:11267   */\n      add\n        /* \"#utility.yul\":11290:11293   */\n      dup6\n        /* \"#utility.yul\":11282:11288   */\n      dup2\n        /* \"#utility.yul\":11279:11294   */\n      gt\n        /* \"#utility.yul\":11276:11398   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":11309:11388   */\n      tag_352\n      tag_176\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":11276:11398   */\n    tag_351:\n        /* \"#utility.yul\":11424:11430   */\n      dup4\n        /* \"#utility.yul\":11407:11625   */\n    tag_353:\n        /* \"#utility.yul\":11441:11447   */\n      dup2\n        /* \"#utility.yul\":11436:11439   */\n      dup2\n        /* \"#utility.yul\":11433:11448   */\n      lt\n        /* \"#utility.yul\":11407:11625   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":11516:11519   */\n      dup1\n        /* \"#utility.yul\":11545:11580   */\n      tag_356\n        /* \"#utility.yul\":11576:11579   */\n      dup9\n        /* \"#utility.yul\":11564:11574   */\n      dup3\n        /* \"#utility.yul\":11545:11580   */\n      tag_185\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":11540:11543   */\n      dup5\n        /* \"#utility.yul\":11533:11581   */\n      mstore\n        /* \"#utility.yul\":11610:11614   */\n      0x20\n        /* \"#utility.yul\":11605:11608   */\n      dup5\n        /* \"#utility.yul\":11601:11615   */\n      add\n        /* \"#utility.yul\":11594:11615   */\n      swap4\n      pop\n        /* \"#utility.yul\":11483:11625   */\n      pop\n        /* \"#utility.yul\":11467:11471   */\n      0x20\n        /* \"#utility.yul\":11462:11465   */\n      dup2\n        /* \"#utility.yul\":11458:11472   */\n      add\n        /* \"#utility.yul\":11451:11472   */\n      swap1\n      pop\n        /* \"#utility.yul\":11407:11625   */\n      jump(tag_353)\n    tag_355:\n        /* \"#utility.yul\":11411:11432   */\n      pop\n        /* \"#utility.yul\":11027:11631   */\n      pop\n      pop\n        /* \"#utility.yul\":10927:11631   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11652:12018   */\n    tag_187:\n        /* \"#utility.yul\":11721:11726   */\n      0x00\n        /* \"#utility.yul\":11770:11773   */\n      dup3\n        /* \"#utility.yul\":11763:11767   */\n      0x1f\n        /* \"#utility.yul\":11755:11761   */\n      dup4\n        /* \"#utility.yul\":11751:11768   */\n      add\n        /* \"#utility.yul\":11747:11774   */\n      slt\n        /* \"#utility.yul\":11737:11859   */\n      tag_358\n      jumpi\n        /* \"#utility.yul\":11778:11857   */\n      tag_359\n      tag_161\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":11737:11859   */\n    tag_358:\n        /* \"#utility.yul\":11895:11901   */\n      dup2\n        /* \"#utility.yul\":11882:11902   */\n      calldataload\n        /* \"#utility.yul\":11920:12012   */\n      tag_360\n        /* \"#utility.yul\":12008:12011   */\n      dup5\n        /* \"#utility.yul\":12000:12006   */\n      dup3\n        /* \"#utility.yul\":11993:11997   */\n      0x20\n        /* \"#utility.yul\":11985:11991   */\n      dup7\n        /* \"#utility.yul\":11981:11998   */\n      add\n        /* \"#utility.yul\":11920:12012   */\n      tag_186\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":11911:12012   */\n      swap2\n      pop\n        /* \"#utility.yul\":11727:12018   */\n      pop\n        /* \"#utility.yul\":11652:12018   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12024:13561   */\n    tag_31:\n        /* \"#utility.yul\":12192:12198   */\n      0x00\n        /* \"#utility.yul\":12200:12206   */\n      dup1\n        /* \"#utility.yul\":12208:12214   */\n      0x00\n        /* \"#utility.yul\":12216:12222   */\n      dup1\n        /* \"#utility.yul\":12224:12230   */\n      0x00\n        /* \"#utility.yul\":12273:12276   */\n      0xa0\n        /* \"#utility.yul\":12261:12270   */\n      dup7\n        /* \"#utility.yul\":12252:12259   */\n      dup9\n        /* \"#utility.yul\":12248:12271   */\n      sub\n        /* \"#utility.yul\":12244:12277   */\n      slt\n        /* \"#utility.yul\":12241:12361   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":12280:12359   */\n      tag_363\n      tag_147\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":12241:12361   */\n    tag_362:\n        /* \"#utility.yul\":12400:12401   */\n      0x00\n        /* \"#utility.yul\":12425:12478   */\n      tag_364\n        /* \"#utility.yul\":12470:12477   */\n      dup9\n        /* \"#utility.yul\":12461:12467   */\n      dup3\n        /* \"#utility.yul\":12450:12459   */\n      dup10\n        /* \"#utility.yul\":12446:12468   */\n      add\n        /* \"#utility.yul\":12425:12478   */\n      tag_157\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":12415:12478   */\n      swap6\n      pop\n        /* \"#utility.yul\":12371:12488   */\n      pop\n        /* \"#utility.yul\":12527:12529   */\n      0x20\n        /* \"#utility.yul\":12553:12606   */\n      tag_365\n        /* \"#utility.yul\":12598:12605   */\n      dup9\n        /* \"#utility.yul\":12589:12595   */\n      dup3\n        /* \"#utility.yul\":12578:12587   */\n      dup10\n        /* \"#utility.yul\":12574:12596   */\n      add\n        /* \"#utility.yul\":12553:12606   */\n      tag_157\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":12543:12606   */\n      swap5\n      pop\n        /* \"#utility.yul\":12498:12616   */\n      pop\n        /* \"#utility.yul\":12683:12685   */\n      0x40\n        /* \"#utility.yul\":12672:12681   */\n      dup7\n        /* \"#utility.yul\":12668:12686   */\n      add\n        /* \"#utility.yul\":12655:12687   */\n      calldataload\n        /* \"#utility.yul\":12714:12732   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12706:12712   */\n      dup2\n        /* \"#utility.yul\":12703:12733   */\n      gt\n        /* \"#utility.yul\":12700:12817   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":12736:12815   */\n      tag_367\n      tag_148\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":12700:12817   */\n    tag_366:\n        /* \"#utility.yul\":12841:12919   */\n      tag_368\n        /* \"#utility.yul\":12911:12918   */\n      dup9\n        /* \"#utility.yul\":12902:12908   */\n      dup3\n        /* \"#utility.yul\":12891:12900   */\n      dup10\n        /* \"#utility.yul\":12887:12909   */\n      add\n        /* \"#utility.yul\":12841:12919   */\n      tag_178\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":12831:12919   */\n      swap4\n      pop\n        /* \"#utility.yul\":12626:12929   */\n      pop\n        /* \"#utility.yul\":12996:12998   */\n      0x60\n        /* \"#utility.yul\":12985:12994   */\n      dup7\n        /* \"#utility.yul\":12981:12999   */\n      add\n        /* \"#utility.yul\":12968:13000   */\n      calldataload\n        /* \"#utility.yul\":13027:13045   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13019:13025   */\n      dup2\n        /* \"#utility.yul\":13016:13046   */\n      gt\n        /* \"#utility.yul\":13013:13130   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":13049:13128   */\n      tag_370\n      tag_148\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":13013:13130   */\n    tag_369:\n        /* \"#utility.yul\":13154:13232   */\n      tag_371\n        /* \"#utility.yul\":13224:13231   */\n      dup9\n        /* \"#utility.yul\":13215:13221   */\n      dup3\n        /* \"#utility.yul\":13204:13213   */\n      dup10\n        /* \"#utility.yul\":13200:13222   */\n      add\n        /* \"#utility.yul\":13154:13232   */\n      tag_181\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":13144:13232   */\n      swap3\n      pop\n        /* \"#utility.yul\":12939:13242   */\n      pop\n        /* \"#utility.yul\":13309:13312   */\n      0x80\n        /* \"#utility.yul\":13298:13307   */\n      dup7\n        /* \"#utility.yul\":13294:13313   */\n      add\n        /* \"#utility.yul\":13281:13314   */\n      calldataload\n        /* \"#utility.yul\":13341:13359   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13333:13339   */\n      dup2\n        /* \"#utility.yul\":13330:13360   */\n      gt\n        /* \"#utility.yul\":13327:13444   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":13363:13442   */\n      tag_373\n      tag_148\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":13327:13444   */\n    tag_372:\n        /* \"#utility.yul\":13468:13544   */\n      tag_374\n        /* \"#utility.yul\":13536:13543   */\n      dup9\n        /* \"#utility.yul\":13527:13533   */\n      dup3\n        /* \"#utility.yul\":13516:13525   */\n      dup10\n        /* \"#utility.yul\":13512:13534   */\n      add\n        /* \"#utility.yul\":13468:13544   */\n      tag_187\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":13458:13544   */\n      swap2\n      pop\n        /* \"#utility.yul\":13252:13554   */\n      pop\n        /* \"#utility.yul\":12024:13561   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13567:13685   */\n    tag_188:\n        /* \"#utility.yul\":13654:13678   */\n      tag_376\n        /* \"#utility.yul\":13672:13677   */\n      dup2\n        /* \"#utility.yul\":13654:13678   */\n      tag_155\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":13649:13652   */\n      dup3\n        /* \"#utility.yul\":13642:13679   */\n      mstore\n        /* \"#utility.yul\":13567:13685   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13691:13913   */\n    tag_38:\n        /* \"#utility.yul\":13784:13788   */\n      0x00\n        /* \"#utility.yul\":13822:13824   */\n      0x20\n        /* \"#utility.yul\":13811:13820   */\n      dup3\n        /* \"#utility.yul\":13807:13825   */\n      add\n        /* \"#utility.yul\":13799:13825   */\n      swap1\n      pop\n        /* \"#utility.yul\":13835:13906   */\n      tag_378\n        /* \"#utility.yul\":13903:13904   */\n      0x00\n        /* \"#utility.yul\":13892:13901   */\n      dup4\n        /* \"#utility.yul\":13888:13905   */\n      add\n        /* \"#utility.yul\":13879:13885   */\n      dup5\n        /* \"#utility.yul\":13835:13906   */\n      tag_188\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":13691:13913   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13919:15428   */\n    tag_41:\n        /* \"#utility.yul\":14073:14079   */\n      0x00\n        /* \"#utility.yul\":14081:14087   */\n      dup1\n        /* \"#utility.yul\":14089:14095   */\n      0x00\n        /* \"#utility.yul\":14097:14103   */\n      dup1\n        /* \"#utility.yul\":14105:14111   */\n      0x00\n        /* \"#utility.yul\":14154:14157   */\n      0xa0\n        /* \"#utility.yul\":14142:14151   */\n      dup7\n        /* \"#utility.yul\":14133:14140   */\n      dup9\n        /* \"#utility.yul\":14129:14152   */\n      sub\n        /* \"#utility.yul\":14125:14158   */\n      slt\n        /* \"#utility.yul\":14122:14242   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":14161:14240   */\n      tag_381\n      tag_147\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":14122:14242   */\n    tag_380:\n        /* \"#utility.yul\":14281:14282   */\n      0x00\n        /* \"#utility.yul\":14306:14359   */\n      tag_382\n        /* \"#utility.yul\":14351:14358   */\n      dup9\n        /* \"#utility.yul\":14342:14348   */\n      dup3\n        /* \"#utility.yul\":14331:14340   */\n      dup10\n        /* \"#utility.yul\":14327:14349   */\n      add\n        /* \"#utility.yul\":14306:14359   */\n      tag_157\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":14296:14359   */\n      swap6\n      pop\n        /* \"#utility.yul\":14252:14369   */\n      pop\n        /* \"#utility.yul\":14408:14410   */\n      0x20\n        /* \"#utility.yul\":14434:14487   */\n      tag_383\n        /* \"#utility.yul\":14479:14486   */\n      dup9\n        /* \"#utility.yul\":14470:14476   */\n      dup3\n        /* \"#utility.yul\":14459:14468   */\n      dup10\n        /* \"#utility.yul\":14455:14477   */\n      add\n        /* \"#utility.yul\":14434:14487   */\n      tag_157\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":14424:14487   */\n      swap5\n      pop\n        /* \"#utility.yul\":14379:14497   */\n      pop\n        /* \"#utility.yul\":14564:14566   */\n      0x40\n        /* \"#utility.yul\":14553:14562   */\n      dup7\n        /* \"#utility.yul\":14549:14567   */\n      add\n        /* \"#utility.yul\":14536:14568   */\n      calldataload\n        /* \"#utility.yul\":14595:14613   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14587:14593   */\n      dup2\n        /* \"#utility.yul\":14584:14614   */\n      gt\n        /* \"#utility.yul\":14581:14698   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":14617:14696   */\n      tag_385\n      tag_148\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":14581:14698   */\n    tag_384:\n        /* \"#utility.yul\":14722:14800   */\n      tag_386\n        /* \"#utility.yul\":14792:14799   */\n      dup9\n        /* \"#utility.yul\":14783:14789   */\n      dup3\n        /* \"#utility.yul\":14772:14781   */\n      dup10\n        /* \"#utility.yul\":14768:14790   */\n      add\n        /* \"#utility.yul\":14722:14800   */\n      tag_181\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":14712:14800   */\n      swap4\n      pop\n        /* \"#utility.yul\":14507:14810   */\n      pop\n        /* \"#utility.yul\":14877:14879   */\n      0x60\n        /* \"#utility.yul\":14866:14875   */\n      dup7\n        /* \"#utility.yul\":14862:14880   */\n      add\n        /* \"#utility.yul\":14849:14881   */\n      calldataload\n        /* \"#utility.yul\":14908:14926   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14900:14906   */\n      dup2\n        /* \"#utility.yul\":14897:14927   */\n      gt\n        /* \"#utility.yul\":14894:15011   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":14930:15009   */\n      tag_388\n      tag_148\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":14894:15011   */\n    tag_387:\n        /* \"#utility.yul\":15035:15113   */\n      tag_389\n        /* \"#utility.yul\":15105:15112   */\n      dup9\n        /* \"#utility.yul\":15096:15102   */\n      dup3\n        /* \"#utility.yul\":15085:15094   */\n      dup10\n        /* \"#utility.yul\":15081:15103   */\n      add\n        /* \"#utility.yul\":15035:15113   */\n      tag_181\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":15025:15113   */\n      swap3\n      pop\n        /* \"#utility.yul\":14820:15123   */\n      pop\n        /* \"#utility.yul\":15190:15193   */\n      0x80\n        /* \"#utility.yul\":15179:15188   */\n      dup7\n        /* \"#utility.yul\":15175:15194   */\n      add\n        /* \"#utility.yul\":15162:15195   */\n      calldataload\n        /* \"#utility.yul\":15222:15240   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15214:15220   */\n      dup2\n        /* \"#utility.yul\":15211:15241   */\n      gt\n        /* \"#utility.yul\":15208:15325   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":15244:15323   */\n      tag_391\n      tag_148\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":15208:15325   */\n    tag_390:\n        /* \"#utility.yul\":15349:15411   */\n      tag_392\n        /* \"#utility.yul\":15403:15410   */\n      dup9\n        /* \"#utility.yul\":15394:15400   */\n      dup3\n        /* \"#utility.yul\":15383:15392   */\n      dup10\n        /* \"#utility.yul\":15379:15401   */\n      add\n        /* \"#utility.yul\":15349:15411   */\n      tag_170\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":15339:15411   */\n      swap2\n      pop\n        /* \"#utility.yul\":15133:15421   */\n      pop\n        /* \"#utility.yul\":13919:15428   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15434:16523   */\n    tag_46:\n        /* \"#utility.yul\":15538:15544   */\n      0x00\n        /* \"#utility.yul\":15546:15552   */\n      dup1\n        /* \"#utility.yul\":15554:15560   */\n      0x00\n        /* \"#utility.yul\":15562:15568   */\n      dup1\n        /* \"#utility.yul\":15570:15576   */\n      0x00\n        /* \"#utility.yul\":15619:15622   */\n      0xa0\n        /* \"#utility.yul\":15607:15616   */\n      dup7\n        /* \"#utility.yul\":15598:15605   */\n      dup9\n        /* \"#utility.yul\":15594:15617   */\n      sub\n        /* \"#utility.yul\":15590:15623   */\n      slt\n        /* \"#utility.yul\":15587:15707   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":15626:15705   */\n      tag_395\n      tag_147\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":15587:15707   */\n    tag_394:\n        /* \"#utility.yul\":15746:15747   */\n      0x00\n        /* \"#utility.yul\":15771:15824   */\n      tag_396\n        /* \"#utility.yul\":15816:15823   */\n      dup9\n        /* \"#utility.yul\":15807:15813   */\n      dup3\n        /* \"#utility.yul\":15796:15805   */\n      dup10\n        /* \"#utility.yul\":15792:15814   */\n      add\n        /* \"#utility.yul\":15771:15824   */\n      tag_157\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":15761:15824   */\n      swap6\n      pop\n        /* \"#utility.yul\":15717:15834   */\n      pop\n        /* \"#utility.yul\":15873:15875   */\n      0x20\n        /* \"#utility.yul\":15899:15952   */\n      tag_397\n        /* \"#utility.yul\":15944:15951   */\n      dup9\n        /* \"#utility.yul\":15935:15941   */\n      dup3\n        /* \"#utility.yul\":15924:15933   */\n      dup10\n        /* \"#utility.yul\":15920:15942   */\n      add\n        /* \"#utility.yul\":15899:15952   */\n      tag_157\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":15889:15952   */\n      swap5\n      pop\n        /* \"#utility.yul\":15844:15962   */\n      pop\n        /* \"#utility.yul\":16001:16003   */\n      0x40\n        /* \"#utility.yul\":16027:16080   */\n      tag_398\n        /* \"#utility.yul\":16072:16079   */\n      dup9\n        /* \"#utility.yul\":16063:16069   */\n      dup3\n        /* \"#utility.yul\":16052:16061   */\n      dup10\n        /* \"#utility.yul\":16048:16070   */\n      add\n        /* \"#utility.yul\":16027:16080   */\n      tag_160\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":16017:16080   */\n      swap4\n      pop\n        /* \"#utility.yul\":15972:16090   */\n      pop\n        /* \"#utility.yul\":16129:16131   */\n      0x60\n        /* \"#utility.yul\":16155:16208   */\n      tag_399\n        /* \"#utility.yul\":16200:16207   */\n      dup9\n        /* \"#utility.yul\":16191:16197   */\n      dup3\n        /* \"#utility.yul\":16180:16189   */\n      dup10\n        /* \"#utility.yul\":16176:16198   */\n      add\n        /* \"#utility.yul\":16155:16208   */\n      tag_160\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":16145:16208   */\n      swap3\n      pop\n        /* \"#utility.yul\":16100:16218   */\n      pop\n        /* \"#utility.yul\":16285:16288   */\n      0x80\n        /* \"#utility.yul\":16274:16283   */\n      dup7\n        /* \"#utility.yul\":16270:16289   */\n      add\n        /* \"#utility.yul\":16257:16290   */\n      calldataload\n        /* \"#utility.yul\":16317:16335   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16309:16315   */\n      dup2\n        /* \"#utility.yul\":16306:16336   */\n      gt\n        /* \"#utility.yul\":16303:16420   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":16339:16418   */\n      tag_401\n      tag_148\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":16303:16420   */\n    tag_400:\n        /* \"#utility.yul\":16444:16506   */\n      tag_402\n        /* \"#utility.yul\":16498:16505   */\n      dup9\n        /* \"#utility.yul\":16489:16495   */\n      dup3\n        /* \"#utility.yul\":16478:16487   */\n      dup10\n        /* \"#utility.yul\":16474:16496   */\n      add\n        /* \"#utility.yul\":16444:16506   */\n      tag_170\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":16434:16506   */\n      swap2\n      pop\n        /* \"#utility.yul\":16228:16516   */\n      pop\n        /* \"#utility.yul\":15434:16523   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16529:16858   */\n    tag_51:\n        /* \"#utility.yul\":16588:16594   */\n      0x00\n        /* \"#utility.yul\":16637:16639   */\n      0x20\n        /* \"#utility.yul\":16625:16634   */\n      dup3\n        /* \"#utility.yul\":16616:16623   */\n      dup5\n        /* \"#utility.yul\":16612:16635   */\n      sub\n        /* \"#utility.yul\":16608:16640   */\n      slt\n        /* \"#utility.yul\":16605:16724   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":16643:16722   */\n      tag_405\n      tag_147\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":16605:16724   */\n    tag_404:\n        /* \"#utility.yul\":16763:16764   */\n      0x00\n        /* \"#utility.yul\":16788:16841   */\n      tag_406\n        /* \"#utility.yul\":16833:16840   */\n      dup5\n        /* \"#utility.yul\":16824:16830   */\n      dup3\n        /* \"#utility.yul\":16813:16822   */\n      dup6\n        /* \"#utility.yul\":16809:16831   */\n      add\n        /* \"#utility.yul\":16788:16841   */\n      tag_157\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":16778:16841   */\n      swap2\n      pop\n        /* \"#utility.yul\":16734:16851   */\n      pop\n        /* \"#utility.yul\":16529:16858   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16864:16924   */\n    tag_189:\n        /* \"#utility.yul\":16892:16895   */\n      0x00\n        /* \"#utility.yul\":16913:16918   */\n      dup2\n        /* \"#utility.yul\":16906:16918   */\n      swap1\n      pop\n        /* \"#utility.yul\":16864:16924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16930:17072   */\n    tag_190:\n        /* \"#utility.yul\":16980:16989   */\n      0x00\n        /* \"#utility.yul\":17013:17066   */\n      tag_409\n        /* \"#utility.yul\":17031:17065   */\n      tag_410\n        /* \"#utility.yul\":17040:17064   */\n      tag_411\n        /* \"#utility.yul\":17058:17063   */\n      dup5\n        /* \"#utility.yul\":17040:17064   */\n      tag_154\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":17031:17065   */\n      tag_189\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":17013:17066   */\n      tag_154\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":17000:17066   */\n      swap1\n      pop\n        /* \"#utility.yul\":16930:17072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17078:17204   */\n    tag_191:\n        /* \"#utility.yul\":17128:17137   */\n      0x00\n        /* \"#utility.yul\":17161:17198   */\n      tag_413\n        /* \"#utility.yul\":17192:17197   */\n      dup3\n        /* \"#utility.yul\":17161:17198   */\n      tag_190\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":17148:17198   */\n      swap1\n      pop\n        /* \"#utility.yul\":17078:17204   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17210:17344   */\n    tag_192:\n        /* \"#utility.yul\":17268:17277   */\n      0x00\n        /* \"#utility.yul\":17301:17338   */\n      tag_415\n        /* \"#utility.yul\":17332:17337   */\n      dup3\n        /* \"#utility.yul\":17301:17338   */\n      tag_191\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":17288:17338   */\n      swap1\n      pop\n        /* \"#utility.yul\":17210:17344   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17350:17497   */\n    tag_193:\n        /* \"#utility.yul\":17445:17490   */\n      tag_417\n        /* \"#utility.yul\":17484:17489   */\n      dup2\n        /* \"#utility.yul\":17445:17490   */\n      tag_192\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":17440:17443   */\n      dup3\n        /* \"#utility.yul\":17433:17491   */\n      mstore\n        /* \"#utility.yul\":17350:17497   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17503:17621   */\n    tag_194:\n        /* \"#utility.yul\":17590:17614   */\n      tag_419\n        /* \"#utility.yul\":17608:17613   */\n      dup2\n        /* \"#utility.yul\":17590:17614   */\n      tag_158\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":17585:17588   */\n      dup3\n        /* \"#utility.yul\":17578:17615   */\n      mstore\n        /* \"#utility.yul\":17503:17621   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17627:18085   */\n    tag_61:\n        /* \"#utility.yul\":17784:17788   */\n      0x00\n        /* \"#utility.yul\":17822:17824   */\n      0x60\n        /* \"#utility.yul\":17811:17820   */\n      dup3\n        /* \"#utility.yul\":17807:17825   */\n      add\n        /* \"#utility.yul\":17799:17825   */\n      swap1\n      pop\n        /* \"#utility.yul\":17835:17906   */\n      tag_421\n        /* \"#utility.yul\":17903:17904   */\n      0x00\n        /* \"#utility.yul\":17892:17901   */\n      dup4\n        /* \"#utility.yul\":17888:17905   */\n      add\n        /* \"#utility.yul\":17879:17885   */\n      dup7\n        /* \"#utility.yul\":17835:17906   */\n      tag_188\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":17916:17996   */\n      tag_422\n        /* \"#utility.yul\":17992:17994   */\n      0x20\n        /* \"#utility.yul\":17981:17990   */\n      dup4\n        /* \"#utility.yul\":17977:17995   */\n      add\n        /* \"#utility.yul\":17968:17974   */\n      dup6\n        /* \"#utility.yul\":17916:17996   */\n      tag_193\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":18006:18078   */\n      tag_423\n        /* \"#utility.yul\":18074:18076   */\n      0x40\n        /* \"#utility.yul\":18063:18072   */\n      dup4\n        /* \"#utility.yul\":18059:18077   */\n      add\n        /* \"#utility.yul\":18050:18056   */\n      dup5\n        /* \"#utility.yul\":18006:18078   */\n      tag_194\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":17627:18085   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18091:18207   */\n    tag_195:\n        /* \"#utility.yul\":18161:18182   */\n      tag_425\n        /* \"#utility.yul\":18176:18181   */\n      dup2\n        /* \"#utility.yul\":18161:18182   */\n      tag_152\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":18154:18159   */\n      dup2\n        /* \"#utility.yul\":18151:18183   */\n      eq\n        /* \"#utility.yul\":18141:18201   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":18197:18198   */\n      0x00\n        /* \"#utility.yul\":18194:18195   */\n      dup1\n        /* \"#utility.yul\":18187:18199   */\n      revert\n        /* \"#utility.yul\":18141:18201   */\n    tag_426:\n        /* \"#utility.yul\":18091:18207   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18213:18350   */\n    tag_196:\n        /* \"#utility.yul\":18267:18272   */\n      0x00\n        /* \"#utility.yul\":18298:18304   */\n      dup2\n        /* \"#utility.yul\":18292:18305   */\n      mload\n        /* \"#utility.yul\":18283:18305   */\n      swap1\n      pop\n        /* \"#utility.yul\":18314:18344   */\n      tag_428\n        /* \"#utility.yul\":18338:18343   */\n      dup2\n        /* \"#utility.yul\":18314:18344   */\n      tag_195\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":18213:18350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18356:18701   */\n    tag_65:\n        /* \"#utility.yul\":18423:18429   */\n      0x00\n        /* \"#utility.yul\":18472:18474   */\n      0x20\n        /* \"#utility.yul\":18460:18469   */\n      dup3\n        /* \"#utility.yul\":18451:18458   */\n      dup5\n        /* \"#utility.yul\":18447:18470   */\n      sub\n        /* \"#utility.yul\":18443:18475   */\n      slt\n        /* \"#utility.yul\":18440:18559   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":18478:18557   */\n      tag_431\n      tag_147\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":18440:18559   */\n    tag_430:\n        /* \"#utility.yul\":18598:18599   */\n      0x00\n        /* \"#utility.yul\":18623:18684   */\n      tag_432\n        /* \"#utility.yul\":18676:18683   */\n      dup5\n        /* \"#utility.yul\":18667:18673   */\n      dup3\n        /* \"#utility.yul\":18656:18665   */\n      dup6\n        /* \"#utility.yul\":18652:18674   */\n      add\n        /* \"#utility.yul\":18623:18684   */\n      tag_196\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":18613:18684   */\n      swap2\n      pop\n        /* \"#utility.yul\":18569:18694   */\n      pop\n        /* \"#utility.yul\":18356:18701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18707:18876   */\n    tag_197:\n        /* \"#utility.yul\":18791:18802   */\n      0x00\n        /* \"#utility.yul\":18825:18831   */\n      dup3\n        /* \"#utility.yul\":18820:18823   */\n      dup3\n        /* \"#utility.yul\":18813:18832   */\n      mstore\n        /* \"#utility.yul\":18865:18869   */\n      0x20\n        /* \"#utility.yul\":18860:18863   */\n      dup3\n        /* \"#utility.yul\":18856:18870   */\n      add\n        /* \"#utility.yul\":18841:18870   */\n      swap1\n      pop\n        /* \"#utility.yul\":18707:18876   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18882:19106   */\n    tag_198:\n        /* \"#utility.yul\":19022:19056   */\n      0x5472616e73666572206f6620746f6b656e7320746f2072656365697665722066\n        /* \"#utility.yul\":19018:19019   */\n      0x00\n        /* \"#utility.yul\":19010:19016   */\n      dup3\n        /* \"#utility.yul\":19006:19020   */\n      add\n        /* \"#utility.yul\":18999:19057   */\n      mstore\n        /* \"#utility.yul\":19091:19098   */\n      0x61696c6564000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19086:19088   */\n      0x20\n        /* \"#utility.yul\":19078:19084   */\n      dup3\n        /* \"#utility.yul\":19074:19089   */\n      add\n        /* \"#utility.yul\":19067:19099   */\n      mstore\n        /* \"#utility.yul\":18882:19106   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19112:19478   */\n    tag_199:\n        /* \"#utility.yul\":19254:19257   */\n      0x00\n        /* \"#utility.yul\":19275:19342   */\n      tag_436\n        /* \"#utility.yul\":19339:19341   */\n      0x25\n        /* \"#utility.yul\":19334:19337   */\n      dup4\n        /* \"#utility.yul\":19275:19342   */\n      tag_197\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":19268:19342   */\n      swap2\n      pop\n        /* \"#utility.yul\":19351:19444   */\n      tag_437\n        /* \"#utility.yul\":19440:19443   */\n      dup3\n        /* \"#utility.yul\":19351:19444   */\n      tag_198\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":19469:19471   */\n      0x40\n        /* \"#utility.yul\":19464:19467   */\n      dup3\n        /* \"#utility.yul\":19460:19472   */\n      add\n        /* \"#utility.yul\":19453:19472   */\n      swap1\n      pop\n        /* \"#utility.yul\":19112:19478   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19484:19903   */\n    tag_68:\n        /* \"#utility.yul\":19650:19654   */\n      0x00\n        /* \"#utility.yul\":19688:19690   */\n      0x20\n        /* \"#utility.yul\":19677:19686   */\n      dup3\n        /* \"#utility.yul\":19673:19691   */\n      add\n        /* \"#utility.yul\":19665:19691   */\n      swap1\n      pop\n        /* \"#utility.yul\":19737:19746   */\n      dup2\n        /* \"#utility.yul\":19731:19735   */\n      dup2\n        /* \"#utility.yul\":19727:19747   */\n      sub\n        /* \"#utility.yul\":19723:19724   */\n      0x00\n        /* \"#utility.yul\":19712:19721   */\n      dup4\n        /* \"#utility.yul\":19708:19725   */\n      add\n        /* \"#utility.yul\":19701:19748   */\n      mstore\n        /* \"#utility.yul\":19765:19896   */\n      tag_439\n        /* \"#utility.yul\":19891:19895   */\n      dup2\n        /* \"#utility.yul\":19765:19896   */\n      tag_199\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":19757:19896   */\n      swap1\n      pop\n        /* \"#utility.yul\":19484:19903   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19909:20351   */\n    tag_71:\n        /* \"#utility.yul\":20058:20062   */\n      0x00\n        /* \"#utility.yul\":20096:20098   */\n      0x60\n        /* \"#utility.yul\":20085:20094   */\n      dup3\n        /* \"#utility.yul\":20081:20099   */\n      add\n        /* \"#utility.yul\":20073:20099   */\n      swap1\n      pop\n        /* \"#utility.yul\":20109:20180   */\n      tag_441\n        /* \"#utility.yul\":20177:20178   */\n      0x00\n        /* \"#utility.yul\":20166:20175   */\n      dup4\n        /* \"#utility.yul\":20162:20179   */\n      add\n        /* \"#utility.yul\":20153:20159   */\n      dup7\n        /* \"#utility.yul\":20109:20180   */\n      tag_188\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":20190:20262   */\n      tag_442\n        /* \"#utility.yul\":20258:20260   */\n      0x20\n        /* \"#utility.yul\":20247:20256   */\n      dup4\n        /* \"#utility.yul\":20243:20261   */\n      add\n        /* \"#utility.yul\":20234:20240   */\n      dup6\n        /* \"#utility.yul\":20190:20262   */\n      tag_188\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":20272:20344   */\n      tag_443\n        /* \"#utility.yul\":20340:20342   */\n      0x40\n        /* \"#utility.yul\":20329:20338   */\n      dup4\n        /* \"#utility.yul\":20325:20343   */\n      add\n        /* \"#utility.yul\":20316:20322   */\n      dup5\n        /* \"#utility.yul\":20272:20344   */\n      tag_194\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":19909:20351   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20357:20579   */\n    tag_200:\n        /* \"#utility.yul\":20497:20531   */\n      0x5472616e73666572206f6620746f6b656e7320746f2053746174657220666169\n        /* \"#utility.yul\":20493:20494   */\n      0x00\n        /* \"#utility.yul\":20485:20491   */\n      dup3\n        /* \"#utility.yul\":20481:20495   */\n      add\n        /* \"#utility.yul\":20474:20532   */\n      mstore\n        /* \"#utility.yul\":20566:20571   */\n      0x6c65640000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20561:20563   */\n      0x20\n        /* \"#utility.yul\":20553:20559   */\n      dup3\n        /* \"#utility.yul\":20549:20564   */\n      add\n        /* \"#utility.yul\":20542:20572   */\n      mstore\n        /* \"#utility.yul\":20357:20579   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20585:20951   */\n    tag_201:\n        /* \"#utility.yul\":20727:20730   */\n      0x00\n        /* \"#utility.yul\":20748:20815   */\n      tag_446\n        /* \"#utility.yul\":20812:20814   */\n      0x23\n        /* \"#utility.yul\":20807:20810   */\n      dup4\n        /* \"#utility.yul\":20748:20815   */\n      tag_197\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":20741:20815   */\n      swap2\n      pop\n        /* \"#utility.yul\":20824:20917   */\n      tag_447\n        /* \"#utility.yul\":20913:20916   */\n      dup3\n        /* \"#utility.yul\":20824:20917   */\n      tag_200\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":20942:20944   */\n      0x40\n        /* \"#utility.yul\":20937:20940   */\n      dup3\n        /* \"#utility.yul\":20933:20945   */\n      add\n        /* \"#utility.yul\":20926:20945   */\n      swap1\n      pop\n        /* \"#utility.yul\":20585:20951   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20957:21376   */\n    tag_77:\n        /* \"#utility.yul\":21123:21127   */\n      0x00\n        /* \"#utility.yul\":21161:21163   */\n      0x20\n        /* \"#utility.yul\":21150:21159   */\n      dup3\n        /* \"#utility.yul\":21146:21164   */\n      add\n        /* \"#utility.yul\":21138:21164   */\n      swap1\n      pop\n        /* \"#utility.yul\":21210:21219   */\n      dup2\n        /* \"#utility.yul\":21204:21208   */\n      dup2\n        /* \"#utility.yul\":21200:21220   */\n      sub\n        /* \"#utility.yul\":21196:21197   */\n      0x00\n        /* \"#utility.yul\":21185:21194   */\n      dup4\n        /* \"#utility.yul\":21181:21198   */\n      add\n        /* \"#utility.yul\":21174:21221   */\n      mstore\n        /* \"#utility.yul\":21238:21369   */\n      tag_449\n        /* \"#utility.yul\":21364:21368   */\n      dup2\n        /* \"#utility.yul\":21238:21369   */\n      tag_201\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":21230:21369   */\n      swap1\n      pop\n        /* \"#utility.yul\":20957:21376   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21382:21603   */\n    tag_202:\n        /* \"#utility.yul\":21522:21556   */\n      0x5472616e73666572206f662045544820746f207265636569766572206661696c\n        /* \"#utility.yul\":21518:21519   */\n      0x00\n        /* \"#utility.yul\":21510:21516   */\n      dup3\n        /* \"#utility.yul\":21506:21520   */\n      add\n        /* \"#utility.yul\":21499:21557   */\n      mstore\n        /* \"#utility.yul\":21591:21595   */\n      0x6564000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21586:21588   */\n      0x20\n        /* \"#utility.yul\":21578:21584   */\n      dup3\n        /* \"#utility.yul\":21574:21589   */\n      add\n        /* \"#utility.yul\":21567:21596   */\n      mstore\n        /* \"#utility.yul\":21382:21603   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21609:21975   */\n    tag_203:\n        /* \"#utility.yul\":21751:21754   */\n      0x00\n        /* \"#utility.yul\":21772:21839   */\n      tag_452\n        /* \"#utility.yul\":21836:21838   */\n      0x22\n        /* \"#utility.yul\":21831:21834   */\n      dup4\n        /* \"#utility.yul\":21772:21839   */\n      tag_197\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":21765:21839   */\n      swap2\n      pop\n        /* \"#utility.yul\":21848:21941   */\n      tag_453\n        /* \"#utility.yul\":21937:21940   */\n      dup3\n        /* \"#utility.yul\":21848:21941   */\n      tag_202\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":21966:21968   */\n      0x40\n        /* \"#utility.yul\":21961:21964   */\n      dup3\n        /* \"#utility.yul\":21957:21969   */\n      add\n        /* \"#utility.yul\":21950:21969   */\n      swap1\n      pop\n        /* \"#utility.yul\":21609:21975   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21981:22400   */\n    tag_82:\n        /* \"#utility.yul\":22147:22151   */\n      0x00\n        /* \"#utility.yul\":22185:22187   */\n      0x20\n        /* \"#utility.yul\":22174:22183   */\n      dup3\n        /* \"#utility.yul\":22170:22188   */\n      add\n        /* \"#utility.yul\":22162:22188   */\n      swap1\n      pop\n        /* \"#utility.yul\":22234:22243   */\n      dup2\n        /* \"#utility.yul\":22228:22232   */\n      dup2\n        /* \"#utility.yul\":22224:22244   */\n      sub\n        /* \"#utility.yul\":22220:22221   */\n      0x00\n        /* \"#utility.yul\":22209:22218   */\n      dup4\n        /* \"#utility.yul\":22205:22222   */\n      add\n        /* \"#utility.yul\":22198:22245   */\n      mstore\n        /* \"#utility.yul\":22262:22393   */\n      tag_455\n        /* \"#utility.yul\":22388:22392   */\n      dup2\n        /* \"#utility.yul\":22262:22393   */\n      tag_203\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":22254:22393   */\n      swap1\n      pop\n        /* \"#utility.yul\":21981:22400   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22406:22588   */\n    tag_204:\n        /* \"#utility.yul\":22546:22580   */\n      0x5472616e73666572206f662045544820746f20537461746572206661696c6564\n        /* \"#utility.yul\":22542:22543   */\n      0x00\n        /* \"#utility.yul\":22534:22540   */\n      dup3\n        /* \"#utility.yul\":22530:22544   */\n      add\n        /* \"#utility.yul\":22523:22581   */\n      mstore\n        /* \"#utility.yul\":22406:22588   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22594:22960   */\n    tag_205:\n        /* \"#utility.yul\":22736:22739   */\n      0x00\n        /* \"#utility.yul\":22757:22824   */\n      tag_458\n        /* \"#utility.yul\":22821:22823   */\n      0x20\n        /* \"#utility.yul\":22816:22819   */\n      dup4\n        /* \"#utility.yul\":22757:22824   */\n      tag_197\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":22750:22824   */\n      swap2\n      pop\n        /* \"#utility.yul\":22833:22926   */\n      tag_459\n        /* \"#utility.yul\":22922:22925   */\n      dup3\n        /* \"#utility.yul\":22833:22926   */\n      tag_204\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":22951:22953   */\n      0x20\n        /* \"#utility.yul\":22946:22949   */\n      dup3\n        /* \"#utility.yul\":22942:22954   */\n      add\n        /* \"#utility.yul\":22935:22954   */\n      swap1\n      pop\n        /* \"#utility.yul\":22594:22960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22966:23385   */\n    tag_87:\n        /* \"#utility.yul\":23132:23136   */\n      0x00\n        /* \"#utility.yul\":23170:23172   */\n      0x20\n        /* \"#utility.yul\":23159:23168   */\n      dup3\n        /* \"#utility.yul\":23155:23173   */\n      add\n        /* \"#utility.yul\":23147:23173   */\n      swap1\n      pop\n        /* \"#utility.yul\":23219:23228   */\n      dup2\n        /* \"#utility.yul\":23213:23217   */\n      dup2\n        /* \"#utility.yul\":23209:23229   */\n      sub\n        /* \"#utility.yul\":23205:23206   */\n      0x00\n        /* \"#utility.yul\":23194:23203   */\n      dup4\n        /* \"#utility.yul\":23190:23207   */\n      add\n        /* \"#utility.yul\":23183:23230   */\n      mstore\n        /* \"#utility.yul\":23247:23378   */\n      tag_461\n        /* \"#utility.yul\":23373:23377   */\n      dup2\n        /* \"#utility.yul\":23247:23378   */\n      tag_205\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":23239:23378   */\n      swap1\n      pop\n        /* \"#utility.yul\":22966:23385   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23391:23573   */\n    tag_206:\n        /* \"#utility.yul\":23531:23565   */\n      0x546f6b656e20696e666f732070726f76696465642061726520696e76616c6964\n        /* \"#utility.yul\":23527:23528   */\n      0x00\n        /* \"#utility.yul\":23519:23525   */\n      dup3\n        /* \"#utility.yul\":23515:23529   */\n      add\n        /* \"#utility.yul\":23508:23566   */\n      mstore\n        /* \"#utility.yul\":23391:23573   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23579:23945   */\n    tag_207:\n        /* \"#utility.yul\":23721:23724   */\n      0x00\n        /* \"#utility.yul\":23742:23809   */\n      tag_464\n        /* \"#utility.yul\":23806:23808   */\n      0x20\n        /* \"#utility.yul\":23801:23804   */\n      dup4\n        /* \"#utility.yul\":23742:23809   */\n      tag_197\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":23735:23809   */\n      swap2\n      pop\n        /* \"#utility.yul\":23818:23911   */\n      tag_465\n        /* \"#utility.yul\":23907:23910   */\n      dup3\n        /* \"#utility.yul\":23818:23911   */\n      tag_206\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":23936:23938   */\n      0x20\n        /* \"#utility.yul\":23931:23934   */\n      dup3\n        /* \"#utility.yul\":23927:23939   */\n      add\n        /* \"#utility.yul\":23920:23939   */\n      swap1\n      pop\n        /* \"#utility.yul\":23579:23945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23951:24370   */\n    tag_92:\n        /* \"#utility.yul\":24117:24121   */\n      0x00\n        /* \"#utility.yul\":24155:24157   */\n      0x20\n        /* \"#utility.yul\":24144:24153   */\n      dup3\n        /* \"#utility.yul\":24140:24158   */\n      add\n        /* \"#utility.yul\":24132:24158   */\n      swap1\n      pop\n        /* \"#utility.yul\":24204:24213   */\n      dup2\n        /* \"#utility.yul\":24198:24202   */\n      dup2\n        /* \"#utility.yul\":24194:24214   */\n      sub\n        /* \"#utility.yul\":24190:24191   */\n      0x00\n        /* \"#utility.yul\":24179:24188   */\n      dup4\n        /* \"#utility.yul\":24175:24192   */\n      add\n        /* \"#utility.yul\":24168:24215   */\n      mstore\n        /* \"#utility.yul\":24232:24363   */\n      tag_467\n        /* \"#utility.yul\":24358:24362   */\n      dup2\n        /* \"#utility.yul\":24232:24363   */\n      tag_207\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":24224:24363   */\n      swap1\n      pop\n        /* \"#utility.yul\":23951:24370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24376:24556   */\n    tag_98:\n        /* \"#utility.yul\":24424:24501   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24421:24422   */\n      0x00\n        /* \"#utility.yul\":24414:24502   */\n      mstore\n        /* \"#utility.yul\":24521:24525   */\n      0x32\n        /* \"#utility.yul\":24518:24519   */\n      0x04\n        /* \"#utility.yul\":24511:24526   */\n      mstore\n        /* \"#utility.yul\":24545:24549   */\n      0x24\n        /* \"#utility.yul\":24542:24543   */\n      0x00\n        /* \"#utility.yul\":24535:24550   */\n      revert\n        /* \"#utility.yul\":24562:24647   */\n    tag_208:\n        /* \"#utility.yul\":24607:24614   */\n      0x00\n        /* \"#utility.yul\":24636:24641   */\n      dup2\n        /* \"#utility.yul\":24625:24641   */\n      swap1\n      pop\n        /* \"#utility.yul\":24562:24647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24653:24811   */\n    tag_209:\n        /* \"#utility.yul\":24711:24720   */\n      0x00\n        /* \"#utility.yul\":24744:24805   */\n      tag_471\n        /* \"#utility.yul\":24762:24804   */\n      tag_472\n        /* \"#utility.yul\":24771:24803   */\n      tag_473\n        /* \"#utility.yul\":24797:24802   */\n      dup5\n        /* \"#utility.yul\":24771:24803   */\n      tag_208\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":24762:24804   */\n      tag_189\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":24744:24805   */\n      tag_158\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":24731:24805   */\n      swap1\n      pop\n        /* \"#utility.yul\":24653:24811   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24817:24964   */\n    tag_210:\n        /* \"#utility.yul\":24912:24957   */\n      tag_475\n        /* \"#utility.yul\":24951:24956   */\n      dup2\n        /* \"#utility.yul\":24912:24957   */\n      tag_209\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":24907:24910   */\n      dup3\n        /* \"#utility.yul\":24900:24958   */\n      mstore\n        /* \"#utility.yul\":24817:24964   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24970:25138   */\n    tag_211:\n        /* \"#utility.yul\":25053:25064   */\n      0x00\n        /* \"#utility.yul\":25087:25093   */\n      dup3\n        /* \"#utility.yul\":25082:25085   */\n      dup3\n        /* \"#utility.yul\":25075:25094   */\n      mstore\n        /* \"#utility.yul\":25127:25131   */\n      0x20\n        /* \"#utility.yul\":25122:25125   */\n      dup3\n        /* \"#utility.yul\":25118:25132   */\n      add\n        /* \"#utility.yul\":25103:25132   */\n      swap1\n      pop\n        /* \"#utility.yul\":24970:25138   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25144:25298   */\n    tag_212:\n        /* \"#utility.yul\":25284:25290   */\n      0x3078303000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25280:25281   */\n      0x00\n        /* \"#utility.yul\":25272:25278   */\n      dup3\n        /* \"#utility.yul\":25268:25282   */\n      add\n        /* \"#utility.yul\":25261:25291   */\n      mstore\n        /* \"#utility.yul\":25144:25298   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25304:25667   */\n    tag_213:\n        /* \"#utility.yul\":25445:25448   */\n      0x00\n        /* \"#utility.yul\":25466:25531   */\n      tag_479\n        /* \"#utility.yul\":25529:25530   */\n      0x04\n        /* \"#utility.yul\":25524:25527   */\n      dup4\n        /* \"#utility.yul\":25466:25531   */\n      tag_211\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":25459:25531   */\n      swap2\n      pop\n        /* \"#utility.yul\":25540:25633   */\n      tag_480\n        /* \"#utility.yul\":25629:25632   */\n      dup3\n        /* \"#utility.yul\":25540:25633   */\n      tag_212\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":25658:25660   */\n      0x20\n        /* \"#utility.yul\":25653:25656   */\n      dup3\n        /* \"#utility.yul\":25649:25661   */\n      add\n        /* \"#utility.yul\":25642:25661   */\n      swap1\n      pop\n        /* \"#utility.yul\":25304:25667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25673:26548   */\n    tag_114:\n        /* \"#utility.yul\":25958:25962   */\n      0x00\n        /* \"#utility.yul\":25996:25999   */\n      0xa0\n        /* \"#utility.yul\":25985:25994   */\n      dup3\n        /* \"#utility.yul\":25981:26000   */\n      add\n        /* \"#utility.yul\":25973:26000   */\n      swap1\n      pop\n        /* \"#utility.yul\":26010:26081   */\n      tag_482\n        /* \"#utility.yul\":26078:26079   */\n      0x00\n        /* \"#utility.yul\":26067:26076   */\n      dup4\n        /* \"#utility.yul\":26063:26080   */\n      add\n        /* \"#utility.yul\":26054:26060   */\n      dup8\n        /* \"#utility.yul\":26010:26081   */\n      tag_188\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":26091:26163   */\n      tag_483\n        /* \"#utility.yul\":26159:26161   */\n      0x20\n        /* \"#utility.yul\":26148:26157   */\n      dup4\n        /* \"#utility.yul\":26144:26162   */\n      add\n        /* \"#utility.yul\":26135:26141   */\n      dup7\n        /* \"#utility.yul\":26091:26163   */\n      tag_188\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":26173:26245   */\n      tag_484\n        /* \"#utility.yul\":26241:26243   */\n      0x40\n        /* \"#utility.yul\":26230:26239   */\n      dup4\n        /* \"#utility.yul\":26226:26244   */\n      add\n        /* \"#utility.yul\":26217:26223   */\n      dup6\n        /* \"#utility.yul\":26173:26245   */\n      tag_194\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":26255:26335   */\n      tag_485\n        /* \"#utility.yul\":26331:26333   */\n      0x60\n        /* \"#utility.yul\":26320:26329   */\n      dup4\n        /* \"#utility.yul\":26316:26334   */\n      add\n        /* \"#utility.yul\":26307:26313   */\n      dup5\n        /* \"#utility.yul\":26255:26335   */\n      tag_210\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":26383:26392   */\n      dup2\n        /* \"#utility.yul\":26377:26381   */\n      dup2\n        /* \"#utility.yul\":26373:26393   */\n      sub\n        /* \"#utility.yul\":26367:26370   */\n      0x80\n        /* \"#utility.yul\":26356:26365   */\n      dup4\n        /* \"#utility.yul\":26352:26371   */\n      add\n        /* \"#utility.yul\":26345:26394   */\n      mstore\n        /* \"#utility.yul\":26411:26541   */\n      tag_486\n        /* \"#utility.yul\":26536:26540   */\n      dup2\n        /* \"#utility.yul\":26411:26541   */\n      tag_213\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":26403:26541   */\n      swap1\n      pop\n        /* \"#utility.yul\":25673:26548   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26554:26734   */\n    tag_214:\n        /* \"#utility.yul\":26602:26679   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26599:26600   */\n      0x00\n        /* \"#utility.yul\":26592:26680   */\n      mstore\n        /* \"#utility.yul\":26699:26703   */\n      0x11\n        /* \"#utility.yul\":26696:26697   */\n      0x04\n        /* \"#utility.yul\":26689:26704   */\n      mstore\n        /* \"#utility.yul\":26723:26727   */\n      0x24\n        /* \"#utility.yul\":26720:26721   */\n      0x00\n        /* \"#utility.yul\":26713:26728   */\n      revert\n        /* \"#utility.yul\":26740:26973   */\n    tag_119:\n        /* \"#utility.yul\":26779:26782   */\n      0x00\n        /* \"#utility.yul\":26802:26826   */\n      tag_489\n        /* \"#utility.yul\":26820:26825   */\n      dup3\n        /* \"#utility.yul\":26802:26826   */\n      tag_158\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":26793:26826   */\n      swap2\n      pop\n        /* \"#utility.yul\":26848:26914   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":26841:26846   */\n      dup3\n        /* \"#utility.yul\":26838:26915   */\n      sub\n        /* \"#utility.yul\":26835:26938   */\n      tag_490\n      jumpi\n        /* \"#utility.yul\":26918:26936   */\n      tag_491\n      tag_214\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":26835:26938   */\n    tag_490:\n        /* \"#utility.yul\":26965:26966   */\n      0x01\n        /* \"#utility.yul\":26958:26963   */\n      dup3\n        /* \"#utility.yul\":26954:26967   */\n      add\n        /* \"#utility.yul\":26947:26967   */\n      swap1\n      pop\n        /* \"#utility.yul\":26740:26973   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26979:27161   */\n    tag_215:\n        /* \"#utility.yul\":27119:27153   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":27115:27116   */\n      0x00\n        /* \"#utility.yul\":27107:27113   */\n      dup3\n        /* \"#utility.yul\":27103:27117   */\n      add\n        /* \"#utility.yul\":27096:27154   */\n      mstore\n        /* \"#utility.yul\":26979:27161   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27167:27533   */\n    tag_216:\n        /* \"#utility.yul\":27309:27312   */\n      0x00\n        /* \"#utility.yul\":27330:27397   */\n      tag_494\n        /* \"#utility.yul\":27394:27396   */\n      0x20\n        /* \"#utility.yul\":27389:27392   */\n      dup4\n        /* \"#utility.yul\":27330:27397   */\n      tag_197\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":27323:27397   */\n      swap2\n      pop\n        /* \"#utility.yul\":27406:27499   */\n      tag_495\n        /* \"#utility.yul\":27495:27498   */\n      dup3\n        /* \"#utility.yul\":27406:27499   */\n      tag_215\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":27524:27526   */\n      0x20\n        /* \"#utility.yul\":27519:27522   */\n      dup3\n        /* \"#utility.yul\":27515:27527   */\n      add\n        /* \"#utility.yul\":27508:27527   */\n      swap1\n      pop\n        /* \"#utility.yul\":27167:27533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27539:27958   */\n    tag_126:\n        /* \"#utility.yul\":27705:27709   */\n      0x00\n        /* \"#utility.yul\":27743:27745   */\n      0x20\n        /* \"#utility.yul\":27732:27741   */\n      dup3\n        /* \"#utility.yul\":27728:27746   */\n      add\n        /* \"#utility.yul\":27720:27746   */\n      swap1\n      pop\n        /* \"#utility.yul\":27792:27801   */\n      dup2\n        /* \"#utility.yul\":27786:27790   */\n      dup2\n        /* \"#utility.yul\":27782:27802   */\n      sub\n        /* \"#utility.yul\":27778:27779   */\n      0x00\n        /* \"#utility.yul\":27767:27776   */\n      dup4\n        /* \"#utility.yul\":27763:27780   */\n      add\n        /* \"#utility.yul\":27756:27803   */\n      mstore\n        /* \"#utility.yul\":27820:27951   */\n      tag_497\n        /* \"#utility.yul\":27946:27950   */\n      dup2\n        /* \"#utility.yul\":27820:27951   */\n      tag_216\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":27812:27951   */\n      swap1\n      pop\n        /* \"#utility.yul\":27539:27958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27964:28189   */\n    tag_217:\n        /* \"#utility.yul\":28104:28138   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":28100:28101   */\n      0x00\n        /* \"#utility.yul\":28092:28098   */\n      dup3\n        /* \"#utility.yul\":28088:28102   */\n      add\n        /* \"#utility.yul\":28081:28139   */\n      mstore\n        /* \"#utility.yul\":28173:28181   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28168:28170   */\n      0x20\n        /* \"#utility.yul\":28160:28166   */\n      dup3\n        /* \"#utility.yul\":28156:28171   */\n      add\n        /* \"#utility.yul\":28149:28182   */\n      mstore\n        /* \"#utility.yul\":27964:28189   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28195:28561   */\n    tag_218:\n        /* \"#utility.yul\":28337:28340   */\n      0x00\n        /* \"#utility.yul\":28358:28425   */\n      tag_500\n        /* \"#utility.yul\":28422:28424   */\n      0x26\n        /* \"#utility.yul\":28417:28420   */\n      dup4\n        /* \"#utility.yul\":28358:28425   */\n      tag_197\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":28351:28425   */\n      swap2\n      pop\n        /* \"#utility.yul\":28434:28527   */\n      tag_501\n        /* \"#utility.yul\":28523:28526   */\n      dup3\n        /* \"#utility.yul\":28434:28527   */\n      tag_217\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":28552:28554   */\n      0x40\n        /* \"#utility.yul\":28547:28550   */\n      dup3\n        /* \"#utility.yul\":28543:28555   */\n      add\n        /* \"#utility.yul\":28536:28555   */\n      swap1\n      pop\n        /* \"#utility.yul\":28195:28561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28567:28986   */\n    tag_141:\n        /* \"#utility.yul\":28733:28737   */\n      0x00\n        /* \"#utility.yul\":28771:28773   */\n      0x20\n        /* \"#utility.yul\":28760:28769   */\n      dup3\n        /* \"#utility.yul\":28756:28774   */\n      add\n        /* \"#utility.yul\":28748:28774   */\n      swap1\n      pop\n        /* \"#utility.yul\":28820:28829   */\n      dup2\n        /* \"#utility.yul\":28814:28818   */\n      dup2\n        /* \"#utility.yul\":28810:28830   */\n      sub\n        /* \"#utility.yul\":28806:28807   */\n      0x00\n        /* \"#utility.yul\":28795:28804   */\n      dup4\n        /* \"#utility.yul\":28791:28808   */\n      add\n        /* \"#utility.yul\":28784:28831   */\n      mstore\n        /* \"#utility.yul\":28848:28979   */\n      tag_503\n        /* \"#utility.yul\":28974:28978   */\n      dup2\n        /* \"#utility.yul\":28848:28979   */\n      tag_218\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":28840:28979   */\n      swap1\n      pop\n        /* \"#utility.yul\":28567:28986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bb470b92e6ff042adf214fed8c1c3831515cce698648dd0b54c4e977a817177664736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_603": {
									"entryPoint": 50,
									"id": 603,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 58,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x19CD DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B8 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x2E3F4A5D EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x407299D7 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0x24E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x517 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x138 PUSH2 0x705 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x142 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1302 JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x247 JUMPI POP PUSH2 0x246 DUP3 PUSH2 0x8D7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x420 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x355 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 PUSH2 0x37A PUSH2 0x78D JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x412 SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x510 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP PUSH2 0x494 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48B SWAP1 PUSH2 0x160B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x49C PUSH2 0x78D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP PUSH2 0x50F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x506 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD SWAP1 POP DUP3 MLOAD DUP2 EQ DUP1 ISZERO PUSH2 0x52D JUMPI POP DUP1 DUP3 MLOAD EQ JUMPDEST PUSH2 0x56C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x563 SWAP1 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6FC JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x58C JUMPI PUSH2 0x58B PUSH2 0x1703 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND SUB PUSH2 0x644 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x5AF JUMPI PUSH2 0x5AE PUSH2 0x1703 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E DUP9 DUP9 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x5E7 JUMPI PUSH2 0x5E6 PUSH2 0x1703 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x63B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x6EB JUMP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x657 JUMPI PUSH2 0x656 PUSH2 0x1703 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A DUP9 DUP9 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x68F JUMPI PUSH2 0x68E PUSH2 0x1703 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP1 PUSH2 0x6F5 SWAP1 PUSH2 0x1851 JUMP JUMPDEST SWAP1 POP PUSH2 0x56F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x70D PUSH2 0x941 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x72B PUSH2 0x78D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x781 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x778 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78B PUSH1 0x0 PUSH2 0x949 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7E8 PUSH2 0x941 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x806 PUSH2 0x78D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x85C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x853 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C2 SWAP1 PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8D4 DUP2 PUSH2 0x949 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA56 DUP2 PUSH2 0xA21 JUMP JUMPDEST DUP2 EQ PUSH2 0xA61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA73 DUP2 PUSH2 0xA4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA8F JUMPI PUSH2 0xA8E PUSH2 0xA17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA9D DUP5 DUP3 DUP6 ADD PUSH2 0xA64 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xABB DUP2 PUSH2 0xAA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAD6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB07 DUP3 PUSH2 0xADC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB17 DUP2 PUSH2 0xAFC JUMP JUMPDEST DUP2 EQ PUSH2 0xB22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB34 DUP2 PUSH2 0xB0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB4D DUP2 PUSH2 0xB3A JUMP JUMPDEST DUP2 EQ PUSH2 0xB58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB6A DUP2 PUSH2 0xB44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xBC3 DUP3 PUSH2 0xB7A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xBE2 JUMPI PUSH2 0xBE1 PUSH2 0xB8B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF5 PUSH2 0xA0D JUMP JUMPDEST SWAP1 POP PUSH2 0xC01 DUP3 DUP3 PUSH2 0xBBA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC21 JUMPI PUSH2 0xC20 PUSH2 0xB8B JUMP JUMPDEST JUMPDEST PUSH2 0xC2A DUP3 PUSH2 0xB7A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC59 PUSH2 0xC54 DUP5 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0xBEB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xC75 JUMPI PUSH2 0xC74 PUSH2 0xB75 JUMP JUMPDEST JUMPDEST PUSH2 0xC80 DUP5 DUP3 DUP6 PUSH2 0xC37 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC9D JUMPI PUSH2 0xC9C PUSH2 0xB70 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCAD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xCD0 JUMPI PUSH2 0xCCF PUSH2 0xA17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCDE DUP8 DUP3 DUP9 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xCEF DUP8 DUP3 DUP9 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xD00 DUP8 DUP3 DUP9 ADD PUSH2 0xB5B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD21 JUMPI PUSH2 0xD20 PUSH2 0xA1C JUMP JUMPDEST JUMPDEST PUSH2 0xD2D DUP8 DUP3 DUP9 ADD PUSH2 0xC88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0xD42 DUP2 PUSH2 0xA21 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD5D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6E DUP3 PUSH2 0xADC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD7E DUP2 PUSH2 0xD63 JUMP JUMPDEST DUP2 EQ PUSH2 0xD89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9B DUP2 PUSH2 0xD75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xDBD JUMPI PUSH2 0xDBC PUSH2 0xA17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDCB DUP9 DUP3 DUP10 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xDDC DUP9 DUP3 DUP10 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xDED DUP9 DUP3 DUP10 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xDFE DUP9 DUP3 DUP10 ADD PUSH2 0xB5B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xE0F DUP9 DUP3 DUP10 ADD PUSH2 0xB5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE37 JUMPI PUSH2 0xE36 PUSH2 0xB8B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE60 PUSH2 0xE5B DUP5 PUSH2 0xE1C JUMP JUMPDEST PUSH2 0xBEB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xE83 JUMPI PUSH2 0xE82 PUSH2 0xE48 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEAC JUMPI DUP1 PUSH2 0xE98 DUP9 DUP3 PUSH2 0xB25 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE85 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xECB JUMPI PUSH2 0xECA PUSH2 0xB70 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xEDB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xE4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xEFF JUMPI PUSH2 0xEFE PUSH2 0xB8B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF23 PUSH2 0xF1E DUP5 PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0xBEB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xF46 JUMPI PUSH2 0xF45 PUSH2 0xE48 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF6F JUMPI DUP1 PUSH2 0xF5B DUP9 DUP3 PUSH2 0xB5B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF48 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF8E JUMPI PUSH2 0xF8D PUSH2 0xB70 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF9E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xF10 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xFC2 JUMPI PUSH2 0xFC1 PUSH2 0xB8B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE9 DUP2 PUSH2 0xFD3 JUMP JUMPDEST DUP2 EQ PUSH2 0xFF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1006 DUP2 PUSH2 0xFE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x101F PUSH2 0x101A DUP5 PUSH2 0xFA7 JUMP JUMPDEST PUSH2 0xBEB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1042 JUMPI PUSH2 0x1041 PUSH2 0xE48 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x106B JUMPI DUP1 PUSH2 0x1057 DUP9 DUP3 PUSH2 0xFF7 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1044 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x108A JUMPI PUSH2 0x1089 PUSH2 0xB70 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x109A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x100C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x10BF JUMPI PUSH2 0x10BE PUSH2 0xA17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10CD DUP9 DUP3 DUP10 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x10DE DUP9 DUP3 DUP10 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10FF JUMPI PUSH2 0x10FE PUSH2 0xA1C JUMP JUMPDEST JUMPDEST PUSH2 0x110B DUP9 DUP3 DUP10 ADD PUSH2 0xEB6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0xA1C JUMP JUMPDEST JUMPDEST PUSH2 0x1138 DUP9 DUP3 DUP10 ADD PUSH2 0xF79 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1159 JUMPI PUSH2 0x1158 PUSH2 0xA1C JUMP JUMPDEST JUMPDEST PUSH2 0x1165 DUP9 DUP3 DUP10 ADD PUSH2 0x1075 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x117B DUP2 PUSH2 0xAFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1196 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1172 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x11B8 JUMPI PUSH2 0x11B7 PUSH2 0xA17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11C6 DUP9 DUP3 DUP10 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x11D7 DUP9 DUP3 DUP10 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11F8 JUMPI PUSH2 0x11F7 PUSH2 0xA1C JUMP JUMPDEST JUMPDEST PUSH2 0x1204 DUP9 DUP3 DUP10 ADD PUSH2 0xF79 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1225 JUMPI PUSH2 0x1224 PUSH2 0xA1C JUMP JUMPDEST JUMPDEST PUSH2 0x1231 DUP9 DUP3 DUP10 ADD PUSH2 0xF79 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1252 JUMPI PUSH2 0x1251 PUSH2 0xA1C JUMP JUMPDEST JUMPDEST PUSH2 0x125E DUP9 DUP3 DUP10 ADD PUSH2 0xC88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1287 JUMPI PUSH2 0x1286 PUSH2 0xA17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1295 DUP9 DUP3 DUP10 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x12A6 DUP9 DUP3 DUP10 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x12B7 DUP9 DUP3 DUP10 ADD PUSH2 0xB5B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x12C8 DUP9 DUP3 DUP10 ADD PUSH2 0xB5B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12E9 JUMPI PUSH2 0x12E8 PUSH2 0xA1C JUMP JUMPDEST JUMPDEST PUSH2 0x12F5 DUP9 DUP3 DUP10 ADD PUSH2 0xC88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1318 JUMPI PUSH2 0x1317 PUSH2 0xA17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1326 DUP5 DUP3 DUP6 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1354 PUSH2 0x134F PUSH2 0x134A DUP5 PUSH2 0xADC JUMP JUMPDEST PUSH2 0x132F JUMP JUMPDEST PUSH2 0xADC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1366 DUP3 PUSH2 0x1339 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1378 DUP3 PUSH2 0x135B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1388 DUP2 PUSH2 0x136D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1397 DUP2 PUSH2 0xB3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13B2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x13BF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x137F JUMP JUMPDEST PUSH2 0x13CC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x138E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x13DD DUP2 PUSH2 0xAA6 JUMP JUMPDEST DUP2 EQ PUSH2 0x13E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13FA DUP2 PUSH2 0x13D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1416 JUMPI PUSH2 0x1415 PUSH2 0xA17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1424 DUP5 DUP3 DUP6 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206F6620746F6B656E7320746F2072656365697665722066 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x61696C6564000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149A PUSH1 0x25 DUP4 PUSH2 0x142D JUMP JUMPDEST SWAP2 POP PUSH2 0x14A5 DUP3 PUSH2 0x143E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14C9 DUP2 PUSH2 0x148D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x14E5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x14F2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x14FF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x138E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206F6620746F6B656E7320746F2053746174657220666169 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C65640000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1563 PUSH1 0x23 DUP4 PUSH2 0x142D JUMP JUMPDEST SWAP2 POP PUSH2 0x156E DUP3 PUSH2 0x1507 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1592 DUP2 PUSH2 0x1556 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206F662045544820746F207265636569766572206661696C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F5 PUSH1 0x22 DUP4 PUSH2 0x142D JUMP JUMPDEST SWAP2 POP PUSH2 0x1600 DUP3 PUSH2 0x1599 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1624 DUP2 PUSH2 0x15E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206F662045544820746F20537461746572206661696C6564 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1661 PUSH1 0x20 DUP4 PUSH2 0x142D JUMP JUMPDEST SWAP2 POP PUSH2 0x166C DUP3 PUSH2 0x162B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1690 DUP2 PUSH2 0x1654 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20696E666F732070726F76696465642061726520696E76616C6964 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16CD PUSH1 0x20 DUP4 PUSH2 0x142D JUMP JUMPDEST SWAP2 POP PUSH2 0x16D8 DUP3 PUSH2 0x1697 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16FC DUP2 PUSH2 0x16C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1757 PUSH2 0x1752 PUSH2 0x174D DUP5 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x132F JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1767 DUP2 PUSH2 0x173C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x3078303000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B4 PUSH1 0x4 DUP4 PUSH2 0x176D JUMP JUMPDEST SWAP2 POP PUSH2 0x17BF DUP3 PUSH2 0x177E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x17DF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x17EC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x17F9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x138E JUMP JUMPDEST PUSH2 0x1806 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x175E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1817 DUP2 PUSH2 0x17A7 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x185C DUP3 PUSH2 0xB3A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x188E JUMPI PUSH2 0x188D PUSH2 0x1822 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18CF PUSH1 0x20 DUP4 PUSH2 0x142D JUMP JUMPDEST SWAP2 POP PUSH2 0x18DA DUP3 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18FE DUP2 PUSH2 0x18C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1961 PUSH1 0x26 DUP4 PUSH2 0x142D JUMP JUMPDEST SWAP2 POP PUSH2 0x196C DUP3 PUSH2 0x1905 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1990 DUP2 PUSH2 0x1954 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB SELFBALANCE SIGNEXTEND SWAP3 0xE6 SELFDESTRUCT DIV 0x2A 0xDF 0x21 0x4F 0xED DUP13 SHR CODESIZE BALANCE MLOAD 0x5C 0xCE PUSH10 0x8648DD0B54C4E977A817 OR PUSH23 0x64736F6C634300080E0033000000000000000000000000 ",
							"sourceMap": "430:1887:12:-:0;;;;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;430:1887:12;;640:96:9;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;430:1887:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_603": {
									"entryPoint": 2369,
									"id": 603,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 2377,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@onERC1155BatchReceived_317": {
									"entryPoint": 1974,
									"id": 317,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_294": {
									"entryPoint": 1995,
									"id": 294,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC721Received_590": {
									"entryPoint": 590,
									"id": 590,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 1933,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 1797,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_351": {
									"entryPoint": 468,
									"id": 351,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_636": {
									"entryPoint": 2263,
									"id": 636,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferItems_811": {
									"entryPoint": 1303,
									"id": 811,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 2016,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferTokens_731": {
									"entryPoint": 610,
									"id": 731,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 3661,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3856,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint8_$dyn_memory_ptr": {
									"entryPoint": 4108,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 3142,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 3468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 3766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint8_$dyn_memory_ptr": {
									"entryPoint": 4213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 2660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 3208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 4087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_payablet_addresst_uint256t_uint256": {
									"entryPoint": 3489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint8_$dyn_memory_ptr": {
									"entryPoint": 4259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 4508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 4715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_fromStack": {
									"entryPoint": 4991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 3385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint256_fromStack": {
									"entryPoint": 5982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5021,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5328,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6090,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 3400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2573,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 3612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint8_$dyn_memory_ptr": {
									"entryPoint": 4007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 3078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 5997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 3427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 2593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 5938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_address_payable_to_t_address": {
									"entryPoint": 4973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint256": {
									"entryPoint": 5948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 3127,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 3002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 4911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6178,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5891,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2955,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2928,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3656,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 2933,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2588,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2583,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 6405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4": {
									"entryPoint": 6014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5": {
									"entryPoint": 5182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1": {
									"entryPoint": 5783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54": {
									"entryPoint": 5529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e": {
									"entryPoint": 5383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea": {
									"entryPoint": 5675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 3445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 2637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 4064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:28989:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1555:7:13",
														"type": ""
													}
												],
												"src": "1518:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1695:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1705:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1716:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1677:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1687:7:13",
														"type": ""
													}
												],
												"src": "1650:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1795:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1852:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:43:13"
															},
															"nodeType": "YulIf",
															"src": "1805:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1788:5:13",
														"type": ""
													}
												],
												"src": "1752:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1932:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1942:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1951:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1910:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1918:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1926:5:13",
														"type": ""
													}
												],
												"src": "1880:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2070:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2080:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2091:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2080:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2052:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2062:7:13",
														"type": ""
													}
												],
												"src": "2025:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2151:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2208:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2217:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2220:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2210:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2210:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2210:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2174:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2199:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2181:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2181:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2171:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2171:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2164:43:13"
															},
															"nodeType": "YulIf",
															"src": "2161:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2144:5:13",
														"type": ""
													}
												],
												"src": "2108:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2288:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2298:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2320:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2307:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2298:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2363:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2336:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2336:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2336:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2266:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2274:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2282:5:13",
														"type": ""
													}
												],
												"src": "2236:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2470:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2487:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2490:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2480:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2480:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "2381:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2593:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2610:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2613:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2603:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2603:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2603:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "2504:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2675:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2685:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2703:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2710:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2699:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2699:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2719:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2715:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2715:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2695:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2685:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2658:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2668:6:13",
														"type": ""
													}
												],
												"src": "2627:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2763:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2780:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2783:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2773:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2773:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2773:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2877:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2880:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2870:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2870:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2870:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2901:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2904:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2894:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2894:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2894:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2735:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2964:238:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2974:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2996:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3026:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3004:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3004:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2992:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2992:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2978:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3143:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3145:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3145:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3145:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3086:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3098:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3083:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3083:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3122:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3134:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3119:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3119:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3080:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3080:62:13"
															},
															"nodeType": "YulIf",
															"src": "3077:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3181:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3185:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3174:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3174:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3174:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2950:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2958:4:13",
														"type": ""
													}
												],
												"src": "2921:281:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3249:88:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3259:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "3269:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3269:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3259:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3318:6:13"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3326:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3298:19:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3298:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3298:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3233:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3242:6:13",
														"type": ""
													}
												],
												"src": "3208:129:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3409:241:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3514:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3516:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3516:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3516:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3486:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3494:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3483:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3483:30:13"
															},
															"nodeType": "YulIf",
															"src": "3480:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3546:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3576:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "3554:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3554:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3546:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3620:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3632:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3638:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3628:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3620:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3393:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3404:4:13",
														"type": ""
													}
												],
												"src": "3343:307:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3707:103:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3730:3:13"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3735:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3740:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3717:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3717:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3717:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3788:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3793:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3784:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3784:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3802:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3777:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3777:27:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3777:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3689:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3694:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3699:6:13",
														"type": ""
													}
												],
												"src": "3656:154:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3899:327:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3909:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3975:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3934:40:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3934:48:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3918:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3918:65:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3909:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3999:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4006:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3992:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3992:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3992:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4022:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4037:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4044:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4033:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4033:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4026:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4087:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "4089:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4089:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4089:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4068:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4073:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4064:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4064:16:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4082:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4061:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4061:25:13"
															},
															"nodeType": "YulIf",
															"src": "4058:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4203:3:13"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4208:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4213:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4179:23:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4179:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4179:41:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3872:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3877:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3885:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3893:5:13",
														"type": ""
													}
												],
												"src": "3816:410:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4306:277:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4355:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4357:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4357:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4357:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4334:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4342:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4330:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4330:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4349:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4326:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4326:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4319:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4319:35:13"
															},
															"nodeType": "YulIf",
															"src": "4316:122:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4447:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4474:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4461:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4451:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4490:87:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4550:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4558:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4546:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4546:17:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4565:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4573:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4499:46:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4499:78:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4490:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4284:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4292:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4300:5:13",
														"type": ""
													}
												],
												"src": "4245:338:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4715:817:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4762:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4764:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4764:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4764:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4736:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4745:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4732:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4732:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4757:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4728:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4728:33:13"
															},
															"nodeType": "YulIf",
															"src": "4725:120:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "4855:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4870:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4884:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4874:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4899:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4934:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4945:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4930:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4930:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4954:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4909:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4909:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4899:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4982:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4997:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5011:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5001:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5027:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5062:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5073:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5058:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5058:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5082:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5037:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5037:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5027:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5110:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5125:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5139:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5129:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5155:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5190:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5201:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5186:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5186:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5210:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5165:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5165:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5155:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5238:287:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5253:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5284:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5295:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5280:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5280:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5267:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5267:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5257:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5346:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5348:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5348:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5348:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5318:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5326:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5315:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5315:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "5312:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5443:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5487:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5498:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5483:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5483:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5507:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5453:29:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5453:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5443:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4661:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4672:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4684:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4692:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4700:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4708:6:13",
														"type": ""
													}
												],
												"src": "4589:943:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5601:52:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5618:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5640:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5623:16:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:23:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5611:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5611:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5611:36:13"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5589:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5596:3:13",
														"type": ""
													}
												],
												"src": "5538:115:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5755:122:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5765:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5777:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5788:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5773:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5773:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5765:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5843:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5856:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5867:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5852:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5852:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5801:41:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5801:69:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5801:69:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5727:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5739:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5750:4:13",
														"type": ""
													}
												],
												"src": "5659:218:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5936:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5946:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5975:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5957:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5957:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5946:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5918:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5928:7:13",
														"type": ""
													}
												],
												"src": "5883:104:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6044:87:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6109:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6118:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6121:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6111:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6111:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6111:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6067:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6100:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "6074:25:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6074:32:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6064:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6064:43:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6057:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6057:51:13"
															},
															"nodeType": "YulIf",
															"src": "6054:71:13"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6037:5:13",
														"type": ""
													}
												],
												"src": "5993:138:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6197:95:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6207:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6229:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6216:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6216:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6207:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6280:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "6245:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6245:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6245:41:13"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6175:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6183:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6191:5:13",
														"type": ""
													}
												],
												"src": "6137:155:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6440:785:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6487:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6489:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6489:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6489:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6461:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6470:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6457:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6457:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6482:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6453:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6453:33:13"
															},
															"nodeType": "YulIf",
															"src": "6450:120:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "6580:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6595:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6609:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6599:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6624:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6659:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6670:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6655:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6655:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6679:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6634:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6634:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6624:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6707:126:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6722:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6736:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6726:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6752:71:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6795:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6806:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6791:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6791:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6815:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "6762:28:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6762:61:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6752:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6843:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6858:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6872:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6862:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6888:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6923:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6934:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6919:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6919:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6943:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6898:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6898:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6888:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6971:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6986:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7000:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6990:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7016:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7051:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7062:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7047:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7047:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7071:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7026:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7026:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "7016:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7099:119:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7114:17:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7128:3:13",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7118:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7145:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7180:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7191:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7176:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7176:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7200:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7155:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7155:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "7145:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_payablet_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6378:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6389:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6401:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6409:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6417:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6425:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6433:6:13",
														"type": ""
													}
												],
												"src": "6298:927:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7313:229:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7418:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7420:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7420:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7420:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7390:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7398:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7387:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7387:30:13"
															},
															"nodeType": "YulIf",
															"src": "7384:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7450:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7462:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7470:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7458:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7458:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7450:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7512:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7524:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7530:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7520:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7520:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7512:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7297:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7308:4:13",
														"type": ""
													}
												],
												"src": "7231:311:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7637:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7654:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7657:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7647:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7647:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7647:12:13"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "7548:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7790:608:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7800:90:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7882:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7825:56:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7825:64:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7809:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7809:81:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7800:5:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7899:16:13",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "7910:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "7903:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7932:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7939:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7925:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7925:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7925:21:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7955:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7966:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7973:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7962:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7962:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "7955:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7988:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8006:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8018:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8026:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "8014:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8014:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8002:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "7992:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8060:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "8074:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8074:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8074:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8047:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8055:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8044:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8044:15:13"
															},
															"nodeType": "YulIf",
															"src": "8041:122:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8248:144:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8263:21:13",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "8281:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "8267:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "8305:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "8331:10:13"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "8343:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "8310:20:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8310:37:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8298:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8298:50:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8298:50:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8361:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "8372:3:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8377:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8368:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8368:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8361:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8201:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8206:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8198:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8198:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8214:25:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8216:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "8227:3:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8232:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8223:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8223:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8216:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8176:21:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8178:17:13",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "8189:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "8182:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8172:220:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7760:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7768:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7776:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7784:5:13",
														"type": ""
													}
												],
												"src": "7688:710:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8498:293:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8547:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8549:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8549:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8549:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8526:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8534:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8522:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8522:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8541:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8518:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8518:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8511:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8511:35:13"
															},
															"nodeType": "YulIf",
															"src": "8508:122:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8639:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8653:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8653:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8643:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8682:103:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8758:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8766:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8754:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8754:17:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8773:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8781:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8691:62:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8691:94:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8682:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8476:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8484:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8492:5:13",
														"type": ""
													}
												],
												"src": "8421:370:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8879:229:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8984:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8986:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8986:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8986:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8956:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8964:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8953:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8953:30:13"
															},
															"nodeType": "YulIf",
															"src": "8950:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9016:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9028:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9036:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9024:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9024:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9016:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9078:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9090:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9096:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9086:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9086:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9078:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8863:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8874:4:13",
														"type": ""
													}
												],
												"src": "8797:311:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9233:608:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9243:90:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9325:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9268:56:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9268:64:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "9252:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9252:81:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "9243:5:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9342:16:13",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "9353:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "9346:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "9375:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9382:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9368:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9368:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9368:21:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9398:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "9409:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9416:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9405:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9405:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "9398:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9431:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9449:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9461:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9469:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "9457:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9457:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9445:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9445:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "9435:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9503:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "9517:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9517:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9517:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9490:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9498:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9487:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9487:15:13"
															},
															"nodeType": "YulIf",
															"src": "9484:122:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9691:144:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9706:21:13",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "9724:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "9710:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "9748:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "9774:10:13"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "9786:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "9753:20:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9753:37:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9741:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9741:50:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9741:50:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9804:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "9815:3:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9820:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9811:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9811:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "9804:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "9644:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9649:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9641:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9641:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9657:25:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9659:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "9670:3:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9675:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9666:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9666:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "9659:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9619:21:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9621:17:13",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "9632:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "9625:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9615:220:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9203:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9211:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9219:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "9227:5:13",
														"type": ""
													}
												],
												"src": "9131:710:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9941:293:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9990:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "9992:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9992:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9992:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9969:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9977:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9965:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9965:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "9984:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "9961:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9961:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9954:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9954:35:13"
															},
															"nodeType": "YulIf",
															"src": "9951:122:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10082:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10109:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10096:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10096:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10086:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10125:103:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10201:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10209:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10197:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10197:17:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10216:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10224:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10134:62:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10134:94:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10125:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9919:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9927:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "9935:5:13",
														"type": ""
													}
												],
												"src": "9864:370:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10320:229:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10425:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10427:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10427:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10427:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10397:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10405:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10394:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10394:30:13"
															},
															"nodeType": "YulIf",
															"src": "10391:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10457:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10469:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10477:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10465:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10465:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10457:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10519:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10531:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10537:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10527:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10527:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10519:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint8_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10304:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10315:4:13",
														"type": ""
													}
												],
												"src": "10240:309:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10598:43:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10608:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10623:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10630:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10619:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10619:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10608:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10580:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10590:7:13",
														"type": ""
													}
												],
												"src": "10555:86:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10688:77:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10743:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10752:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10755:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10745:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10745:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10745:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10711:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10734:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "10718:15:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10718:22:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10708:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10708:33:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10701:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10701:41:13"
															},
															"nodeType": "YulIf",
															"src": "10698:61:13"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10681:5:13",
														"type": ""
													}
												],
												"src": "10647:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10821:85:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10831:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10853:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10840:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10840:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10831:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10894:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "10869:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10869:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10869:31:13"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10799:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10807:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10815:5:13",
														"type": ""
													}
												],
												"src": "10771:135:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11027:604:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11037:88:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11117:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint8_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11062:54:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11062:62:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11046:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11046:79:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "11037:5:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11134:16:13",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "11145:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "11138:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "11167:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11174:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11160:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11160:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11160:21:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11190:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "11201:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11208:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11197:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11197:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "11190:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11223:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11241:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11253:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11261:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "11249:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11249:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11237:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11237:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "11227:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11295:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "11309:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11309:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11309:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "11282:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "11290:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11279:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11279:15:13"
															},
															"nodeType": "YulIf",
															"src": "11276:122:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11483:142:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11498:21:13",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "11516:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "11502:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11540:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "11564:10:13"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "11576:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint8",
																						"nodeType": "YulIdentifier",
																						"src": "11545:18:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11545:35:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11533:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11533:48:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11533:48:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11594:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11605:3:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11610:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11601:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11601:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11594:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "11436:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "11441:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11433:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11433:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11449:25:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11451:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "11462:3:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11467:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11458:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11458:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "11451:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11411:21:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11413:17:13",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "11424:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "11417:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "11407:218:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint8_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10997:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11005:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11013:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "11021:5:13",
														"type": ""
													}
												],
												"src": "10927:704:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11727:291:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11776:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "11778:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11778:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11778:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11755:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11763:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11751:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11751:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11770:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "11747:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11747:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11740:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11740:35:13"
															},
															"nodeType": "YulIf",
															"src": "11737:122:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11868:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11895:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11882:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11882:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11872:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11911:101:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11985:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11993:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11981:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11981:17:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12000:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "12008:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint8_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11920:60:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11920:92:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "11911:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint8_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11705:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11713:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "11721:5:13",
														"type": ""
													}
												],
												"src": "11652:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12231:1330:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12278:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12280:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12280:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12280:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12252:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12261:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12248:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12248:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12273:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12244:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12244:33:13"
															},
															"nodeType": "YulIf",
															"src": "12241:120:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "12371:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12386:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12400:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12390:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12415:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12450:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12461:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12446:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12446:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12470:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12425:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12425:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12415:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12498:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12513:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12527:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12517:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12543:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12578:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12589:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12574:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12574:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12598:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12553:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12553:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12543:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12626:303:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12641:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12672:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12683:2:13",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12668:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12668:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "12655:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12655:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12645:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12734:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "12736:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12736:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12736:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "12706:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12714:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12703:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12703:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "12700:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12831:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12891:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12902:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12887:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12887:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12911:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12841:45:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12841:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "12831:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12939:303:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12954:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12985:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12996:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12981:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12981:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "12968:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12968:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12958:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "13047:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "13049:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13049:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "13049:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "13019:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13027:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13016:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13016:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "13013:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13144:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13204:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13215:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13200:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13200:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13224:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "13154:45:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13154:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "13144:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13252:302:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13267:47:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13298:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13309:3:13",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13294:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13294:19:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "13281:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13281:33:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13271:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "13361:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "13363:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13363:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "13363:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "13333:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13341:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13330:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13330:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "13327:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13458:86:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13516:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13527:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13512:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13512:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13536:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint8_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "13468:43:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13468:76:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "13458:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint8_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12169:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12180:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12192:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12200:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12208:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12216:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "12224:6:13",
														"type": ""
													}
												],
												"src": "12024:1537:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13632:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13649:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13672:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "13654:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13654:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13642:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13642:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13642:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13620:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13627:3:13",
														"type": ""
													}
												],
												"src": "13567:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13789:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13799:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13811:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13822:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13807:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13807:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13799:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13879:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13892:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13903:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13888:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13888:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13835:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13835:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13835:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13761:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13773:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13784:4:13",
														"type": ""
													}
												],
												"src": "13691:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14112:1316:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14159:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14161:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14161:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14161:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14133:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14142:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14129:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14129:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14154:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14125:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14125:33:13"
															},
															"nodeType": "YulIf",
															"src": "14122:120:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "14252:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14267:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14281:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14271:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14296:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14331:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14342:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14327:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14327:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14351:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "14306:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14306:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14296:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "14379:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14394:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14408:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14398:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14424:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14459:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14470:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14455:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14455:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14479:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "14434:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14434:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "14424:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "14507:303:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14522:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14553:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14564:2:13",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14549:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14549:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "14536:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14536:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14526:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "14615:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "14617:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14617:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "14617:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "14587:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14595:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14584:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14584:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "14581:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14712:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14772:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14783:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14768:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14768:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14792:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "14722:45:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14722:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "14712:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "14820:303:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14835:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14866:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14877:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14862:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14862:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "14849:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14849:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14839:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "14928:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "14930:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14930:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "14930:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "14900:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14908:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14897:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14897:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "14894:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15025:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15085:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15096:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15081:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15081:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15105:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "15035:45:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15035:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "15025:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15133:288:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15148:47:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15179:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15190:3:13",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15175:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15175:19:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "15162:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15162:33:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15152:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "15242:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "15244:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15244:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "15244:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "15214:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15222:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15211:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15211:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "15208:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15339:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15383:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15394:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15379:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15379:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15403:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "15349:29:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15349:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "15339:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14050:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14061:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14073:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14081:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14089:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14097:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "14105:6:13",
														"type": ""
													}
												],
												"src": "13919:1509:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15577:946:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15624:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15626:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15626:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15626:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15598:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15607:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15594:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15594:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15619:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15590:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15590:33:13"
															},
															"nodeType": "YulIf",
															"src": "15587:120:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "15717:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15732:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15746:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15736:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15761:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15796:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15807:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15792:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15792:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15816:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15771:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15771:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15761:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15844:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15859:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15873:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15863:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15889:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15924:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15935:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15920:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15920:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15944:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15899:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15899:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "15889:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15972:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15987:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16001:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15991:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16017:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16052:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16063:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16048:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16048:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16072:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "16027:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16027:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "16017:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16100:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16115:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16129:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16119:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16145:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16180:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16191:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16176:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16176:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16200:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "16155:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16155:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "16145:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16228:288:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16243:47:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16274:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16285:3:13",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16270:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16270:19:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "16257:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16257:33:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16247:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16337:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "16339:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16339:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16339:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16309:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16317:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16306:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16306:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "16303:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16434:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16478:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16489:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16474:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16474:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16498:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "16444:29:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16444:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "16434:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15515:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15526:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15538:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15546:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15554:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15562:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15570:6:13",
														"type": ""
													}
												],
												"src": "15434:1089:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16595:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16641:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "16643:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16643:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16643:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16616:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16625:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16612:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16612:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16637:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16608:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16608:32:13"
															},
															"nodeType": "YulIf",
															"src": "16605:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "16734:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16749:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16763:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16753:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16778:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16813:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16824:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16809:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16809:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16833:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "16788:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16788:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16778:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16565:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16576:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16588:6:13",
														"type": ""
													}
												],
												"src": "16529:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16896:28:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16906:12:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "16913:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16906:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16882:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16892:3:13",
														"type": ""
													}
												],
												"src": "16864:60:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16990:82:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17000:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17058:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "17040:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17040:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "17031:8:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17031:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "17013:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17013:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "17000:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16970:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "16980:9:13",
														"type": ""
													}
												],
												"src": "16930:142:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17138:66:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17148:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17192:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "17161:30:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17161:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "17148:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17118:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "17128:9:13",
														"type": ""
													}
												],
												"src": "17078:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17278:66:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17288:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17332:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "17301:30:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17301:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "17288:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_address_payable_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17258:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "17268:9:13",
														"type": ""
													}
												],
												"src": "17210:134:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17423:74:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17440:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17484:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_address_payable_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "17445:38:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17445:45:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17433:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17433:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17433:58:13"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17411:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17418:3:13",
														"type": ""
													}
												],
												"src": "17350:147:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17568:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17585:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17608:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "17590:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17590:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17578:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17578:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17578:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17556:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17563:3:13",
														"type": ""
													}
												],
												"src": "17503:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17789:296:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17799:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17811:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17822:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17807:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17807:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17799:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17879:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17892:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17903:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17888:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17888:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17835:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17835:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17835:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17968:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17981:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17992:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17977:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17977:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17916:51:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17916:80:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17916:80:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "18050:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18063:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18074:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18059:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18059:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18006:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18006:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18006:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17745:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17757:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17765:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17773:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17784:4:13",
														"type": ""
													}
												],
												"src": "17627:458:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18131:76:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18185:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18194:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18197:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18187:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18187:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18187:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18154:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18176:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "18161:14:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18161:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18151:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18151:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18144:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18144:40:13"
															},
															"nodeType": "YulIf",
															"src": "18141:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18124:5:13",
														"type": ""
													}
												],
												"src": "18091:116:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18273:77:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18283:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "18298:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18292:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18292:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "18283:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18338:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "18314:23:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18314:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18314:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "18251:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18259:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18267:5:13",
														"type": ""
													}
												],
												"src": "18213:137:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18430:271:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18476:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "18478:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18478:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18478:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18451:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18460:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18447:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18447:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18472:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "18443:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18443:32:13"
															},
															"nodeType": "YulIf",
															"src": "18440:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "18569:125:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18584:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18598:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18588:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "18613:71:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "18656:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18667:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18652:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18652:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18676:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "18623:28:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18623:61:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "18613:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18400:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "18411:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18423:6:13",
														"type": ""
													}
												],
												"src": "18356:345:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18803:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18820:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18825:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18813:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18813:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18813:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18841:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18860:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18865:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18856:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18856:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18841:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18775:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18780:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18791:11:13",
														"type": ""
													}
												],
												"src": "18707:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18988:118:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19010:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19018:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19006:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19006:14:13"
																	},
																	{
																		"hexValue": "5472616e73666572206f6620746f6b656e7320746f2072656365697665722066",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19022:34:13",
																		"type": "",
																		"value": "Transfer of tokens to receiver f"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18999:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18999:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18999:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19078:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19086:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19074:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19074:15:13"
																	},
																	{
																		"hexValue": "61696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19091:7:13",
																		"type": "",
																		"value": "ailed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19067:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19067:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19067:32:13"
														}
													]
												},
												"name": "store_literal_in_memory_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18980:6:13",
														"type": ""
													}
												],
												"src": "18882:224:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19258:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19268:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19334:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19339:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19275:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19275:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19268:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19440:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5",
																	"nodeType": "YulIdentifier",
																	"src": "19351:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19351:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19351:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19453:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19464:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19469:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19460:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19460:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19453:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19246:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19254:3:13",
														"type": ""
													}
												],
												"src": "19112:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19655:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19665:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19677:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19688:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19673:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19673:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19665:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19712:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19723:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19708:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19708:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19731:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19737:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19727:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19727:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19701:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19701:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19701:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19757:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19891:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19765:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19765:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19757:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19635:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19650:4:13",
														"type": ""
													}
												],
												"src": "19484:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20063:288:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20073:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20085:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20096:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20081:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20081:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20073:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20153:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20166:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20177:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20162:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20162:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20109:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20109:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20109:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20234:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20247:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20258:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20243:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20243:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20190:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20190:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20190:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "20316:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20329:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20340:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20325:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20325:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20272:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20272:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20272:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20019:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20031:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20039:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20047:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20058:4:13",
														"type": ""
													}
												],
												"src": "19909:442:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20463:116:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20485:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20493:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20481:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20481:14:13"
																	},
																	{
																		"hexValue": "5472616e73666572206f6620746f6b656e7320746f2053746174657220666169",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20497:34:13",
																		"type": "",
																		"value": "Transfer of tokens to Stater fai"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20474:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20474:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20474:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20553:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20561:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20549:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20549:15:13"
																	},
																	{
																		"hexValue": "6c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20566:5:13",
																		"type": "",
																		"value": "led"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20542:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20542:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20542:30:13"
														}
													]
												},
												"name": "store_literal_in_memory_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20455:6:13",
														"type": ""
													}
												],
												"src": "20357:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20731:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20741:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20807:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20812:2:13",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20748:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20748:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20741:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20913:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e",
																	"nodeType": "YulIdentifier",
																	"src": "20824:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20824:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20824:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20926:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20937:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20942:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20933:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20933:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20926:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20719:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20727:3:13",
														"type": ""
													}
												],
												"src": "20585:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21128:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21138:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21150:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21161:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21146:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21146:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21138:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21185:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21196:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21181:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21181:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21204:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21210:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21200:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21200:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21174:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21174:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21174:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21230:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21364:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21238:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21238:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21230:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21108:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21123:4:13",
														"type": ""
													}
												],
												"src": "20957:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21488:115:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21510:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21518:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21506:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21506:14:13"
																	},
																	{
																		"hexValue": "5472616e73666572206f662045544820746f207265636569766572206661696c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21522:34:13",
																		"type": "",
																		"value": "Transfer of ETH to receiver fail"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21499:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21499:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21499:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21578:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21586:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21574:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21574:15:13"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21591:4:13",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21567:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21567:29:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21567:29:13"
														}
													]
												},
												"name": "store_literal_in_memory_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21480:6:13",
														"type": ""
													}
												],
												"src": "21382:221:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21755:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21765:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21831:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21836:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21772:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21772:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21765:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21937:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54",
																	"nodeType": "YulIdentifier",
																	"src": "21848:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21848:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21848:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21950:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21961:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21966:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21957:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21957:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21950:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21743:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21751:3:13",
														"type": ""
													}
												],
												"src": "21609:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22152:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22162:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22174:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22185:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22170:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22170:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22162:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22209:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22220:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22205:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22205:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22228:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22234:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22224:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22224:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22198:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22198:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22198:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22254:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22388:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22262:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22262:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22254:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22132:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22147:4:13",
														"type": ""
													}
												],
												"src": "21981:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22512:76:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22534:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22542:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22530:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22530:14:13"
																	},
																	{
																		"hexValue": "5472616e73666572206f662045544820746f20537461746572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22546:34:13",
																		"type": "",
																		"value": "Transfer of ETH to Stater failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22523:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22523:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22523:58:13"
														}
													]
												},
												"name": "store_literal_in_memory_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22504:6:13",
														"type": ""
													}
												],
												"src": "22406:182:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22740:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22750:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22816:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22821:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22757:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22757:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22750:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22922:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea",
																	"nodeType": "YulIdentifier",
																	"src": "22833:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22833:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22833:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22935:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22946:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22951:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22942:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22942:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22935:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22728:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22736:3:13",
														"type": ""
													}
												],
												"src": "22594:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23137:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23147:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23159:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23170:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23155:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23155:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23147:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23194:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23205:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23190:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23190:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23213:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23219:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23209:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23209:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23183:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23183:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23183:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23239:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23373:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23247:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23247:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23239:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23117:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23132:4:13",
														"type": ""
													}
												],
												"src": "22966:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23497:76:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23519:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23527:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23515:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23515:14:13"
																	},
																	{
																		"hexValue": "546f6b656e20696e666f732070726f76696465642061726520696e76616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23531:34:13",
																		"type": "",
																		"value": "Token infos provided are invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23508:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23508:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23508:58:13"
														}
													]
												},
												"name": "store_literal_in_memory_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23489:6:13",
														"type": ""
													}
												],
												"src": "23391:182:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23725:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23735:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23801:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23806:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23742:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23742:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23735:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23907:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1",
																	"nodeType": "YulIdentifier",
																	"src": "23818:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23818:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23818:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23920:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23931:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23936:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23927:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23927:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23920:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23713:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23721:3:13",
														"type": ""
													}
												],
												"src": "23579:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24122:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24132:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24144:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24155:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24140:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24140:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24132:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24179:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24190:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24175:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24175:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24198:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24204:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24194:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24194:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24168:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24168:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24168:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24224:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24358:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24232:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24232:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24224:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24102:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24117:4:13",
														"type": ""
													}
												],
												"src": "23951:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24404:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24421:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24424:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24414:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24414:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24414:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24518:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24521:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24511:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24511:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24511:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24542:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24545:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "24535:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24535:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24535:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "24376:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24615:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24625:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "24636:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "24625:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24597:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "24607:7:13",
														"type": ""
													}
												],
												"src": "24562:85:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24721:90:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24731:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "24797:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "24771:25:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24771:32:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "24762:8:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24762:42:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24744:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24744:61:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "24731:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24701:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "24711:9:13",
														"type": ""
													}
												],
												"src": "24653:158:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24890:74:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24907:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24951:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "24912:38:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24912:45:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24900:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24900:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24900:58:13"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24878:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24885:3:13",
														"type": ""
													}
												],
												"src": "24817:147:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25065:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25082:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25087:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25075:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25075:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25075:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25103:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25122:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25127:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25118:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25118:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "25103:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25037:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25042:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "25053:11:13",
														"type": ""
													}
												],
												"src": "24970:168:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25250:48:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25272:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25280:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25268:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25268:14:13"
																	},
																	{
																		"hexValue": "30783030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25284:6:13",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25261:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25261:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25261:30:13"
														}
													]
												},
												"name": "store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25242:6:13",
														"type": ""
													}
												],
												"src": "25144:154:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25449:218:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25459:72:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25524:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25529:1:13",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25466:57:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25466:65:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25459:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25629:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"nodeType": "YulIdentifier",
																	"src": "25540:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25540:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25540:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25642:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25653:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25658:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25649:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25649:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25642:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25437:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25445:3:13",
														"type": ""
													}
												],
												"src": "25304:363:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25963:585:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25973:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25985:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25996:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25981:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25981:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25973:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26054:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26067:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26078:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26063:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26063:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26010:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26010:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26010:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26135:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26148:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26159:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26144:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26144:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26091:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26091:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26091:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "26217:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26230:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26241:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26226:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26226:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26173:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26173:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26173:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "26307:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26320:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26331:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26316:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26316:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26255:51:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26255:80:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26255:80:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26356:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26367:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26352:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26352:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26377:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26383:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26373:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26373:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26345:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26345:49:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26345:49:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26403:138:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26536:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26411:123:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26411:130:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26403:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25911:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "25923:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "25931:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25939:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25947:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25958:4:13",
														"type": ""
													}
												],
												"src": "25673:875:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26582:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26599:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26602:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26592:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26592:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26592:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26696:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26699:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26689:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26689:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26689:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26720:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26723:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "26713:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26713:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26713:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "26554:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26783:190:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26793:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26820:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26802:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26802:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "26793:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26916:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "26918:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26918:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26918:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26841:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26848:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "26838:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26838:77:13"
															},
															"nodeType": "YulIf",
															"src": "26835:103:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26947:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26958:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26965:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26954:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26954:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "26947:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26769:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "26779:3:13",
														"type": ""
													}
												],
												"src": "26740:233:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27085:76:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27107:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27115:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27103:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27103:14:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27119:34:13",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27096:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27096:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27096:58:13"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27077:6:13",
														"type": ""
													}
												],
												"src": "26979:182:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27313:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27323:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27389:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27394:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27330:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27330:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27323:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27495:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "27406:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27406:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27406:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27508:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27519:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27524:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27515:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27515:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27508:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27301:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27309:3:13",
														"type": ""
													}
												],
												"src": "27167:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27710:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27720:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27732:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27743:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27728:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27728:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27720:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27767:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27778:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27763:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27763:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27786:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27792:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27782:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27782:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27756:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27756:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27756:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27812:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27946:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27820:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27820:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27812:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27690:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27705:4:13",
														"type": ""
													}
												],
												"src": "27539:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28070:119:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28092:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28100:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28088:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "280.8.15:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28104:34:13",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28081:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28081:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28081:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28160:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28168:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28156:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28156:15:13"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28173:8:13",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28149:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28149:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28149:33:13"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28062:6:13",
														"type": ""
													}
												],
												"src": "27964:225:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28341:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28351:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28417:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28422:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28358:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28358:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28351:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28523:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "28434:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28434:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28434:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28536:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28547:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28552:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28543:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28543:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28536:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28329:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28337:3:13",
														"type": ""
													}
												],
												"src": "28195:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28738:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28748:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28760:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28771:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28756:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28756:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28748:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28795:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28806:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28791:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28791:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28814:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28820:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28810:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28810:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28784:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28784:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28784:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28840:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28974:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28848:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28848:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28840:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28718:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28733:4:13",
														"type": ""
													}
												],
												"src": "28567:419:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_payablet_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_uint8_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    // uint8[]\n    function abi_decode_available_length_t_array$_t_uint8_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint8_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint8(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint8[]\n    function abi_decode_t_array$_t_uint8_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint8_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint8_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_array$_t_uint8_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer of tokens to receiver f\")\n\n        mstore(add(memPtr, 32), \"ailed\")\n\n    }\n\n    function abi_encode_t_stringliteral_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer of tokens to Stater fai\")\n\n        mstore(add(memPtr, 32), \"led\")\n\n    }\n\n    function abi_encode_t_stringliteral_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer of ETH to receiver fail\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer of ETH to Stater failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token infos provided are invalid\")\n\n    }\n\n    function abi_encode_t_stringliteral_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint256(value))\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"0x00\")\n\n    }\n\n    function abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a6146101305780638da5cb5b1461013a578063bc197c8114610158578063f23a6e6114610188578063f2fde38b146101b857610093565b806301ffc9a714610098578063150b7a02146100c85780632e3f4a5d146100f8578063407299d714610114575b600080fd5b6100b260048036038101906100ad9190610a79565b6101d4565b6040516100bf9190610ac1565b60405180910390f35b6100e260048036038101906100dd9190610cb6565b61024e565b6040516100ef9190610d48565b60405180910390f35b610112600480360381019061010d9190610da1565b610262565b005b61012e600480360381019061012991906110a3565b610517565b005b610138610705565b005b61014261078d565b60405161014f9190611181565b60405180910390f35b610172600480360381019061016d919061119c565b6107b6565b60405161017f9190610d48565b60405180910390f35b6101a2600480360381019061019d919061126b565b6107cb565b6040516101af9190610d48565b60405180910390f35b6101d260048036038101906101cd9190611302565b6107e0565b005b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102475750610246826108d7565b5b9050919050565b600063150b7a0260e01b9050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610420578273ffffffffffffffffffffffffffffffffffffffff166323b872dd8686856040518463ffffffff1660e01b81526004016102d39392919061139d565b6020604051808303816000875af11580156102f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103169190611400565b610355576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034c906114b0565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd8661037a61078d565b846040518463ffffffff1660e01b8152600401610399939291906114d0565b6020604051808303816000875af11580156103b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dc9190611400565b61041b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041290611579565b60405180910390fd5b610510565b8373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b9061160b565b60405180910390fd5b61049c61078d565b73ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505061050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050690611677565b60405180910390fd5b5b5050505050565b60008351905082518114801561052d5750808251145b61056c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610563906116e3565b60405180910390fd5b60005b818110156106fc57600083828151811061058c5761058b611703565b5b602002602001015160ff1603610644578481815181106105af576105ae611703565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166342842e0e88888785815181106105e7576105e6611703565b5b60200260200101516040518463ffffffff1660e01b815260040161060d939291906114d0565b600060405180830381600087803b15801561062757600080fd5b505af115801561063b573d6000803e3d6000fd5b505050506106eb565b84818151811061065757610656611703565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663f242432a888887858151811061068f5761068e611703565b5b602002602001015160016040518563ffffffff1660e01b81526004016106b894939291906117ca565b600060405180830381600087803b1580156106d257600080fd5b505af11580156106e6573d6000803e3d6000fd5b505050505b806106f590611851565b905061056f565b50505050505050565b61070d610941565b73ffffffffffffffffffffffffffffffffffffffff1661072b61078d565b73ffffffffffffffffffffffffffffffffffffffff1614610781576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610778906118e5565b60405180910390fd5b61078b6000610949565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b6107e8610941565b73ffffffffffffffffffffffffffffffffffffffff1661080661078d565b73ffffffffffffffffffffffffffffffffffffffff161461085c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610853906118e5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c290611977565b60405180910390fd5b6108d481610949565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610a5681610a21565b8114610a6157600080fd5b50565b600081359050610a7381610a4d565b92915050565b600060208284031215610a8f57610a8e610a17565b5b6000610a9d84828501610a64565b91505092915050565b60008115159050919050565b610abb81610aa6565b82525050565b6000602082019050610ad66000830184610ab2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b0782610adc565b9050919050565b610b1781610afc565b8114610b2257600080fd5b50565b600081359050610b3481610b0e565b92915050565b6000819050919050565b610b4d81610b3a565b8114610b5857600080fd5b50565b600081359050610b6a81610b44565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610bc382610b7a565b810181811067ffffffffffffffff82111715610be257610be1610b8b565b5b80604052505050565b6000610bf5610a0d565b9050610c018282610bba565b919050565b600067ffffffffffffffff821115610c2157610c20610b8b565b5b610c2a82610b7a565b9050602081019050919050565b82818337600083830152505050565b6000610c59610c5484610c06565b610beb565b905082815260208101848484011115610c7557610c74610b75565b5b610c80848285610c37565b509392505050565b600082601f830112610c9d57610c9c610b70565b5b8135610cad848260208601610c46565b91505092915050565b60008060008060808587031215610cd057610ccf610a17565b5b6000610cde87828801610b25565b9450506020610cef87828801610b25565b9350506040610d0087828801610b5b565b925050606085013567ffffffffffffffff811115610d2157610d20610a1c565b5b610d2d87828801610c88565b91505092959194509250565b610d4281610a21565b82525050565b6000602082019050610d5d6000830184610d39565b92915050565b6000610d6e82610adc565b9050919050565b610d7e81610d63565b8114610d8957600080fd5b50565b600081359050610d9b81610d75565b92915050565b600080600080600060a08688031215610dbd57610dbc610a17565b5b6000610dcb88828901610b25565b9550506020610ddc88828901610d8c565b9450506040610ded88828901610b25565b9350506060610dfe88828901610b5b565b9250506080610e0f88828901610b5b565b9150509295509295909350565b600067ffffffffffffffff821115610e3757610e36610b8b565b5b602082029050602081019050919050565b600080fd5b6000610e60610e5b84610e1c565b610beb565b90508083825260208201905060208402830185811115610e8357610e82610e48565b5b835b81811015610eac5780610e988882610b25565b845260208401935050602081019050610e85565b5050509392505050565b600082601f830112610ecb57610eca610b70565b5b8135610edb848260208601610e4d565b91505092915050565b600067ffffffffffffffff821115610eff57610efe610b8b565b5b602082029050602081019050919050565b6000610f23610f1e84610ee4565b610beb565b90508083825260208201905060208402830185811115610f4657610f45610e48565b5b835b81811015610f6f5780610f5b8882610b5b565b845260208401935050602081019050610f48565b5050509392505050565b600082601f830112610f8e57610f8d610b70565b5b8135610f9e848260208601610f10565b91505092915050565b600067ffffffffffffffff821115610fc257610fc1610b8b565b5b602082029050602081019050919050565b600060ff82169050919050565b610fe981610fd3565b8114610ff457600080fd5b50565b60008135905061100681610fe0565b92915050565b600061101f61101a84610fa7565b610beb565b9050808382526020820190506020840283018581111561104257611041610e48565b5b835b8181101561106b57806110578882610ff7565b845260208401935050602081019050611044565b5050509392505050565b600082601f83011261108a57611089610b70565b5b813561109a84826020860161100c565b91505092915050565b600080600080600060a086880312156110bf576110be610a17565b5b60006110cd88828901610b25565b95505060206110de88828901610b25565b945050604086013567ffffffffffffffff8111156110ff576110fe610a1c565b5b61110b88828901610eb6565b935050606086013567ffffffffffffffff81111561112c5761112b610a1c565b5b61113888828901610f79565b925050608086013567ffffffffffffffff81111561115957611158610a1c565b5b61116588828901611075565b9150509295509295909350565b61117b81610afc565b82525050565b60006020820190506111966000830184611172565b92915050565b600080600080600060a086880312156111b8576111b7610a17565b5b60006111c688828901610b25565b95505060206111d788828901610b25565b945050604086013567ffffffffffffffff8111156111f8576111f7610a1c565b5b61120488828901610f79565b935050606086013567ffffffffffffffff81111561122557611224610a1c565b5b61123188828901610f79565b925050608086013567ffffffffffffffff81111561125257611251610a1c565b5b61125e88828901610c88565b9150509295509295909350565b600080600080600060a0868803121561128757611286610a17565b5b600061129588828901610b25565b95505060206112a688828901610b25565b94505060406112b788828901610b5b565b93505060606112c888828901610b5b565b925050608086013567ffffffffffffffff8111156112e9576112e8610a1c565b5b6112f588828901610c88565b9150509295509295909350565b60006020828403121561131857611317610a17565b5b600061132684828501610b25565b91505092915050565b6000819050919050565b600061135461134f61134a84610adc565b61132f565b610adc565b9050919050565b600061136682611339565b9050919050565b60006113788261135b565b9050919050565b6113888161136d565b82525050565b61139781610b3a565b82525050565b60006060820190506113b26000830186611172565b6113bf602083018561137f565b6113cc604083018461138e565b949350505050565b6113dd81610aa6565b81146113e857600080fd5b50565b6000815190506113fa816113d4565b92915050565b60006020828403121561141657611415610a17565b5b6000611424848285016113eb565b91505092915050565b600082825260208201905092915050565b7f5472616e73666572206f6620746f6b656e7320746f207265636569766572206660008201527f61696c6564000000000000000000000000000000000000000000000000000000602082015250565b600061149a60258361142d565b91506114a58261143e565b604082019050919050565b600060208201905081810360008301526114c98161148d565b9050919050565b60006060820190506114e56000830186611172565b6114f26020830185611172565b6114ff604083018461138e565b949350505050565b7f5472616e73666572206f6620746f6b656e7320746f205374617465722066616960008201527f6c65640000000000000000000000000000000000000000000000000000000000602082015250565b600061156360238361142d565b915061156e82611507565b604082019050919050565b6000602082019050818103600083015261159281611556565b9050919050565b7f5472616e73666572206f662045544820746f207265636569766572206661696c60008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b60006115f560228361142d565b915061160082611599565b604082019050919050565b60006020820190508181036000830152611624816115e8565b9050919050565b7f5472616e73666572206f662045544820746f20537461746572206661696c6564600082015250565b600061166160208361142d565b915061166c8261162b565b602082019050919050565b6000602082019050818103600083015261169081611654565b9050919050565b7f546f6b656e20696e666f732070726f76696465642061726520696e76616c6964600082015250565b60006116cd60208361142d565b91506116d882611697565b602082019050919050565b600060208201905081810360008301526116fc816116c0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b600061175761175261174d84611732565b61132f565b610b3a565b9050919050565b6117678161173c565b82525050565b600082825260208201905092915050565b7f3078303000000000000000000000000000000000000000000000000000000000600082015250565b60006117b460048361176d565b91506117bf8261177e565b602082019050919050565b600060a0820190506117df6000830187611172565b6117ec6020830186611172565b6117f9604083018561138e565b611806606083018461175e565b8181036080830152611817816117a7565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061185c82610b3a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361188e5761188d611822565b5b600182019050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006118cf60208361142d565b91506118da82611899565b602082019050919050565b600060208201905081810360008301526118fe816118c2565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061196160268361142d565b915061196c82611905565b604082019050919050565b6000602082019050818103600083015261199081611954565b905091905056fea2646970667358221220bb470b92e6ff042adf214fed8c1c3831515cce698648dd0b54c4e977a817177664736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B8 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x2E3F4A5D EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x407299D7 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0x24E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x517 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x138 PUSH2 0x705 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x142 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x119C JUMP JUMPDEST PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1302 JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x247 JUMPI POP PUSH2 0x246 DUP3 PUSH2 0x8D7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x420 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x355 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 PUSH2 0x37A PUSH2 0x78D JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x412 SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x510 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP PUSH2 0x494 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48B SWAP1 PUSH2 0x160B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x49C PUSH2 0x78D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP PUSH2 0x50F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x506 SWAP1 PUSH2 0x1677 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD SWAP1 POP DUP3 MLOAD DUP2 EQ DUP1 ISZERO PUSH2 0x52D JUMPI POP DUP1 DUP3 MLOAD EQ JUMPDEST PUSH2 0x56C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x563 SWAP1 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6FC JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x58C JUMPI PUSH2 0x58B PUSH2 0x1703 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND SUB PUSH2 0x644 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x5AF JUMPI PUSH2 0x5AE PUSH2 0x1703 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E DUP9 DUP9 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x5E7 JUMPI PUSH2 0x5E6 PUSH2 0x1703 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x63B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x6EB JUMP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x657 JUMPI PUSH2 0x656 PUSH2 0x1703 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A DUP9 DUP9 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x68F JUMPI PUSH2 0x68E PUSH2 0x1703 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP1 PUSH2 0x6F5 SWAP1 PUSH2 0x1851 JUMP JUMPDEST SWAP1 POP PUSH2 0x56F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x70D PUSH2 0x941 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x72B PUSH2 0x78D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x781 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x778 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78B PUSH1 0x0 PUSH2 0x949 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7E8 PUSH2 0x941 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x806 PUSH2 0x78D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x85C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x853 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C2 SWAP1 PUSH2 0x1977 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8D4 DUP2 PUSH2 0x949 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA56 DUP2 PUSH2 0xA21 JUMP JUMPDEST DUP2 EQ PUSH2 0xA61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA73 DUP2 PUSH2 0xA4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA8F JUMPI PUSH2 0xA8E PUSH2 0xA17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA9D DUP5 DUP3 DUP6 ADD PUSH2 0xA64 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xABB DUP2 PUSH2 0xAA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAD6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB07 DUP3 PUSH2 0xADC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB17 DUP2 PUSH2 0xAFC JUMP JUMPDEST DUP2 EQ PUSH2 0xB22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB34 DUP2 PUSH2 0xB0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB4D DUP2 PUSH2 0xB3A JUMP JUMPDEST DUP2 EQ PUSH2 0xB58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB6A DUP2 PUSH2 0xB44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xBC3 DUP3 PUSH2 0xB7A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xBE2 JUMPI PUSH2 0xBE1 PUSH2 0xB8B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF5 PUSH2 0xA0D JUMP JUMPDEST SWAP1 POP PUSH2 0xC01 DUP3 DUP3 PUSH2 0xBBA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC21 JUMPI PUSH2 0xC20 PUSH2 0xB8B JUMP JUMPDEST JUMPDEST PUSH2 0xC2A DUP3 PUSH2 0xB7A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC59 PUSH2 0xC54 DUP5 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0xBEB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xC75 JUMPI PUSH2 0xC74 PUSH2 0xB75 JUMP JUMPDEST JUMPDEST PUSH2 0xC80 DUP5 DUP3 DUP6 PUSH2 0xC37 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC9D JUMPI PUSH2 0xC9C PUSH2 0xB70 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCAD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xCD0 JUMPI PUSH2 0xCCF PUSH2 0xA17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCDE DUP8 DUP3 DUP9 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xCEF DUP8 DUP3 DUP9 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xD00 DUP8 DUP3 DUP9 ADD PUSH2 0xB5B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD21 JUMPI PUSH2 0xD20 PUSH2 0xA1C JUMP JUMPDEST JUMPDEST PUSH2 0xD2D DUP8 DUP3 DUP9 ADD PUSH2 0xC88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0xD42 DUP2 PUSH2 0xA21 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD5D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6E DUP3 PUSH2 0xADC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD7E DUP2 PUSH2 0xD63 JUMP JUMPDEST DUP2 EQ PUSH2 0xD89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9B DUP2 PUSH2 0xD75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xDBD JUMPI PUSH2 0xDBC PUSH2 0xA17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDCB DUP9 DUP3 DUP10 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xDDC DUP9 DUP3 DUP10 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xDED DUP9 DUP3 DUP10 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xDFE DUP9 DUP3 DUP10 ADD PUSH2 0xB5B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xE0F DUP9 DUP3 DUP10 ADD PUSH2 0xB5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE37 JUMPI PUSH2 0xE36 PUSH2 0xB8B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE60 PUSH2 0xE5B DUP5 PUSH2 0xE1C JUMP JUMPDEST PUSH2 0xBEB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xE83 JUMPI PUSH2 0xE82 PUSH2 0xE48 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEAC JUMPI DUP1 PUSH2 0xE98 DUP9 DUP3 PUSH2 0xB25 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE85 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xECB JUMPI PUSH2 0xECA PUSH2 0xB70 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xEDB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xE4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xEFF JUMPI PUSH2 0xEFE PUSH2 0xB8B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF23 PUSH2 0xF1E DUP5 PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0xBEB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xF46 JUMPI PUSH2 0xF45 PUSH2 0xE48 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF6F JUMPI DUP1 PUSH2 0xF5B DUP9 DUP3 PUSH2 0xB5B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF48 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF8E JUMPI PUSH2 0xF8D PUSH2 0xB70 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF9E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xF10 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xFC2 JUMPI PUSH2 0xFC1 PUSH2 0xB8B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE9 DUP2 PUSH2 0xFD3 JUMP JUMPDEST DUP2 EQ PUSH2 0xFF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1006 DUP2 PUSH2 0xFE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x101F PUSH2 0x101A DUP5 PUSH2 0xFA7 JUMP JUMPDEST PUSH2 0xBEB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1042 JUMPI PUSH2 0x1041 PUSH2 0xE48 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x106B JUMPI DUP1 PUSH2 0x1057 DUP9 DUP3 PUSH2 0xFF7 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1044 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x108A JUMPI PUSH2 0x1089 PUSH2 0xB70 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x109A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x100C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x10BF JUMPI PUSH2 0x10BE PUSH2 0xA17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10CD DUP9 DUP3 DUP10 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x10DE DUP9 DUP3 DUP10 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10FF JUMPI PUSH2 0x10FE PUSH2 0xA1C JUMP JUMPDEST JUMPDEST PUSH2 0x110B DUP9 DUP3 DUP10 ADD PUSH2 0xEB6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0xA1C JUMP JUMPDEST JUMPDEST PUSH2 0x1138 DUP9 DUP3 DUP10 ADD PUSH2 0xF79 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1159 JUMPI PUSH2 0x1158 PUSH2 0xA1C JUMP JUMPDEST JUMPDEST PUSH2 0x1165 DUP9 DUP3 DUP10 ADD PUSH2 0x1075 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x117B DUP2 PUSH2 0xAFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1196 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1172 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x11B8 JUMPI PUSH2 0x11B7 PUSH2 0xA17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11C6 DUP9 DUP3 DUP10 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x11D7 DUP9 DUP3 DUP10 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11F8 JUMPI PUSH2 0x11F7 PUSH2 0xA1C JUMP JUMPDEST JUMPDEST PUSH2 0x1204 DUP9 DUP3 DUP10 ADD PUSH2 0xF79 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1225 JUMPI PUSH2 0x1224 PUSH2 0xA1C JUMP JUMPDEST JUMPDEST PUSH2 0x1231 DUP9 DUP3 DUP10 ADD PUSH2 0xF79 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1252 JUMPI PUSH2 0x1251 PUSH2 0xA1C JUMP JUMPDEST JUMPDEST PUSH2 0x125E DUP9 DUP3 DUP10 ADD PUSH2 0xC88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1287 JUMPI PUSH2 0x1286 PUSH2 0xA17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1295 DUP9 DUP3 DUP10 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x12A6 DUP9 DUP3 DUP10 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x12B7 DUP9 DUP3 DUP10 ADD PUSH2 0xB5B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x12C8 DUP9 DUP3 DUP10 ADD PUSH2 0xB5B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12E9 JUMPI PUSH2 0x12E8 PUSH2 0xA1C JUMP JUMPDEST JUMPDEST PUSH2 0x12F5 DUP9 DUP3 DUP10 ADD PUSH2 0xC88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1318 JUMPI PUSH2 0x1317 PUSH2 0xA17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1326 DUP5 DUP3 DUP6 ADD PUSH2 0xB25 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1354 PUSH2 0x134F PUSH2 0x134A DUP5 PUSH2 0xADC JUMP JUMPDEST PUSH2 0x132F JUMP JUMPDEST PUSH2 0xADC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1366 DUP3 PUSH2 0x1339 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1378 DUP3 PUSH2 0x135B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1388 DUP2 PUSH2 0x136D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1397 DUP2 PUSH2 0xB3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13B2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x13BF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x137F JUMP JUMPDEST PUSH2 0x13CC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x138E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x13DD DUP2 PUSH2 0xAA6 JUMP JUMPDEST DUP2 EQ PUSH2 0x13E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13FA DUP2 PUSH2 0x13D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1416 JUMPI PUSH2 0x1415 PUSH2 0xA17 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1424 DUP5 DUP3 DUP6 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206F6620746F6B656E7320746F2072656365697665722066 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x61696C6564000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149A PUSH1 0x25 DUP4 PUSH2 0x142D JUMP JUMPDEST SWAP2 POP PUSH2 0x14A5 DUP3 PUSH2 0x143E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14C9 DUP2 PUSH2 0x148D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x14E5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x14F2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x14FF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x138E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206F6620746F6B656E7320746F2053746174657220666169 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C65640000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1563 PUSH1 0x23 DUP4 PUSH2 0x142D JUMP JUMPDEST SWAP2 POP PUSH2 0x156E DUP3 PUSH2 0x1507 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1592 DUP2 PUSH2 0x1556 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206F662045544820746F207265636569766572206661696C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F5 PUSH1 0x22 DUP4 PUSH2 0x142D JUMP JUMPDEST SWAP2 POP PUSH2 0x1600 DUP3 PUSH2 0x1599 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1624 DUP2 PUSH2 0x15E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206F662045544820746F20537461746572206661696C6564 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1661 PUSH1 0x20 DUP4 PUSH2 0x142D JUMP JUMPDEST SWAP2 POP PUSH2 0x166C DUP3 PUSH2 0x162B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1690 DUP2 PUSH2 0x1654 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20696E666F732070726F76696465642061726520696E76616C6964 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16CD PUSH1 0x20 DUP4 PUSH2 0x142D JUMP JUMPDEST SWAP2 POP PUSH2 0x16D8 DUP3 PUSH2 0x1697 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16FC DUP2 PUSH2 0x16C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1757 PUSH2 0x1752 PUSH2 0x174D DUP5 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x132F JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1767 DUP2 PUSH2 0x173C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x3078303000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B4 PUSH1 0x4 DUP4 PUSH2 0x176D JUMP JUMPDEST SWAP2 POP PUSH2 0x17BF DUP3 PUSH2 0x177E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x17DF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x17EC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x17F9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x138E JUMP JUMPDEST PUSH2 0x1806 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x175E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1817 DUP2 PUSH2 0x17A7 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x185C DUP3 PUSH2 0xB3A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x188E JUMPI PUSH2 0x188D PUSH2 0x1822 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18CF PUSH1 0x20 DUP4 PUSH2 0x142D JUMP JUMPDEST SWAP2 POP PUSH2 0x18DA DUP3 PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18FE DUP2 PUSH2 0x18C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1961 PUSH1 0x26 DUP4 PUSH2 0x142D JUMP JUMPDEST SWAP2 POP PUSH2 0x196C DUP3 PUSH2 0x1905 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1990 DUP2 PUSH2 0x1954 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB SELFBALANCE SIGNEXTEND SWAP3 0xE6 SELFDESTRUCT DIV 0x2A 0xDF 0x21 0x4F 0xED DUP13 SHR CODESIZE BALANCE MLOAD 0x5C 0xCE PUSH10 0x8648DD0B54C4E977A817 OR PUSH23 0x64736F6C634300080E0033000000000000000000000000 ",
							"sourceMap": "430:1887:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;588:200:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;625:705:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1427:887;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;:::i;:::-;;1036:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;724:247:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;499:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;387:221:4;489:4;527:34;512:49;;;:11;:49;;;;:89;;;;565:36;589:11;565:23;:36::i;:::-;512:89;505:96;;387:221;;;:::o;588:200:8:-;726:6;751:30;;;744:37;;588:200;;;;;;:::o;625:705:12:-;815:1;795:22;;:8;:22;;;790:534;;846:8;839:29;;;884:4;904:2;923:4;839:100;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;831:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;1008:8;1001:29;;;1046:4;1066:7;:5;:7::i;:::-;1090:4;1001:105;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;993:153;;;;;;;;;;;;:::i;:::-;;;;;;;;;790:534;;;1179:2;:7;;:13;1187:4;1179:13;;;;;;;;;;;;;;;;;;;;;;;1171:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1259:7;:5;:7::i;:::-;1251:21;;:27;1273:4;1251:27;;;;;;;;;;;;;;;;;;;;;;;1243:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;790:534;625:705;;;;;:::o;1427:887::-;1644:14;1661:15;:22;1644:39;;1711:15;:22;1701:6;:32;:70;;;;;1765:6;1737:17;:24;:34;1701:70;1693:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;1822:9;1818:489;1841:6;1837:1;:10;1818:489;;;1896:1;1872:17;1890:1;1872:20;;;;;;;;:::i;:::-;;;;;;;;:25;;;1867:440;;1924:15;1940:1;1924:18;;;;;;;;:::i;:::-;;;;;;;;1916:44;;;1982:4;2008:2;2032:15;2048:1;2032:18;;;;;;;;:::i;:::-;;;;;;;;1916:152;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1867:440;;;2112:15;2128:1;2112:18;;;;;;;;:::i;:::-;;;;;;;;2103:45;;;2170:4;2196:2;2220:15;2236:1;2220:18;;;;;;;;:::i;:::-;;;;;;;;2260:1;2103:204;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1867:440;1849:3;;;;:::i;:::-;;;1818:489;;;;1634:680;1427:887;;;;;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;724:247:3:-;903:6;928:36;;;921:43;;724:247;;;;;;;:::o;499:219::-;655:6;680:31;;;673:38;;499:219;;;;;;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;::::0;1998:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;829:155:10:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;640:96:9:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:77::-;2062:7;2091:5;2080:16;;2025:77;;;:::o;2108:122::-;2181:24;2199:5;2181:24;:::i;:::-;2174:5;2171:35;2161:63;;2220:1;2217;2210:12;2161:63;2108:122;:::o;2236:139::-;2282:5;2320:6;2307:20;2298:29;;2336:33;2363:5;2336:33;:::i;:::-;2236:139;;;;:::o;2381:117::-;2490:1;2487;2480:12;2504:117;2613:1;2610;2603:12;2627:102;2668:6;2719:2;2715:7;2710:2;2703:5;2699:14;2695:28;2685:38;;2627:102;;;:::o;2735:180::-;2783:77;2780:1;2773:88;2880:4;2877:1;2870:15;2904:4;2901:1;2894:15;2921:281;3004:27;3026:4;3004:27;:::i;:::-;2996:6;2992:40;3134:6;3122:10;3119:22;3098:18;3086:10;3083:34;3080:62;3077:88;;;3145:18;;:::i;:::-;3077:88;3185:10;3181:2;3174:22;2964:238;2921:281;;:::o;3208:129::-;3242:6;3269:20;;:::i;:::-;3259:30;;3298:33;3326:4;3318:6;3298:33;:::i;:::-;3208:129;;;:::o;3343:307::-;3404:4;3494:18;3486:6;3483:30;3480:56;;;3516:18;;:::i;:::-;3480:56;3554:29;3576:6;3554:29;:::i;:::-;3546:37;;3638:4;3632;3628:15;3620:23;;3343:307;;;:::o;3656:154::-;3740:6;3735:3;3730;3717:30;3802:1;3793:6;3788:3;3784:16;3777:27;3656:154;;;:::o;3816:410::-;3893:5;3918:65;3934:48;3975:6;3934:48;:::i;:::-;3918:65;:::i;:::-;3909:74;;4006:6;3999:5;3992:21;4044:4;4037:5;4033:16;4082:3;4073:6;4068:3;4064:16;4061:25;4058:112;;;4089:79;;:::i;:::-;4058:112;4179:41;4213:6;4208:3;4203;4179:41;:::i;:::-;3899:327;3816:410;;;;;:::o;4245:338::-;4300:5;4349:3;4342:4;4334:6;4330:17;4326:27;4316:122;;4357:79;;:::i;:::-;4316:122;4474:6;4461:20;4499:78;4573:3;4565:6;4558:4;4550:6;4546:17;4499:78;:::i;:::-;4490:87;;4306:277;4245:338;;;;:::o;4589:943::-;4684:6;4692;4700;4708;4757:3;4745:9;4736:7;4732:23;4728:33;4725:120;;;4764:79;;:::i;:::-;4725:120;4884:1;4909:53;4954:7;4945:6;4934:9;4930:22;4909:53;:::i;:::-;4899:63;;4855:117;5011:2;5037:53;5082:7;5073:6;5062:9;5058:22;5037:53;:::i;:::-;5027:63;;4982:118;5139:2;5165:53;5210:7;5201:6;5190:9;5186:22;5165:53;:::i;:::-;5155:63;;5110:118;5295:2;5284:9;5280:18;5267:32;5326:18;5318:6;5315:30;5312:117;;;5348:79;;:::i;:::-;5312:117;5453:62;5507:7;5498:6;5487:9;5483:22;5453:62;:::i;:::-;5443:72;;5238:287;4589:943;;;;;;;:::o;5538:115::-;5623:23;5640:5;5623:23;:::i;:::-;5618:3;5611:36;5538:115;;:::o;5659:218::-;5750:4;5788:2;5777:9;5773:18;5765:26;;5801:69;5867:1;5856:9;5852:17;5843:6;5801:69;:::i;:::-;5659:218;;;;:::o;5883:104::-;5928:7;5957:24;5975:5;5957:24;:::i;:::-;5946:35;;5883:104;;;:::o;5993:138::-;6074:32;6100:5;6074:32;:::i;:::-;6067:5;6064:43;6054:71;;6121:1;6118;6111:12;6054:71;5993:138;:::o;6137:155::-;6191:5;6229:6;6216:20;6207:29;;6245:41;6280:5;6245:41;:::i;:::-;6137:155;;;;:::o;6298:927::-;6401:6;6409;6417;6425;6433;6482:3;6470:9;6461:7;6457:23;6453:33;6450:120;;;6489:79;;:::i;:::-;6450:120;6609:1;6634:53;6679:7;6670:6;6659:9;6655:22;6634:53;:::i;:::-;6624:63;;6580:117;6736:2;6762:61;6815:7;6806:6;6795:9;6791:22;6762:61;:::i;:::-;6752:71;;6707:126;6872:2;6898:53;6943:7;6934:6;6923:9;6919:22;6898:53;:::i;:::-;6888:63;;6843:118;7000:2;7026:53;7071:7;7062:6;7051:9;7047:22;7026:53;:::i;:::-;7016:63;;6971:118;7128:3;7155:53;7200:7;7191:6;7180:9;7176:22;7155:53;:::i;:::-;7145:63;;7099:119;6298:927;;;;;;;;:::o;7231:311::-;7308:4;7398:18;7390:6;7387:30;7384:56;;;7420:18;;:::i;:::-;7384:56;7470:4;7462:6;7458:17;7450:25;;7530:4;7524;7520:15;7512:23;;7231:311;;;:::o;7548:117::-;7657:1;7654;7647:12;7688:710;7784:5;7809:81;7825:64;7882:6;7825:64;:::i;:::-;7809:81;:::i;:::-;7800:90;;7910:5;7939:6;7932:5;7925:21;7973:4;7966:5;7962:16;7955:23;;8026:4;8018:6;8014:17;8006:6;8002:30;8055:3;8047:6;8044:15;8041:122;;;8074:79;;:::i;:::-;8041:122;8189:6;8172:220;8206:6;8201:3;8198:15;8172:220;;;8281:3;8310:37;8343:3;8331:10;8310:37;:::i;:::-;8305:3;8298:50;8377:4;8372:3;8368:14;8361:21;;8248:144;8232:4;8227:3;8223:14;8216:21;;8172:220;;;8176:21;7790:608;;7688:710;;;;;:::o;8421:370::-;8492:5;8541:3;8534:4;8526:6;8522:17;8518:27;8508:122;;8549:79;;:::i;:::-;8508:122;8666:6;8653:20;8691:94;8781:3;8773:6;8766:4;8758:6;8754:17;8691:94;:::i;:::-;8682:103;;8498:293;8421:370;;;;:::o;8797:311::-;8874:4;8964:18;8956:6;8953:30;8950:56;;;8986:18;;:::i;:::-;8950:56;9036:4;9028:6;9024:17;9016:25;;9096:4;9090;9086:15;9078:23;;8797:311;;;:::o;9131:710::-;9227:5;9252:81;9268:64;9325:6;9268:64;:::i;:::-;9252:81;:::i;:::-;9243:90;;9353:5;9382:6;9375:5;9368:21;9416:4;9409:5;9405:16;9398:23;;9469:4;9461:6;9457:17;9449:6;9445:30;9498:3;9490:6;9487:15;9484:122;;;9517:79;;:::i;:::-;9484:122;9632:6;9615:220;9649:6;9644:3;9641:15;9615:220;;;9724:3;9753:37;9786:3;9774:10;9753:37;:::i;:::-;9748:3;9741:50;9820:4;9815:3;9811:14;9804:21;;9691:144;9675:4;9670:3;9666:14;9659:21;;9615:220;;;9619:21;9233:608;;9131:710;;;;;:::o;9864:370::-;9935:5;9984:3;9977:4;9969:6;9965:17;9961:27;9951:122;;9992:79;;:::i;:::-;9951:122;10109:6;10096:20;10134:94;10224:3;10216:6;10209:4;10201:6;10197:17;10134:94;:::i;:::-;10125:103;;9941:293;9864:370;;;;:::o;10240:309::-;10315:4;10405:18;10397:6;10394:30;10391:56;;;10427:18;;:::i;:::-;10391:56;10477:4;10469:6;10465:17;10457:25;;10537:4;10531;10527:15;10519:23;;10240:309;;;:::o;10555:86::-;10590:7;10630:4;10623:5;10619:16;10608:27;;10555:86;;;:::o;10647:118::-;10718:22;10734:5;10718:22;:::i;:::-;10711:5;10708:33;10698:61;;10755:1;10752;10745:12;10698:61;10647:118;:::o;10771:135::-;10815:5;10853:6;10840:20;10831:29;;10869:31;10894:5;10869:31;:::i;:::-;10771:135;;;;:::o;10927:704::-;11021:5;11046:79;11062:62;11117:6;11062:62;:::i;:::-;11046:79;:::i;:::-;11037:88;;11145:5;11174:6;11167:5;11160:21;11208:4;11201:5;11197:16;11190:23;;11261:4;11253:6;11249:17;11241:6;11237:30;11290:3;11282:6;11279:15;11276:122;;;11309:79;;:::i;:::-;11276:122;11424:6;11407:218;11441:6;11436:3;11433:15;11407:218;;;11516:3;11545:35;11576:3;11564:10;11545:35;:::i;:::-;11540:3;11533:48;11610:4;11605:3;11601:14;11594:21;;11483:142;11467:4;11462:3;11458:14;11451:21;;11407:218;;;11411:21;11027:604;;10927:704;;;;;:::o;11652:366::-;11721:5;11770:3;11763:4;11755:6;11751:17;11747:27;11737:122;;11778:79;;:::i;:::-;11737:122;11895:6;11882:20;11920:92;12008:3;12000:6;11993:4;11985:6;11981:17;11920:92;:::i;:::-;11911:101;;11727:291;11652:366;;;;:::o;12024:1537::-;12192:6;12200;12208;12216;12224;12273:3;12261:9;12252:7;12248:23;12244:33;12241:120;;;12280:79;;:::i;:::-;12241:120;12400:1;12425:53;12470:7;12461:6;12450:9;12446:22;12425:53;:::i;:::-;12415:63;;12371:117;12527:2;12553:53;12598:7;12589:6;12578:9;12574:22;12553:53;:::i;:::-;12543:63;;12498:118;12683:2;12672:9;12668:18;12655:32;12714:18;12706:6;12703:30;12700:117;;;12736:79;;:::i;:::-;12700:117;12841:78;12911:7;12902:6;12891:9;12887:22;12841:78;:::i;:::-;12831:88;;12626:303;12996:2;12985:9;12981:18;12968:32;13027:18;13019:6;13016:30;13013:117;;;13049:79;;:::i;:::-;13013:117;13154:78;13224:7;13215:6;13204:9;13200:22;13154:78;:::i;:::-;13144:88;;12939:303;13309:3;13298:9;13294:19;13281:33;13341:18;13333:6;13330:30;13327:117;;;13363:79;;:::i;:::-;13327:117;13468:76;13536:7;13527:6;13516:9;13512:22;13468:76;:::i;:::-;13458:86;;13252:302;12024:1537;;;;;;;;:::o;13567:118::-;13654:24;13672:5;13654:24;:::i;:::-;13649:3;13642:37;13567:118;;:::o;13691:222::-;13784:4;13822:2;13811:9;13807:18;13799:26;;13835:71;13903:1;13892:9;13888:17;13879:6;13835:71;:::i;:::-;13691:222;;;;:::o;13919:1509::-;14073:6;14081;14089;14097;14105;14154:3;14142:9;14133:7;14129:23;14125:33;14122:120;;;14161:79;;:::i;:::-;14122:120;14281:1;14306:53;14351:7;14342:6;14331:9;14327:22;14306:53;:::i;:::-;14296:63;;14252:117;14408:2;14434:53;14479:7;14470:6;14459:9;14455:22;14434:53;:::i;:::-;14424:63;;14379:118;14564:2;14553:9;14549:18;14536:32;14595:18;14587:6;14584:30;14581:117;;;14617:79;;:::i;:::-;14581:117;14722:78;14792:7;14783:6;14772:9;14768:22;14722:78;:::i;:::-;14712:88;;14507:303;14877:2;14866:9;14862:18;14849:32;14908:18;14900:6;14897:30;14894:117;;;14930:79;;:::i;:::-;14894:117;15035:78;15105:7;15096:6;15085:9;15081:22;15035:78;:::i;:::-;15025:88;;14820:303;15190:3;15179:9;15175:19;15162:33;15222:18;15214:6;15211:30;15208:117;;;15244:79;;:::i;:::-;15208:117;15349:62;15403:7;15394:6;15383:9;15379:22;15349:62;:::i;:::-;15339:72;;15133:288;13919:1509;;;;;;;;:::o;15434:1089::-;15538:6;15546;15554;15562;15570;15619:3;15607:9;15598:7;15594:23;15590:33;15587:120;;;15626:79;;:::i;:::-;15587:120;15746:1;15771:53;15816:7;15807:6;15796:9;15792:22;15771:53;:::i;:::-;15761:63;;15717:117;15873:2;15899:53;15944:7;15935:6;15924:9;15920:22;15899:53;:::i;:::-;15889:63;;15844:118;16001:2;16027:53;16072:7;16063:6;16052:9;16048:22;16027:53;:::i;:::-;16017:63;;15972:118;16129:2;16155:53;16200:7;16191:6;16180:9;16176:22;16155:53;:::i;:::-;16145:63;;16100:118;16285:3;16274:9;16270:19;16257:33;16317:18;16309:6;16306:30;16303:117;;;16339:79;;:::i;:::-;16303:117;16444:62;16498:7;16489:6;16478:9;16474:22;16444:62;:::i;:::-;16434:72;;16228:288;15434:1089;;;;;;;;:::o;16529:329::-;16588:6;16637:2;16625:9;16616:7;16612:23;16608:32;16605:119;;;16643:79;;:::i;:::-;16605:119;16763:1;16788:53;16833:7;16824:6;16813:9;16809:22;16788:53;:::i;:::-;16778:63;;16734:117;16529:329;;;;:::o;16864:60::-;16892:3;16913:5;16906:12;;16864:60;;;:::o;16930:142::-;16980:9;17013:53;17031:34;17040:24;17058:5;17040:24;:::i;:::-;17031:34;:::i;:::-;17013:53;:::i;:::-;17000:66;;16930:142;;;:::o;17078:126::-;17128:9;17161:37;17192:5;17161:37;:::i;:::-;17148:50;;17078:126;;;:::o;17210:134::-;17268:9;17301:37;17332:5;17301:37;:::i;:::-;17288:50;;17210:134;;;:::o;17350:147::-;17445:45;17484:5;17445:45;:::i;:::-;17440:3;17433:58;17350:147;;:::o;17503:118::-;17590:24;17608:5;17590:24;:::i;:::-;17585:3;17578:37;17503:118;;:::o;17627:458::-;17784:4;17822:2;17811:9;17807:18;17799:26;;17835:71;17903:1;17892:9;17888:17;17879:6;17835:71;:::i;:::-;17916:80;17992:2;17981:9;17977:18;17968:6;17916:80;:::i;:::-;18006:72;18074:2;18063:9;18059:18;18050:6;18006:72;:::i;:::-;17627:458;;;;;;:::o;18091:116::-;18161:21;18176:5;18161:21;:::i;:::-;18154:5;18151:32;18141:60;;18197:1;18194;18187:12;18141:60;18091:116;:::o;18213:137::-;18267:5;18298:6;18292:13;18283:22;;18314:30;18338:5;18314:30;:::i;:::-;18213:137;;;;:::o;18356:345::-;18423:6;18472:2;18460:9;18451:7;18447:23;18443:32;18440:119;;;18478:79;;:::i;:::-;18440:119;18598:1;18623:61;18676:7;18667:6;18656:9;18652:22;18623:61;:::i;:::-;18613:71;;18569:125;18356:345;;;;:::o;18707:169::-;18791:11;18825:6;18820:3;18813:19;18865:4;18860:3;18856:14;18841:29;;18707:169;;;;:::o;18882:224::-;19022:34;19018:1;19010:6;19006:14;18999:58;19091:7;19086:2;19078:6;19074:15;19067:32;18882:224;:::o;19112:366::-;19254:3;19275:67;19339:2;19334:3;19275:67;:::i;:::-;19268:74;;19351:93;19440:3;19351:93;:::i;:::-;19469:2;19464:3;19460:12;19453:19;;19112:366;;;:::o;19484:419::-;19650:4;19688:2;19677:9;19673:18;19665:26;;19737:9;19731:4;19727:20;19723:1;19712:9;19708:17;19701:47;19765:131;19891:4;19765:131;:::i;:::-;19757:139;;19484:419;;;:::o;19909:442::-;20058:4;20096:2;20085:9;20081:18;20073:26;;20109:71;20177:1;20166:9;20162:17;20153:6;20109:71;:::i;:::-;20190:72;20258:2;20247:9;20243:18;20234:6;20190:72;:::i;:::-;20272;20340:2;20329:9;20325:18;20316:6;20272:72;:::i;:::-;19909:442;;;;;;:::o;20357:222::-;20497:34;20493:1;20485:6;20481:14;20474:58;20566:5;20561:2;20553:6;20549:15;20542:30;20357:222;:::o;20585:366::-;20727:3;20748:67;20812:2;20807:3;20748:67;:::i;:::-;20741:74;;20824:93;20913:3;20824:93;:::i;:::-;20942:2;20937:3;20933:12;20926:19;;20585:366;;;:::o;20957:419::-;21123:4;21161:2;21150:9;21146:18;21138:26;;21210:9;21204:4;21200:20;21196:1;21185:9;21181:17;21174:47;21238:131;21364:4;21238:131;:::i;:::-;21230:139;;20957:419;;;:::o;21382:221::-;21522:34;21518:1;21510:6;21506:14;21499:58;21591:4;21586:2;21578:6;21574:15;21567:29;21382:221;:::o;21609:366::-;21751:3;21772:67;21836:2;21831:3;21772:67;:::i;:::-;21765:74;;21848:93;21937:3;21848:93;:::i;:::-;21966:2;21961:3;21957:12;21950:19;;21609:366;;;:::o;21981:419::-;22147:4;22185:2;22174:9;22170:18;22162:26;;22234:9;22228:4;22224:20;22220:1;22209:9;22205:17;22198:47;22262:131;22388:4;22262:131;:::i;:::-;22254:139;;21981:419;;;:::o;22406:182::-;22546:34;22542:1;22534:6;22530:14;22523:58;22406:182;:::o;22594:366::-;22736:3;22757:67;22821:2;22816:3;22757:67;:::i;:::-;22750:74;;22833:93;22922:3;22833:93;:::i;:::-;22951:2;22946:3;22942:12;22935:19;;22594:366;;;:::o;22966:419::-;23132:4;23170:2;23159:9;23155:18;23147:26;;23219:9;23213:4;23209:20;23205:1;23194:9;23190:17;23183:47;23247:131;23373:4;23247:131;:::i;:::-;23239:139;;22966:419;;;:::o;23391:182::-;23531:34;23527:1;23519:6;23515:14;23508:58;23391:182;:::o;23579:366::-;23721:3;23742:67;23806:2;23801:3;23742:67;:::i;:::-;23735:74;;23818:93;23907:3;23818:93;:::i;:::-;23936:2;23931:3;23927:12;23920:19;;23579:366;;;:::o;23951:419::-;24117:4;24155:2;24144:9;24140:18;24132:26;;24204:9;24198:4;24194:20;24190:1;24179:9;24175:17;24168:47;24232:131;24358:4;24232:131;:::i;:::-;24224:139;;23951:419;;;:::o;24376:180::-;24424:77;24421:1;24414:88;24521:4;24518:1;24511:15;24545:4;24542:1;24535:15;24562:85;24607:7;24636:5;24625:16;;24562:85;;;:::o;24653:158::-;24711:9;24744:61;24762:42;24771:32;24797:5;24771:32;:::i;:::-;24762:42;:::i;:::-;24744:61;:::i;:::-;24731:74;;24653:158;;;:::o;24817:147::-;24912:45;24951:5;24912:45;:::i;:::-;24907:3;24900:58;24817:147;;:::o;24970:168::-;25053:11;25087:6;25082:3;25075:19;25127:4;25122:3;25118:14;25103:29;;24970:168;;;;:::o;25144:154::-;25284:6;25280:1;25272:6;25268:14;25261:30;25144:154;:::o;25304:363::-;25445:3;25466:65;25529:1;25524:3;25466:65;:::i;:::-;25459:72;;25540:93;25629:3;25540:93;:::i;:::-;25658:2;25653:3;25649:12;25642:19;;25304:363;;;:::o;25673:875::-;25958:4;25996:3;25985:9;25981:19;25973:27;;26010:71;26078:1;26067:9;26063:17;26054:6;26010:71;:::i;:::-;26091:72;26159:2;26148:9;26144:18;26135:6;26091:72;:::i;:::-;26173;26241:2;26230:9;26226:18;26217:6;26173:72;:::i;:::-;26255:80;26331:2;26320:9;26316:18;26307:6;26255:80;:::i;:::-;26383:9;26377:4;26373:20;26367:3;26356:9;26352:19;26345:49;26411:130;26536:4;26411:130;:::i;:::-;26403:138;;25673:875;;;;;;;:::o;26554:180::-;26602:77;26599:1;26592:88;26699:4;26696:1;26689:15;26723:4;26720:1;26713:15;26740:233;26779:3;26802:24;26820:5;26802:24;:::i;:::-;26793:33;;26848:66;26841:5;26838:77;26835:103;;26918:18;;:::i;:::-;26835:103;26965:1;26958:5;26954:13;26947:20;;26740:233;;;:::o;26979:182::-;27119:34;27115:1;27107:6;27103:14;27096:58;26979:182;:::o;27167:366::-;27309:3;27330:67;27394:2;27389:3;27330:67;:::i;:::-;27323:74;;27406:93;27495:3;27406:93;:::i;:::-;27524:2;27519:3;27515:12;27508:19;;27167:366;;;:::o;27539:419::-;27705:4;27743:2;27732:9;27728:18;27720:26;;27792:9;27786:4;27782:20;27778:1;27767:9;27763:17;27756:47;27820:131;27946:4;27820:131;:::i;:::-;27812:139;;27539:419;;;:::o;27964:225::-;28104:34;28100:1;28092:6;280.8.15;28081:58;28173:8;28168:2;28160:6;28156:15;28149:33;27964:225;:::o;28195:366::-;28337:3;28358:67;28422:2;28417:3;28358:67;:::i;:::-;28351:74;;28434:93;28523:3;28434:93;:::i;:::-;28552:2;28547:3;28543:12;28536:19;;28195:366;;;:::o;28567:419::-;28733:4;28771:2;28760:9;28756:18;28748:26;;28820:9;28814:4;28810:20;28806:1;28795:9;28791:17;28784:47;28848:131;28974:4;28848:131;:::i;:::-;28840:139;;28567:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1321000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "2544",
								"renounceOwnership()": "30374",
								"supportsInterface(bytes4)": "728",
								"transferItems(address,address,address[],uint256[],uint8[])": "infinite",
								"transferOwnership(address)": "30808",
								"transferTokens(address,address,address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 430,
									"end": 2317,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bb470b92e6ff042adf214fed8c1c3831515cce698648dd0b54c4e977a817177664736f6c634300080e0033",
									".code": [
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 12,
											"value": "BC197C81"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 12,
											"value": "F23A6E61"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 12,
											"value": "150B7A02"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 12,
											"value": "2E3F4A5D"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 12,
											"value": "407299D7"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 625,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 625,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1427,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1036,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1036,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 561,
											"name": "PUSH",
											"source": 4,
											"value": "4E2312E000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 512,
											"end": 523,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 512,
											"end": 601,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 512,
											"end": 601,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 565,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 589,
											"end": 600,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 565,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 565,
											"end": 601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 512,
											"end": 601,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 601,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 744,
											"end": 781,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 744,
											"end": 781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 815,
											"end": 816,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 817,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 795,
											"end": 817,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 795,
											"end": 803,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 795,
											"end": 817,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 795,
											"end": 817,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 795,
											"end": 817,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 790,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 790,
											"end": 1324,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 846,
											"end": 854,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 839,
											"end": 868,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 868,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 839,
											"end": 868,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 884,
											"end": 888,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 904,
											"end": 906,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 923,
											"end": 927,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 839,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 839,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 839,
											"end": 939,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 831,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 831,
											"end": 981,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 831,
											"end": 981,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 831,
											"end": 981,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 831,
											"end": 981,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 831,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 831,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 831,
											"end": 981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 831,
											"end": 981,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 831,
											"end": 981,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 831,
											"end": 981,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 831,
											"end": 981,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 831,
											"end": 981,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 831,
											"end": 981,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 831,
											"end": 981,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 831,
											"end": 981,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1008,
											"end": 1016,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1030,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1030,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1030,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 1046,
											"end": 1050,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 1066,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 1066,
											"end": 1073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1073,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 1066,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1090,
											"end": 1094,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 1001,
											"end": 1106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1001,
											"end": 1106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 993,
											"end": 1146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 790,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 790,
											"end": 1324,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 790,
											"end": 1324,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 790,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1181,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1179,
											"end": 1186,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "PUSH",
											"source": 12,
											"value": "8FC"
										},
										{
											"begin": 1187,
											"end": 1191,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 1171,
											"end": 1231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1259,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 1259,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 1259,
											"end": 1266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1259,
											"end": 1266,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 1259,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1272,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1251,
											"end": 1272,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "PUSH",
											"source": 12,
											"value": "8FC"
										},
										{
											"begin": 1273,
											"end": 1277,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 1243,
											"end": 1315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 790,
											"end": 1324,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 790,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 625,
											"end": 1330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1658,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1676,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1661,
											"end": 1683,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1683,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1644,
											"end": 1683,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1711,
											"end": 1733,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1707,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1733,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1765,
											"end": 1771,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1737,
											"end": 1754,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1737,
											"end": 1761,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1737,
											"end": 1771,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 1693,
											"end": 1808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1822,
											"end": 1831,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1841,
											"end": 1847,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1837,
											"end": 1838,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1837,
											"end": 1847,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1889,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1891,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 1872,
											"end": 1892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1939,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 1924,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 1960,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1916,
											"end": 1960,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 1960,
											"name": "PUSH",
											"source": 12,
											"value": "42842E0E"
										},
										{
											"begin": 1982,
											"end": 1986,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2008,
											"end": 2010,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2048,
											"end": 2049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 2032,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 1916,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "tag",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2127,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 2112,
											"end": 2130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "tag",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "PUSH",
											"source": 12,
											"value": "F242432A"
										},
										{
											"begin": 2170,
											"end": 2174,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2196,
											"end": 2198,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 2220,
											"end": 2238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2260,
											"end": 2261,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 2103,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 1849,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1634,
											"end": 2314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1259,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1759,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1732,
											"end": 1762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 903,
											"end": 909,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 3,
											"value": "BC197C81"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 921,
											"end": 964,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 655,
											"end": 661,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 3,
											"value": "F23A6E61"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 673,
											"end": 711,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 673,
											"end": 711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1259,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1998,
											"end": 2071,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2100,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2081,
											"end": 2109,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2062,
											"end": 2069,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2096,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2080,
											"end": 2096,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2080,
											"end": 2096,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2025,
											"end": 2102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 2199,
											"end": 2204,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 2181,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2174,
											"end": 2179,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2171,
											"end": 2206,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2221,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2210,
											"end": 2222,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2108,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2282,
											"end": 2287,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 2363,
											"end": 2368,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 2336,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2381,
											"end": 2498,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 2381,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2490,
											"end": 2491,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2504,
											"end": 2621,
											"name": "tag",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 2504,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2613,
											"end": 2614,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2611,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2627,
											"end": 2729,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 2627,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2668,
											"end": 2674,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2721,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2715,
											"end": 2722,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2710,
											"end": 2712,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2703,
											"end": 2708,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2699,
											"end": 2713,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2695,
											"end": 2723,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2685,
											"end": 2723,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2685,
											"end": 2723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2627,
											"end": 2729,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2627,
											"end": 2729,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2627,
											"end": 2729,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2627,
											"end": 2729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2735,
											"end": 2915,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 2735,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2783,
											"end": 2860,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2780,
											"end": 2781,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2861,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2880,
											"end": 2884,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2877,
											"end": 2878,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2904,
											"end": 2908,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2921,
											"end": 3202,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 2921,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3004,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 3026,
											"end": 3030,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3004,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 3004,
											"end": 3031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3004,
											"end": 3031,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 3004,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2996,
											"end": 3002,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2992,
											"end": 3032,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3122,
											"end": 3132,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3119,
											"end": 3141,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3098,
											"end": 3116,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3086,
											"end": 3096,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3083,
											"end": 3117,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3080,
											"end": 3142,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3077,
											"end": 3165,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3077,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 3077,
											"end": 3165,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3145,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 3145,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 3145,
											"end": 3163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3145,
											"end": 3163,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 3145,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3077,
											"end": 3165,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 3077,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3185,
											"end": 3195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3181,
											"end": 3183,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3174,
											"end": 3196,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3202,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2921,
											"end": 3202,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2921,
											"end": 3202,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2921,
											"end": 3202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3208,
											"end": 3337,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 3208,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3242,
											"end": 3248,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 3269,
											"end": 3289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3298,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 3326,
											"end": 3330,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3318,
											"end": 3324,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3298,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 3298,
											"end": 3331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3298,
											"end": 3331,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 3298,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3208,
											"end": 3337,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3208,
											"end": 3337,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3208,
											"end": 3337,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3208,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3650,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 3343,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3404,
											"end": 3408,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3512,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3486,
											"end": 3492,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3483,
											"end": 3513,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3480,
											"end": 3536,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3480,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 3480,
											"end": 3536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3516,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 3516,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 3516,
											"end": 3534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3516,
											"end": 3534,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 3516,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3480,
											"end": 3536,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 3480,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 3576,
											"end": 3582,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 3554,
											"end": 3583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3583,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 3554,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3546,
											"end": 3583,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3546,
											"end": 3583,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3638,
											"end": 3642,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3632,
											"end": 3636,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3628,
											"end": 3643,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3620,
											"end": 3643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3620,
											"end": 3643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3650,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3650,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3650,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3656,
											"end": 3810,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 3656,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3740,
											"end": 3746,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3735,
											"end": 3738,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3730,
											"end": 3733,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3747,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 3803,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3793,
											"end": 3799,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3788,
											"end": 3791,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3784,
											"end": 3800,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3777,
											"end": 3804,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3656,
											"end": 3810,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3656,
											"end": 3810,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3656,
											"end": 3810,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3656,
											"end": 3810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3816,
											"end": 4226,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 3816,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3893,
											"end": 3898,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3918,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 3934,
											"end": 3982,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 3975,
											"end": 3981,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3982,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 3934,
											"end": 3982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3982,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 3934,
											"end": 3982,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 3918,
											"end": 3983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3983,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 3918,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 3983,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 3983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4006,
											"end": 4012,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3999,
											"end": 4004,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3992,
											"end": 4013,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4044,
											"end": 4048,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4037,
											"end": 4042,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4033,
											"end": 4049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4082,
											"end": 4085,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4068,
											"end": 4071,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4064,
											"end": 4080,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4061,
											"end": 4086,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4058,
											"end": 4170,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4058,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 4058,
											"end": 4170,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4089,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 4089,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 4089,
											"end": 4168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4089,
											"end": 4168,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 4089,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4058,
											"end": 4170,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 4058,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 4213,
											"end": 4219,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4208,
											"end": 4211,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4206,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 4179,
											"end": 4220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4220,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 4179,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3899,
											"end": 4226,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3816,
											"end": 4226,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3816,
											"end": 4226,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3816,
											"end": 4226,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3816,
											"end": 4226,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3816,
											"end": 4226,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3816,
											"end": 4226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4245,
											"end": 4583,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 4245,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4300,
											"end": 4305,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4352,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4342,
											"end": 4346,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4334,
											"end": 4340,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4330,
											"end": 4347,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4326,
											"end": 4353,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4316,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 4316,
											"end": 4438,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4357,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 4357,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 4357,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4357,
											"end": 4436,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 4357,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4316,
											"end": 4438,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 4316,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4474,
											"end": 4480,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4461,
											"end": 4481,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4499,
											"end": 4577,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 4573,
											"end": 4576,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4565,
											"end": 4571,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4558,
											"end": 4562,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4550,
											"end": 4556,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4546,
											"end": 4563,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4499,
											"end": 4577,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 4499,
											"end": 4577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4499,
											"end": 4577,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 4499,
											"end": 4577,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4490,
											"end": 4577,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4490,
											"end": 4577,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4583,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4245,
											"end": 4583,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4245,
											"end": 4583,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4245,
											"end": 4583,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4245,
											"end": 4583,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4245,
											"end": 4583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 5532,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 4589,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4684,
											"end": 4690,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4692,
											"end": 4698,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4700,
											"end": 4706,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4708,
											"end": 4714,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4757,
											"end": 4760,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 4745,
											"end": 4754,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4736,
											"end": 4743,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 4755,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4728,
											"end": 4761,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4725,
											"end": 4845,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4725,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 4725,
											"end": 4845,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4764,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 4764,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 4764,
											"end": 4843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4764,
											"end": 4843,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 4764,
											"end": 4843,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4725,
											"end": 4845,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 4725,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4885,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4909,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 4954,
											"end": 4961,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4945,
											"end": 4951,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4934,
											"end": 4943,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4930,
											"end": 4952,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 4909,
											"end": 4962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 4962,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 4909,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 4962,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 4962,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4855,
											"end": 4972,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5011,
											"end": 5013,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5037,
											"end": 5090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 5082,
											"end": 5089,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5073,
											"end": 5079,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5062,
											"end": 5071,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5037,
											"end": 5090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 5037,
											"end": 5090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5037,
											"end": 5090,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 5037,
											"end": 5090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5027,
											"end": 5090,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5027,
											"end": 5090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 5100,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5139,
											"end": 5141,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5165,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 5210,
											"end": 5217,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5201,
											"end": 5207,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5190,
											"end": 5199,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5186,
											"end": 5208,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5165,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 5165,
											"end": 5218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5165,
											"end": 5218,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 5165,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5155,
											"end": 5218,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5155,
											"end": 5218,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5110,
											"end": 5228,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5295,
											"end": 5297,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5280,
											"end": 5298,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5326,
											"end": 5344,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5318,
											"end": 5324,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5315,
											"end": 5345,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5312,
											"end": 5429,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5312,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 5312,
											"end": 5429,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5348,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 5348,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 5348,
											"end": 5427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5348,
											"end": 5427,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 5348,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5312,
											"end": 5429,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 5312,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5453,
											"end": 5515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 5507,
											"end": 5514,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5498,
											"end": 5504,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5487,
											"end": 5496,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5483,
											"end": 5505,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5453,
											"end": 5515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 5453,
											"end": 5515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5453,
											"end": 5515,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 5453,
											"end": 5515,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5443,
											"end": 5515,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5443,
											"end": 5515,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5238,
											"end": 5525,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 5532,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 5532,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 5532,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 5532,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 5532,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 5532,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 5532,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 5532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5538,
											"end": 5653,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 5538,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5623,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 5640,
											"end": 5645,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5623,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 5623,
											"end": 5646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5623,
											"end": 5646,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 5623,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5618,
											"end": 5621,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5611,
											"end": 5647,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5538,
											"end": 5653,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5538,
											"end": 5653,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5538,
											"end": 5653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5659,
											"end": 5877,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5659,
											"end": 5877,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5750,
											"end": 5754,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 5790,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5777,
											"end": 5786,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5773,
											"end": 5791,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5765,
											"end": 5791,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5765,
											"end": 5791,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5801,
											"end": 5870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 5867,
											"end": 5868,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5856,
											"end": 5865,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5852,
											"end": 5869,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 5849,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5801,
											"end": 5870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 5801,
											"end": 5870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5801,
											"end": 5870,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 5801,
											"end": 5870,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5659,
											"end": 5877,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5659,
											"end": 5877,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5659,
											"end": 5877,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5659,
											"end": 5877,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5659,
											"end": 5877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5883,
											"end": 5987,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 5883,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5928,
											"end": 5935,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5957,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 5975,
											"end": 5980,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5957,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 5957,
											"end": 5981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5957,
											"end": 5981,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 5957,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5946,
											"end": 5981,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5946,
											"end": 5981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5883,
											"end": 5987,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5883,
											"end": 5987,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5883,
											"end": 5987,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5883,
											"end": 5987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5993,
											"end": 6131,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 5993,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6074,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 6100,
											"end": 6105,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6074,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 6074,
											"end": 6106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6074,
											"end": 6106,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 6074,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6067,
											"end": 6072,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6064,
											"end": 6107,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6054,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 6054,
											"end": 6125,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6121,
											"end": 6122,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6118,
											"end": 6119,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6111,
											"end": 6123,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6054,
											"end": 6125,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 6054,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5993,
											"end": 6131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5993,
											"end": 6131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6137,
											"end": 6292,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 6137,
											"end": 6292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6196,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6229,
											"end": 6235,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6216,
											"end": 6236,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6207,
											"end": 6236,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6207,
											"end": 6236,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6245,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 6280,
											"end": 6285,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6245,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 6245,
											"end": 6286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6245,
											"end": 6286,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 6245,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6137,
											"end": 6292,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6137,
											"end": 6292,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6137,
											"end": 6292,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6137,
											"end": 6292,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6137,
											"end": 6292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6298,
											"end": 7225,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 6298,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6409,
											"end": 6415,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6417,
											"end": 6423,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6425,
											"end": 6431,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6433,
											"end": 6439,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6482,
											"end": 6485,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 6470,
											"end": 6479,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6461,
											"end": 6468,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6480,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6453,
											"end": 6486,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6450,
											"end": 6570,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6450,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 6450,
											"end": 6570,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6489,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 6489,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 6489,
											"end": 6568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6489,
											"end": 6568,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 6489,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6450,
											"end": 6570,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 6450,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6609,
											"end": 6610,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6634,
											"end": 6687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 6679,
											"end": 6686,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6670,
											"end": 6676,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6668,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 6655,
											"end": 6677,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6634,
											"end": 6687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 6634,
											"end": 6687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6634,
											"end": 6687,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 6634,
											"end": 6687,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6624,
											"end": 6687,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6624,
											"end": 6687,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6580,
											"end": 6697,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6736,
											"end": 6738,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6762,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 6815,
											"end": 6822,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6806,
											"end": 6812,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6795,
											"end": 6804,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 6791,
											"end": 6813,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6762,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 6762,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6762,
											"end": 6823,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 6762,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6752,
											"end": 6823,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6752,
											"end": 6823,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6707,
											"end": 6833,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6872,
											"end": 6874,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6898,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 6943,
											"end": 6950,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6940,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6923,
											"end": 6932,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 6919,
											"end": 6941,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 6898,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6951,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 6898,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6951,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6888,
											"end": 6951,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6843,
											"end": 6961,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7000,
											"end": 7002,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7026,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 7071,
											"end": 7078,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7068,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7051,
											"end": 7060,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7047,
											"end": 7069,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7026,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 7026,
											"end": 7079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7026,
											"end": 7079,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 7026,
											"end": 7079,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7016,
											"end": 7079,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7016,
											"end": 7079,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6971,
											"end": 7089,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7128,
											"end": 7131,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7155,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 7200,
											"end": 7207,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7180,
											"end": 7189,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7176,
											"end": 7198,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7155,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 7155,
											"end": 7208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7155,
											"end": 7208,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 7155,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7145,
											"end": 7208,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7145,
											"end": 7208,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7099,
											"end": 7218,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6298,
											"end": 7225,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6298,
											"end": 7225,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6298,
											"end": 7225,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6298,
											"end": 7225,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6298,
											"end": 7225,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6298,
											"end": 7225,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6298,
											"end": 7225,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6298,
											"end": 7225,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6298,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7231,
											"end": 7542,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 7231,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7308,
											"end": 7312,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7398,
											"end": 7416,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7387,
											"end": 7417,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7384,
											"end": 7440,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7384,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 7384,
											"end": 7440,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7420,
											"end": 7438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 7420,
											"end": 7438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 7420,
											"end": 7438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7420,
											"end": 7438,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 7420,
											"end": 7438,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7384,
											"end": 7440,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 7384,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7470,
											"end": 7474,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7462,
											"end": 7468,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7458,
											"end": 7475,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7450,
											"end": 7475,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7450,
											"end": 7475,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7530,
											"end": 7534,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7520,
											"end": 7535,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7512,
											"end": 7535,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7512,
											"end": 7535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7231,
											"end": 7542,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7231,
											"end": 7542,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7231,
											"end": 7542,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7231,
											"end": 7542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7548,
											"end": 7665,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 7548,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7657,
											"end": 7658,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7654,
											"end": 7655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7647,
											"end": 7659,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7688,
											"end": 8398,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 7688,
											"end": 8398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7784,
											"end": 7789,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7809,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 7825,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 7882,
											"end": 7888,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 7825,
											"end": 7889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7889,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 7825,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7809,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 7809,
											"end": 7890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7809,
											"end": 7890,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 7809,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7800,
											"end": 7890,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7800,
											"end": 7890,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7910,
											"end": 7915,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7939,
											"end": 7945,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7932,
											"end": 7937,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7925,
											"end": 7946,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7966,
											"end": 7971,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7962,
											"end": 7978,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7955,
											"end": 7978,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7955,
											"end": 7978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8026,
											"end": 8030,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8018,
											"end": 8024,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8014,
											"end": 8031,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 8006,
											"end": 8012,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8058,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8047,
											"end": 8053,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8044,
											"end": 8059,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8041,
											"end": 8163,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8041,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 8041,
											"end": 8163,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8074,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 8074,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 8074,
											"end": 8153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8074,
											"end": 8153,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 8074,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8041,
											"end": 8163,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 8041,
											"end": 8163,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8189,
											"end": 8195,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8172,
											"end": 8392,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 8172,
											"end": 8392,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8206,
											"end": 8212,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8201,
											"end": 8204,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8172,
											"end": 8392,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8172,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 8172,
											"end": 8392,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8281,
											"end": 8284,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8310,
											"end": 8347,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 8343,
											"end": 8346,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8331,
											"end": 8341,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8310,
											"end": 8347,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 8310,
											"end": 8347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8310,
											"end": 8347,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 8310,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8305,
											"end": 8308,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8298,
											"end": 8348,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8377,
											"end": 8381,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8372,
											"end": 8375,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8368,
											"end": 8382,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8361,
											"end": 8382,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8361,
											"end": 8382,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8248,
											"end": 8392,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8232,
											"end": 8236,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8227,
											"end": 8230,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8223,
											"end": 8237,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8237,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8237,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8172,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 8172,
											"end": 8392,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8172,
											"end": 8392,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 8172,
											"end": 8392,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8176,
											"end": 8197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7790,
											"end": 8398,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7790,
											"end": 8398,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7688,
											"end": 8398,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7688,
											"end": 8398,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7688,
											"end": 8398,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7688,
											"end": 8398,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7688,
											"end": 8398,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7688,
											"end": 8398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8421,
											"end": 8791,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 8421,
											"end": 8791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8492,
											"end": 8497,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8541,
											"end": 8544,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8534,
											"end": 8538,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 8526,
											"end": 8532,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8522,
											"end": 8539,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8518,
											"end": 8545,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8508,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 8508,
											"end": 8630,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8549,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 8549,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 8549,
											"end": 8628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8549,
											"end": 8628,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 8549,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8508,
											"end": 8630,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 8508,
											"end": 8630,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8653,
											"end": 8673,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8691,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 8781,
											"end": 8784,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8773,
											"end": 8779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8766,
											"end": 8770,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8758,
											"end": 8764,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8754,
											"end": 8771,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8691,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 8691,
											"end": 8785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8691,
											"end": 8785,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 8691,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8682,
											"end": 8785,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8682,
											"end": 8785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8498,
											"end": 8791,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8421,
											"end": 8791,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8421,
											"end": 8791,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8421,
											"end": 8791,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8421,
											"end": 8791,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8421,
											"end": 8791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8797,
											"end": 9108,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 8797,
											"end": 9108,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8874,
											"end": 8878,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8964,
											"end": 8982,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8956,
											"end": 8962,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8953,
											"end": 8983,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8950,
											"end": 9006,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8950,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 8950,
											"end": 9006,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 8986,
											"end": 9004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8950,
											"end": 9006,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 8950,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9036,
											"end": 9040,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9028,
											"end": 9034,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9024,
											"end": 9041,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 9016,
											"end": 9041,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9016,
											"end": 9041,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9096,
											"end": 9100,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9090,
											"end": 9094,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9086,
											"end": 9101,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9078,
											"end": 9101,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9078,
											"end": 9101,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8797,
											"end": 9108,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8797,
											"end": 9108,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8797,
											"end": 9108,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8797,
											"end": 9108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9131,
											"end": 9841,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 9131,
											"end": 9841,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9227,
											"end": 9232,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9252,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 9268,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 9325,
											"end": 9331,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9268,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 9268,
											"end": 9332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9268,
											"end": 9332,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 9268,
											"end": 9332,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9252,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 9252,
											"end": 9333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9252,
											"end": 9333,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 9252,
											"end": 9333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9243,
											"end": 9333,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9243,
											"end": 9333,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9353,
											"end": 9358,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9382,
											"end": 9388,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9375,
											"end": 9380,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9368,
											"end": 9389,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9416,
											"end": 9420,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9409,
											"end": 9414,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9405,
											"end": 9421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9398,
											"end": 9421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9398,
											"end": 9421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9469,
											"end": 9473,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9461,
											"end": 9467,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9457,
											"end": 9474,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 9449,
											"end": 9455,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9445,
											"end": 9475,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9498,
											"end": 9501,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9490,
											"end": 9496,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9487,
											"end": 9502,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9484,
											"end": 9606,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9484,
											"end": 9606,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 9484,
											"end": 9606,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9517,
											"end": 9596,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 9517,
											"end": 9596,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 9517,
											"end": 9596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9517,
											"end": 9596,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 9517,
											"end": 9596,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9484,
											"end": 9606,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 9484,
											"end": 9606,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9632,
											"end": 9638,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9615,
											"end": 9835,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 9615,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9649,
											"end": 9655,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9644,
											"end": 9647,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9641,
											"end": 9656,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 9615,
											"end": 9835,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9615,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 9615,
											"end": 9835,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9724,
											"end": 9727,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9753,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 9786,
											"end": 9789,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9774,
											"end": 9784,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9753,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 9753,
											"end": 9790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9753,
											"end": 9790,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 9753,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9748,
											"end": 9751,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9741,
											"end": 9791,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9820,
											"end": 9824,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9815,
											"end": 9818,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9811,
											"end": 9825,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9691,
											"end": 9835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9675,
											"end": 9679,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9670,
											"end": 9673,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9666,
											"end": 9680,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9659,
											"end": 9680,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9659,
											"end": 9680,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9615,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 9615,
											"end": 9835,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9615,
											"end": 9835,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 9615,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9619,
											"end": 9640,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9233,
											"end": 9841,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9233,
											"end": 9841,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9131,
											"end": 9841,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9131,
											"end": 9841,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9131,
											"end": 9841,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9131,
											"end": 9841,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9131,
											"end": 9841,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9131,
											"end": 9841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9864,
											"end": 10234,
											"name": "tag",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 9864,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9935,
											"end": 9940,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9984,
											"end": 9987,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9977,
											"end": 9981,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 9969,
											"end": 9975,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9965,
											"end": 9982,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9961,
											"end": 9988,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9951,
											"end": 10073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 9951,
											"end": 10073,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9992,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 9992,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 9992,
											"end": 10071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9992,
											"end": 10071,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 9992,
											"end": 10071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9951,
											"end": 10073,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 9951,
											"end": 10073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10109,
											"end": 10115,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10096,
											"end": 10116,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 10134,
											"end": 10228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 10224,
											"end": 10227,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10216,
											"end": 10222,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10209,
											"end": 10213,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10201,
											"end": 10207,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10197,
											"end": 10214,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10134,
											"end": 10228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 10134,
											"end": 10228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10134,
											"end": 10228,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 10134,
											"end": 10228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10125,
											"end": 10228,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10125,
											"end": 10228,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9941,
											"end": 10234,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9864,
											"end": 10234,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9864,
											"end": 10234,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9864,
											"end": 10234,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9864,
											"end": 10234,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9864,
											"end": 10234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10240,
											"end": 10549,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 10240,
											"end": 10549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10315,
											"end": 10319,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10405,
											"end": 10423,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10397,
											"end": 10403,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10394,
											"end": 10424,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10391,
											"end": 10447,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10391,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 10391,
											"end": 10447,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10427,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 10427,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 10427,
											"end": 10445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10427,
											"end": 10445,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 10427,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10391,
											"end": 10447,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 10391,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10477,
											"end": 10481,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10469,
											"end": 10475,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10465,
											"end": 10482,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 10457,
											"end": 10482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10457,
											"end": 10482,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10537,
											"end": 10541,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10531,
											"end": 10535,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10527,
											"end": 10542,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10519,
											"end": 10542,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10519,
											"end": 10542,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10240,
											"end": 10549,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10240,
											"end": 10549,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10240,
											"end": 10549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10240,
											"end": 10549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10555,
											"end": 10641,
											"name": "tag",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 10555,
											"end": 10641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10590,
											"end": 10597,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10634,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 10623,
											"end": 10628,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10619,
											"end": 10635,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10608,
											"end": 10635,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10608,
											"end": 10635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10555,
											"end": 10641,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10555,
											"end": 10641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10555,
											"end": 10641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10555,
											"end": 10641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10647,
											"end": 10765,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 10647,
											"end": 10765,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 10734,
											"end": 10739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 10718,
											"end": 10740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10711,
											"end": 10716,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10708,
											"end": 10741,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 10698,
											"end": 10759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 10698,
											"end": 10759,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10755,
											"end": 10756,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10752,
											"end": 10753,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10745,
											"end": 10757,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10698,
											"end": 10759,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 10698,
											"end": 10759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10647,
											"end": 10765,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10647,
											"end": 10765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10771,
											"end": 10906,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 10771,
											"end": 10906,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10815,
											"end": 10820,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10853,
											"end": 10859,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10840,
											"end": 10860,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 10831,
											"end": 10860,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10831,
											"end": 10860,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10869,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 10894,
											"end": 10899,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10869,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 10869,
											"end": 10900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10869,
											"end": 10900,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 10869,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10771,
											"end": 10906,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10771,
											"end": 10906,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10771,
											"end": 10906,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10771,
											"end": 10906,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10771,
											"end": 10906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10927,
											"end": 11631,
											"name": "tag",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 10927,
											"end": 11631,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11021,
											"end": 11026,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11046,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 11062,
											"end": 11124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 11117,
											"end": 11123,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11062,
											"end": 11124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 11062,
											"end": 11124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11062,
											"end": 11124,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 11062,
											"end": 11124,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11046,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 11046,
											"end": 11125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11046,
											"end": 11125,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 11046,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11037,
											"end": 11125,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11037,
											"end": 11125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11145,
											"end": 11150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11174,
											"end": 11180,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11167,
											"end": 11172,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11160,
											"end": 11181,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11208,
											"end": 11212,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11201,
											"end": 11206,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11197,
											"end": 11213,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11190,
											"end": 11213,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11190,
											"end": 11213,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11261,
											"end": 11265,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11253,
											"end": 11259,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11249,
											"end": 11266,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 11241,
											"end": 11247,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11237,
											"end": 11267,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11290,
											"end": 11293,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11282,
											"end": 11288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11279,
											"end": 11294,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11276,
											"end": 11398,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11276,
											"end": 11398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 11276,
											"end": 11398,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11309,
											"end": 11388,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 11309,
											"end": 11388,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 11309,
											"end": 11388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11309,
											"end": 11388,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 11309,
											"end": 11388,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11276,
											"end": 11398,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 11276,
											"end": 11398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11424,
											"end": 11430,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11407,
											"end": 11625,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 11407,
											"end": 11625,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11441,
											"end": 11447,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11436,
											"end": 11439,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11433,
											"end": 11448,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 11407,
											"end": 11625,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11407,
											"end": 11625,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 11407,
											"end": 11625,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11516,
											"end": 11519,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11545,
											"end": 11580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 11576,
											"end": 11579,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11564,
											"end": 11574,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11545,
											"end": 11580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 11545,
											"end": 11580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11545,
											"end": 11580,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 11545,
											"end": 11580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11543,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11533,
											"end": 11581,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11610,
											"end": 11614,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11605,
											"end": 11608,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11601,
											"end": 11615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11594,
											"end": 11615,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11594,
											"end": 11615,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11483,
											"end": 11625,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11471,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11462,
											"end": 11465,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11458,
											"end": 11472,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11451,
											"end": 11472,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11451,
											"end": 11472,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11407,
											"end": 11625,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 11407,
											"end": 11625,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11407,
											"end": 11625,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 11407,
											"end": 11625,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11411,
											"end": 11432,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11027,
											"end": 11631,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11027,
											"end": 11631,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10927,
											"end": 11631,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10927,
											"end": 11631,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10927,
											"end": 11631,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10927,
											"end": 11631,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10927,
											"end": 11631,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10927,
											"end": 11631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11652,
											"end": 12018,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 11652,
											"end": 12018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11721,
											"end": 11726,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11770,
											"end": 11773,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11763,
											"end": 11767,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11755,
											"end": 11761,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11751,
											"end": 11768,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11747,
											"end": 11774,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11737,
											"end": 11859,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 11737,
											"end": 11859,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11778,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 11778,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 11778,
											"end": 11857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11778,
											"end": 11857,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 11778,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11737,
											"end": 11859,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 11737,
											"end": 11859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11895,
											"end": 11901,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11882,
											"end": 11902,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 11920,
											"end": 12012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 12008,
											"end": 12011,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12000,
											"end": 12006,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11993,
											"end": 11997,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11985,
											"end": 11991,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11981,
											"end": 11998,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11920,
											"end": 12012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 11920,
											"end": 12012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11920,
											"end": 12012,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 11920,
											"end": 12012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11911,
											"end": 12012,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11911,
											"end": 12012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11727,
											"end": 12018,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11652,
											"end": 12018,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11652,
											"end": 12018,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11652,
											"end": 12018,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11652,
											"end": 12018,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11652,
											"end": 12018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12024,
											"end": 13561,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 12024,
											"end": 13561,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12192,
											"end": 12198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12200,
											"end": 12206,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12208,
											"end": 12214,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12216,
											"end": 12222,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12224,
											"end": 12230,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12273,
											"end": 12276,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 12261,
											"end": 12270,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12252,
											"end": 12259,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12248,
											"end": 12271,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12244,
											"end": 12277,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 12241,
											"end": 12361,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12241,
											"end": 12361,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 12241,
											"end": 12361,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12280,
											"end": 12359,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 12280,
											"end": 12359,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 12280,
											"end": 12359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12280,
											"end": 12359,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 12280,
											"end": 12359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12241,
											"end": 12361,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 12241,
											"end": 12361,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12400,
											"end": 12401,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12425,
											"end": 12478,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 12470,
											"end": 12477,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12461,
											"end": 12467,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12450,
											"end": 12459,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12446,
											"end": 12468,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12425,
											"end": 12478,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 12425,
											"end": 12478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12425,
											"end": 12478,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 12425,
											"end": 12478,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12415,
											"end": 12478,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 12415,
											"end": 12478,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12371,
											"end": 12488,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12527,
											"end": 12529,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12553,
											"end": 12606,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 12598,
											"end": 12605,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12589,
											"end": 12595,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12578,
											"end": 12587,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12574,
											"end": 12596,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12553,
											"end": 12606,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 12553,
											"end": 12606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12553,
											"end": 12606,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 12553,
											"end": 12606,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12543,
											"end": 12606,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 12543,
											"end": 12606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12498,
											"end": 12616,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12683,
											"end": 12685,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12672,
											"end": 12681,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12668,
											"end": 12686,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12655,
											"end": 12687,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 12714,
											"end": 12732,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12706,
											"end": 12712,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12703,
											"end": 12733,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12700,
											"end": 12817,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12700,
											"end": 12817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 12700,
											"end": 12817,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12736,
											"end": 12815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 12736,
											"end": 12815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 12736,
											"end": 12815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12736,
											"end": 12815,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 12736,
											"end": 12815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12700,
											"end": 12817,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 12700,
											"end": 12817,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12841,
											"end": 12919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 12911,
											"end": 12918,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12902,
											"end": 12908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12891,
											"end": 12900,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12887,
											"end": 12909,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12841,
											"end": 12919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 12841,
											"end": 12919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12841,
											"end": 12919,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 12841,
											"end": 12919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12831,
											"end": 12919,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12831,
											"end": 12919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12626,
											"end": 12929,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12996,
											"end": 12998,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 12985,
											"end": 12994,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12968,
											"end": 13000,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 13027,
											"end": 13045,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13019,
											"end": 13025,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13016,
											"end": 13046,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 13013,
											"end": 13130,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13013,
											"end": 13130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 13013,
											"end": 13130,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13049,
											"end": 13128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 13049,
											"end": 13128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 13049,
											"end": 13128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13049,
											"end": 13128,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 13049,
											"end": 13128,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13013,
											"end": 13130,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 13013,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13154,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 13224,
											"end": 13231,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 13215,
											"end": 13221,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13204,
											"end": 13213,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13222,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13154,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 13154,
											"end": 13232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13154,
											"end": 13232,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 13154,
											"end": 13232,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13144,
											"end": 13232,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13144,
											"end": 13232,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12939,
											"end": 13242,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13309,
											"end": 13312,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 13298,
											"end": 13307,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13294,
											"end": 13313,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13281,
											"end": 13314,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 13341,
											"end": 13359,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13333,
											"end": 13339,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13330,
											"end": 13360,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 13327,
											"end": 13444,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13327,
											"end": 13444,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 13327,
											"end": 13444,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13363,
											"end": 13442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 13363,
											"end": 13442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 13363,
											"end": 13442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13363,
											"end": 13442,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 13363,
											"end": 13442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13327,
											"end": 13444,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 13327,
											"end": 13444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13468,
											"end": 13544,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 13536,
											"end": 13543,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 13527,
											"end": 13533,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13516,
											"end": 13525,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 13512,
											"end": 13534,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13468,
											"end": 13544,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 13468,
											"end": 13544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13468,
											"end": 13544,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 13468,
											"end": 13544,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13458,
											"end": 13544,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13458,
											"end": 13544,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13252,
											"end": 13554,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12024,
											"end": 13561,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12024,
											"end": 13561,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 12024,
											"end": 13561,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12024,
											"end": 13561,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12024,
											"end": 13561,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 12024,
											"end": 13561,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12024,
											"end": 13561,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12024,
											"end": 13561,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12024,
											"end": 13561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13567,
											"end": 13685,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 13567,
											"end": 13685,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13654,
											"end": 13678,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 13672,
											"end": 13677,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13654,
											"end": 13678,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 13654,
											"end": 13678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13654,
											"end": 13678,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 13654,
											"end": 13678,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13649,
											"end": 13652,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13642,
											"end": 13679,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13567,
											"end": 13685,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13567,
											"end": 13685,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13567,
											"end": 13685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13691,
											"end": 13913,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 13691,
											"end": 13913,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13784,
											"end": 13788,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13822,
											"end": 13824,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13811,
											"end": 13820,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13807,
											"end": 13825,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13799,
											"end": 13825,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13799,
											"end": 13825,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13835,
											"end": 13906,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 13903,
											"end": 13904,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13892,
											"end": 13901,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13888,
											"end": 13905,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13879,
											"end": 13885,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13835,
											"end": 13906,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 13835,
											"end": 13906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13835,
											"end": 13906,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 13835,
											"end": 13906,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13691,
											"end": 13913,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13691,
											"end": 13913,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13691,
											"end": 13913,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13691,
											"end": 13913,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13691,
											"end": 13913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13919,
											"end": 15428,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 13919,
											"end": 15428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14073,
											"end": 14079,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14081,
											"end": 14087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14089,
											"end": 14095,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14097,
											"end": 14103,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14105,
											"end": 14111,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14154,
											"end": 14157,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 14142,
											"end": 14151,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14133,
											"end": 14140,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 14129,
											"end": 14152,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14125,
											"end": 14158,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 14122,
											"end": 14242,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14122,
											"end": 14242,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 14122,
											"end": 14242,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14161,
											"end": 14240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 14161,
											"end": 14240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 14161,
											"end": 14240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14161,
											"end": 14240,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 14161,
											"end": 14240,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14122,
											"end": 14242,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 14122,
											"end": 14242,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14281,
											"end": 14282,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14306,
											"end": 14359,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 14351,
											"end": 14358,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 14342,
											"end": 14348,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14331,
											"end": 14340,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 14327,
											"end": 14349,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14306,
											"end": 14359,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 14306,
											"end": 14359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14306,
											"end": 14359,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 14306,
											"end": 14359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14296,
											"end": 14359,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 14296,
											"end": 14359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14252,
											"end": 14369,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14408,
											"end": 14410,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14434,
											"end": 14487,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 14479,
											"end": 14486,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 14470,
											"end": 14476,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14459,
											"end": 14468,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 14455,
											"end": 14477,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14434,
											"end": 14487,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 14434,
											"end": 14487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14434,
											"end": 14487,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 14434,
											"end": 14487,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14424,
											"end": 14487,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 14424,
											"end": 14487,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14379,
											"end": 14497,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14564,
											"end": 14566,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14553,
											"end": 14562,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14549,
											"end": 14567,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14536,
											"end": 14568,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 14595,
											"end": 14613,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14587,
											"end": 14593,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14584,
											"end": 14614,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14581,
											"end": 14698,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14581,
											"end": 14698,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 14581,
											"end": 14698,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14617,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 14617,
											"end": 14696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 14617,
											"end": 14696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14617,
											"end": 14696,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 14617,
											"end": 14696,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14581,
											"end": 14698,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 14581,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14722,
											"end": 14800,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 14792,
											"end": 14799,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 14783,
											"end": 14789,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14772,
											"end": 14781,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 14768,
											"end": 14790,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14722,
											"end": 14800,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 14722,
											"end": 14800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14722,
											"end": 14800,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 14722,
											"end": 14800,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14712,
											"end": 14800,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14712,
											"end": 14800,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14507,
											"end": 14810,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14877,
											"end": 14879,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 14866,
											"end": 14875,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14862,
											"end": 14880,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14849,
											"end": 14881,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 14908,
											"end": 14926,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14900,
											"end": 14906,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14897,
											"end": 14927,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14894,
											"end": 15011,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14894,
											"end": 15011,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 14894,
											"end": 15011,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14930,
											"end": 15009,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 14930,
											"end": 15009,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 14930,
											"end": 15009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14930,
											"end": 15009,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 14930,
											"end": 15009,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14894,
											"end": 15011,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 14894,
											"end": 15011,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15035,
											"end": 15113,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 15105,
											"end": 15112,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 15096,
											"end": 15102,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15085,
											"end": 15094,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 15081,
											"end": 15103,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15035,
											"end": 15113,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 15035,
											"end": 15113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15035,
											"end": 15113,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 15035,
											"end": 15113,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15025,
											"end": 15113,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15025,
											"end": 15113,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14820,
											"end": 15123,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15190,
											"end": 15193,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 15179,
											"end": 15188,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 15175,
											"end": 15194,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15162,
											"end": 15195,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 15222,
											"end": 15240,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15214,
											"end": 15220,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15211,
											"end": 15241,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 15208,
											"end": 15325,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15208,
											"end": 15325,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 15208,
											"end": 15325,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15244,
											"end": 15323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 15244,
											"end": 15323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 15244,
											"end": 15323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15244,
											"end": 15323,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 15244,
											"end": 15323,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15208,
											"end": 15325,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 15208,
											"end": 15325,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15349,
											"end": 15411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 15403,
											"end": 15410,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 15394,
											"end": 15400,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15383,
											"end": 15392,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 15379,
											"end": 15401,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15349,
											"end": 15411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 15349,
											"end": 15411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15349,
											"end": 15411,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 15349,
											"end": 15411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15339,
											"end": 15411,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15339,
											"end": 15411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15133,
											"end": 15421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13919,
											"end": 15428,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13919,
											"end": 15428,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 13919,
											"end": 15428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13919,
											"end": 15428,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13919,
											"end": 15428,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 13919,
											"end": 15428,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13919,
											"end": 15428,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 13919,
											"end": 15428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13919,
											"end": 15428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15434,
											"end": 16523,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 15434,
											"end": 16523,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15538,
											"end": 15544,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15546,
											"end": 15552,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15554,
											"end": 15560,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15562,
											"end": 15568,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15570,
											"end": 15576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15619,
											"end": 15622,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 15607,
											"end": 15616,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 15598,
											"end": 15605,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 15594,
											"end": 15617,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15590,
											"end": 15623,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 15587,
											"end": 15707,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15587,
											"end": 15707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 15587,
											"end": 15707,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15626,
											"end": 15705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 15626,
											"end": 15705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 15626,
											"end": 15705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15626,
											"end": 15705,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 15626,
											"end": 15705,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15587,
											"end": 15707,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 15587,
											"end": 15707,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15746,
											"end": 15747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15771,
											"end": 15824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 15816,
											"end": 15823,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 15807,
											"end": 15813,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15796,
											"end": 15805,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 15792,
											"end": 15814,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15771,
											"end": 15824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 15771,
											"end": 15824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15771,
											"end": 15824,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 15771,
											"end": 15824,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15761,
											"end": 15824,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 15761,
											"end": 15824,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15717,
											"end": 15834,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15873,
											"end": 15875,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15899,
											"end": 15952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 15944,
											"end": 15951,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 15935,
											"end": 15941,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15924,
											"end": 15933,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 15920,
											"end": 15942,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15899,
											"end": 15952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 15899,
											"end": 15952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15899,
											"end": 15952,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 15899,
											"end": 15952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15889,
											"end": 15952,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 15889,
											"end": 15952,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15844,
											"end": 15962,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16001,
											"end": 16003,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 16072,
											"end": 16079,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 16063,
											"end": 16069,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16052,
											"end": 16061,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 16048,
											"end": 16070,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 16027,
											"end": 16080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16017,
											"end": 16080,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 16017,
											"end": 16080,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15972,
											"end": 16090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16129,
											"end": 16131,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 16200,
											"end": 16207,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 16191,
											"end": 16197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16180,
											"end": 16189,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 16176,
											"end": 16198,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 16155,
											"end": 16208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16145,
											"end": 16208,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16145,
											"end": 16208,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16100,
											"end": 16218,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16285,
											"end": 16288,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 16274,
											"end": 16283,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16270,
											"end": 16289,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16257,
											"end": 16290,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 16317,
											"end": 16335,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16309,
											"end": 16315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16306,
											"end": 16336,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 16303,
											"end": 16420,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16303,
											"end": 16420,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 16303,
											"end": 16420,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16339,
											"end": 16418,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 16339,
											"end": 16418,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 16339,
											"end": 16418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16339,
											"end": 16418,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 16339,
											"end": 16418,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16303,
											"end": 16420,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 16303,
											"end": 16420,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16444,
											"end": 16506,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 16498,
											"end": 16505,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 16489,
											"end": 16495,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16478,
											"end": 16487,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 16474,
											"end": 16496,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16444,
											"end": 16506,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 16444,
											"end": 16506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16444,
											"end": 16506,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 16444,
											"end": 16506,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16434,
											"end": 16506,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16434,
											"end": 16506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16228,
											"end": 16516,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15434,
											"end": 16523,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15434,
											"end": 16523,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 15434,
											"end": 16523,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15434,
											"end": 16523,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15434,
											"end": 16523,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 15434,
											"end": 16523,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15434,
											"end": 16523,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 15434,
											"end": 16523,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15434,
											"end": 16523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16529,
											"end": 16858,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 16529,
											"end": 16858,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16588,
											"end": 16594,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16637,
											"end": 16639,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16625,
											"end": 16634,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16616,
											"end": 16623,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16612,
											"end": 16635,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16608,
											"end": 16640,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 16605,
											"end": 16724,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16605,
											"end": 16724,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 16605,
											"end": 16724,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16643,
											"end": 16722,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 16643,
											"end": 16722,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 16643,
											"end": 16722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16643,
											"end": 16722,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 16643,
											"end": 16722,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16605,
											"end": 16724,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 16605,
											"end": 16724,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16763,
											"end": 16764,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16788,
											"end": 16841,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 16833,
											"end": 16840,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16824,
											"end": 16830,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16813,
											"end": 16822,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16809,
											"end": 16831,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16788,
											"end": 16841,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 16788,
											"end": 16841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16788,
											"end": 16841,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 16788,
											"end": 16841,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16778,
											"end": 16841,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16778,
											"end": 16841,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16734,
											"end": 16851,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16529,
											"end": 16858,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16529,
											"end": 16858,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16529,
											"end": 16858,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16529,
											"end": 16858,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16529,
											"end": 16858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16864,
											"end": 16924,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 16864,
											"end": 16924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16892,
											"end": 16895,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16913,
											"end": 16918,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16906,
											"end": 16918,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16906,
											"end": 16918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16864,
											"end": 16924,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16864,
											"end": 16924,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16864,
											"end": 16924,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16864,
											"end": 16924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16930,
											"end": 17072,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 16930,
											"end": 17072,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16980,
											"end": 16989,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17013,
											"end": 17066,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 17031,
											"end": 17065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 17040,
											"end": 17064,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 17058,
											"end": 17063,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17040,
											"end": 17064,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 17040,
											"end": 17064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17040,
											"end": 17064,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 17040,
											"end": 17064,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17031,
											"end": 17065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 17031,
											"end": 17065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17031,
											"end": 17065,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 17031,
											"end": 17065,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17013,
											"end": 17066,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 17013,
											"end": 17066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17013,
											"end": 17066,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 17013,
											"end": 17066,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17000,
											"end": 17066,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17000,
											"end": 17066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16930,
											"end": 17072,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16930,
											"end": 17072,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16930,
											"end": 17072,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16930,
											"end": 17072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17078,
											"end": 17204,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 17078,
											"end": 17204,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17128,
											"end": 17137,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17161,
											"end": 17198,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 17192,
											"end": 17197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17198,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 17161,
											"end": 17198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17198,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 17161,
											"end": 17198,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17148,
											"end": 17198,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17148,
											"end": 17198,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17078,
											"end": 17204,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17078,
											"end": 17204,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17078,
											"end": 17204,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17078,
											"end": 17204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17210,
											"end": 17344,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 17210,
											"end": 17344,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17268,
											"end": 17277,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17301,
											"end": 17338,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 17332,
											"end": 17337,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17301,
											"end": 17338,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 17301,
											"end": 17338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17301,
											"end": 17338,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 17301,
											"end": 17338,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17288,
											"end": 17338,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17288,
											"end": 17338,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17210,
											"end": 17344,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17210,
											"end": 17344,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17210,
											"end": 17344,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17210,
											"end": 17344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17350,
											"end": 17497,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 17350,
											"end": 17497,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17445,
											"end": 17490,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 17484,
											"end": 17489,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17445,
											"end": 17490,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 17445,
											"end": 17490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17445,
											"end": 17490,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 17445,
											"end": 17490,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17440,
											"end": 17443,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17433,
											"end": 17491,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17350,
											"end": 17497,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17350,
											"end": 17497,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17350,
											"end": 17497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17503,
											"end": 17621,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 17503,
											"end": 17621,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17590,
											"end": 17614,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 17608,
											"end": 17613,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17590,
											"end": 17614,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 17590,
											"end": 17614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17590,
											"end": 17614,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 17590,
											"end": 17614,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17585,
											"end": 17588,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17578,
											"end": 17615,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17503,
											"end": 17621,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17503,
											"end": 17621,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17503,
											"end": 17621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17627,
											"end": 18085,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 17627,
											"end": 18085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17784,
											"end": 17788,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17822,
											"end": 17824,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 17811,
											"end": 17820,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17807,
											"end": 17825,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17799,
											"end": 17825,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17799,
											"end": 17825,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17835,
											"end": 17906,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 17903,
											"end": 17904,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17892,
											"end": 17901,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17888,
											"end": 17905,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17879,
											"end": 17885,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17835,
											"end": 17906,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 17835,
											"end": 17906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17835,
											"end": 17906,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 17835,
											"end": 17906,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17916,
											"end": 17996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 17992,
											"end": 17994,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17981,
											"end": 17990,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17977,
											"end": 17995,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17968,
											"end": 17974,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17916,
											"end": 17996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 17916,
											"end": 17996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17916,
											"end": 17996,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 17916,
											"end": 17996,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18006,
											"end": 18078,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 18074,
											"end": 18076,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 18063,
											"end": 18072,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18059,
											"end": 18077,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18050,
											"end": 18056,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18006,
											"end": 18078,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 18006,
											"end": 18078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18006,
											"end": 18078,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 18006,
											"end": 18078,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17627,
											"end": 18085,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 17627,
											"end": 18085,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 17627,
											"end": 18085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17627,
											"end": 18085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17627,
											"end": 18085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17627,
											"end": 18085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17627,
											"end": 18085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18091,
											"end": 18207,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 18091,
											"end": 18207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18161,
											"end": 18182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 18176,
											"end": 18181,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18161,
											"end": 18182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 18161,
											"end": 18182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18161,
											"end": 18182,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 18161,
											"end": 18182,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18154,
											"end": 18159,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18151,
											"end": 18183,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 18141,
											"end": 18201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 18141,
											"end": 18201,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18197,
											"end": 18198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18194,
											"end": 18195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 18187,
											"end": 18199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 18141,
											"end": 18201,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 18141,
											"end": 18201,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18091,
											"end": 18207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18091,
											"end": 18207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18213,
											"end": 18350,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 18213,
											"end": 18350,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18267,
											"end": 18272,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18298,
											"end": 18304,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18292,
											"end": 18305,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 18283,
											"end": 18305,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18283,
											"end": 18305,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18314,
											"end": 18344,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 18338,
											"end": 18343,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18314,
											"end": 18344,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 18314,
											"end": 18344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18314,
											"end": 18344,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 18314,
											"end": 18344,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18213,
											"end": 18350,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18213,
											"end": 18350,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18213,
											"end": 18350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18213,
											"end": 18350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18213,
											"end": 18350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18356,
											"end": 18701,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 18356,
											"end": 18701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18423,
											"end": 18429,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18472,
											"end": 18474,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18460,
											"end": 18469,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18451,
											"end": 18458,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18447,
											"end": 18470,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18443,
											"end": 18475,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 18440,
											"end": 18559,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 18440,
											"end": 18559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 18440,
											"end": 18559,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18478,
											"end": 18557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 18478,
											"end": 18557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 18478,
											"end": 18557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18478,
											"end": 18557,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 18478,
											"end": 18557,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18440,
											"end": 18559,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 18440,
											"end": 18559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18598,
											"end": 18599,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18623,
											"end": 18684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 18676,
											"end": 18683,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18667,
											"end": 18673,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18656,
											"end": 18665,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18652,
											"end": 18674,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18623,
											"end": 18684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 18623,
											"end": 18684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18623,
											"end": 18684,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 18623,
											"end": 18684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18613,
											"end": 18684,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18613,
											"end": 18684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18569,
											"end": 18694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18356,
											"end": 18701,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18356,
											"end": 18701,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18356,
											"end": 18701,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18356,
											"end": 18701,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18356,
											"end": 18701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18707,
											"end": 18876,
											"name": "tag",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 18707,
											"end": 18876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18791,
											"end": 18802,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18825,
											"end": 18831,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18820,
											"end": 18823,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18813,
											"end": 18832,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18865,
											"end": 18869,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18860,
											"end": 18863,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18856,
											"end": 18870,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18841,
											"end": 18870,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18841,
											"end": 18870,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18707,
											"end": 18876,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18707,
											"end": 18876,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18707,
											"end": 18876,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18707,
											"end": 18876,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18707,
											"end": 18876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18882,
											"end": 19106,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 18882,
											"end": 19106,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19022,
											"end": 19056,
											"name": "PUSH",
											"source": 13,
											"value": "5472616E73666572206F6620746F6B656E7320746F2072656365697665722066"
										},
										{
											"begin": 19018,
											"end": 19019,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19010,
											"end": 19016,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19006,
											"end": 19020,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18999,
											"end": 19057,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19091,
											"end": 19098,
											"name": "PUSH",
											"source": 13,
											"value": "61696C6564000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19086,
											"end": 19088,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19078,
											"end": 19084,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19074,
											"end": 19089,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19067,
											"end": 19099,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18882,
											"end": 19106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18882,
											"end": 19106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19112,
											"end": 19478,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 19112,
											"end": 19478,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19254,
											"end": 19257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19275,
											"end": 19342,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 19339,
											"end": 19341,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 19334,
											"end": 19337,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19275,
											"end": 19342,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 19275,
											"end": 19342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19275,
											"end": 19342,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 19275,
											"end": 19342,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19268,
											"end": 19342,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19268,
											"end": 19342,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19351,
											"end": 19444,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 19440,
											"end": 19443,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19351,
											"end": 19444,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 19351,
											"end": 19444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19351,
											"end": 19444,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 19351,
											"end": 19444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19469,
											"end": 19471,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19464,
											"end": 19467,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19460,
											"end": 19472,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19453,
											"end": 19472,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19453,
											"end": 19472,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19112,
											"end": 19478,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19112,
											"end": 19478,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19112,
											"end": 19478,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19112,
											"end": 19478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19484,
											"end": 19903,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 19484,
											"end": 19903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19650,
											"end": 19654,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19688,
											"end": 19690,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19677,
											"end": 19686,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19673,
											"end": 19691,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19665,
											"end": 19691,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19665,
											"end": 19691,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19737,
											"end": 19746,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19731,
											"end": 19735,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19727,
											"end": 19747,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19723,
											"end": 19724,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19712,
											"end": 19721,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19708,
											"end": 19725,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19701,
											"end": 19748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19765,
											"end": 19896,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 19891,
											"end": 19895,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19765,
											"end": 19896,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 19765,
											"end": 19896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19765,
											"end": 19896,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 19765,
											"end": 19896,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19757,
											"end": 19896,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19757,
											"end": 19896,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19484,
											"end": 19903,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19484,
											"end": 19903,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19484,
											"end": 19903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19484,
											"end": 19903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19909,
											"end": 20351,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 19909,
											"end": 20351,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20058,
											"end": 20062,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20096,
											"end": 20098,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 20085,
											"end": 20094,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20081,
											"end": 20099,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20073,
											"end": 20099,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20073,
											"end": 20099,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20109,
											"end": 20180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 20177,
											"end": 20178,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20166,
											"end": 20175,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20162,
											"end": 20179,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20153,
											"end": 20159,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 20109,
											"end": 20180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 20109,
											"end": 20180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20109,
											"end": 20180,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 20109,
											"end": 20180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20190,
											"end": 20262,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 20258,
											"end": 20260,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20247,
											"end": 20256,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20243,
											"end": 20261,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20234,
											"end": 20240,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20190,
											"end": 20262,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 20190,
											"end": 20262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20190,
											"end": 20262,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 20190,
											"end": 20262,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20272,
											"end": 20344,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 20340,
											"end": 20342,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 20329,
											"end": 20338,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20325,
											"end": 20343,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20316,
											"end": 20322,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20272,
											"end": 20344,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 20272,
											"end": 20344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20272,
											"end": 20344,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 20272,
											"end": 20344,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19909,
											"end": 20351,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 19909,
											"end": 20351,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 19909,
											"end": 20351,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19909,
											"end": 20351,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19909,
											"end": 20351,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19909,
											"end": 20351,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19909,
											"end": 20351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20357,
											"end": 20579,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 20357,
											"end": 20579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20497,
											"end": 20531,
											"name": "PUSH",
											"source": 13,
											"value": "5472616E73666572206F6620746F6B656E7320746F2053746174657220666169"
										},
										{
											"begin": 20493,
											"end": 20494,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20485,
											"end": 20491,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20481,
											"end": 20495,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20474,
											"end": 20532,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20566,
											"end": 20571,
											"name": "PUSH",
											"source": 13,
											"value": "6C65640000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20561,
											"end": 20563,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20553,
											"end": 20559,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20549,
											"end": 20564,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20542,
											"end": 20572,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20357,
											"end": 20579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20357,
											"end": 20579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20585,
											"end": 20951,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 20585,
											"end": 20951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20727,
											"end": 20730,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20748,
											"end": 20815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 20812,
											"end": 20814,
											"name": "PUSH",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 20807,
											"end": 20810,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20748,
											"end": 20815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 20748,
											"end": 20815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20748,
											"end": 20815,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 20748,
											"end": 20815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20741,
											"end": 20815,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20741,
											"end": 20815,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20824,
											"end": 20917,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 20913,
											"end": 20916,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20824,
											"end": 20917,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 20824,
											"end": 20917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20824,
											"end": 20917,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 20824,
											"end": 20917,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20942,
											"end": 20944,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 20937,
											"end": 20940,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20933,
											"end": 20945,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20926,
											"end": 20945,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20926,
											"end": 20945,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20585,
											"end": 20951,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20585,
											"end": 20951,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20585,
											"end": 20951,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20585,
											"end": 20951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20957,
											"end": 21376,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 20957,
											"end": 21376,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21123,
											"end": 21127,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21161,
											"end": 21163,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21150,
											"end": 21159,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21138,
											"end": 21164,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21138,
											"end": 21164,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21210,
											"end": 21219,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21204,
											"end": 21208,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21200,
											"end": 21220,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21196,
											"end": 21197,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21185,
											"end": 21194,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21181,
											"end": 21198,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21174,
											"end": 21221,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21238,
											"end": 21369,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 21364,
											"end": 21368,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21238,
											"end": 21369,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 21238,
											"end": 21369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21238,
											"end": 21369,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 21238,
											"end": 21369,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21230,
											"end": 21369,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21230,
											"end": 21369,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20957,
											"end": 21376,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20957,
											"end": 21376,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20957,
											"end": 21376,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20957,
											"end": 21376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21382,
											"end": 21603,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 21382,
											"end": 21603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21522,
											"end": 21556,
											"name": "PUSH",
											"source": 13,
											"value": "5472616E73666572206F662045544820746F207265636569766572206661696C"
										},
										{
											"begin": 21518,
											"end": 21519,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21510,
											"end": 21516,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21506,
											"end": 21520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21499,
											"end": 21557,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21591,
											"end": 21595,
											"name": "PUSH",
											"source": 13,
											"value": "6564000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21586,
											"end": 21588,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21578,
											"end": 21584,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21574,
											"end": 21589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21567,
											"end": 21596,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21382,
											"end": 21603,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21382,
											"end": 21603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21609,
											"end": 21975,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 21609,
											"end": 21975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21751,
											"end": 21754,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21772,
											"end": 21839,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 21836,
											"end": 21838,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 21831,
											"end": 21834,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21772,
											"end": 21839,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 21772,
											"end": 21839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21772,
											"end": 21839,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 21772,
											"end": 21839,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21765,
											"end": 21839,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21765,
											"end": 21839,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21848,
											"end": 21941,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 21937,
											"end": 21940,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21848,
											"end": 21941,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 21848,
											"end": 21941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21848,
											"end": 21941,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 21848,
											"end": 21941,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21966,
											"end": 21968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 21961,
											"end": 21964,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21957,
											"end": 21969,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21950,
											"end": 21969,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21950,
											"end": 21969,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21609,
											"end": 21975,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21609,
											"end": 21975,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21609,
											"end": 21975,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21609,
											"end": 21975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21981,
											"end": 22400,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 21981,
											"end": 22400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22147,
											"end": 22151,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22185,
											"end": 22187,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22174,
											"end": 22183,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22170,
											"end": 22188,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22162,
											"end": 22188,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22162,
											"end": 22188,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22234,
											"end": 22243,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22228,
											"end": 22232,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22224,
											"end": 22244,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 22220,
											"end": 22221,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22209,
											"end": 22218,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22205,
											"end": 22222,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22198,
											"end": 22245,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22262,
											"end": 22393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 22388,
											"end": 22392,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22262,
											"end": 22393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 22262,
											"end": 22393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22262,
											"end": 22393,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 22262,
											"end": 22393,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22254,
											"end": 22393,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22254,
											"end": 22393,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21981,
											"end": 22400,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21981,
											"end": 22400,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21981,
											"end": 22400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21981,
											"end": 22400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22406,
											"end": 22588,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 22406,
											"end": 22588,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22546,
											"end": 22580,
											"name": "PUSH",
											"source": 13,
											"value": "5472616E73666572206F662045544820746F20537461746572206661696C6564"
										},
										{
											"begin": 22542,
											"end": 22543,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22534,
											"end": 22540,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22530,
											"end": 22544,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22523,
											"end": 22581,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22406,
											"end": 22588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22406,
											"end": 22588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22594,
											"end": 22960,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 22594,
											"end": 22960,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22736,
											"end": 22739,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22757,
											"end": 22824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 22821,
											"end": 22823,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22816,
											"end": 22819,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22757,
											"end": 22824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 22757,
											"end": 22824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22757,
											"end": 22824,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 22757,
											"end": 22824,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22750,
											"end": 22824,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22750,
											"end": 22824,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22833,
											"end": 22926,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 22922,
											"end": 22925,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22833,
											"end": 22926,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 22833,
											"end": 22926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22833,
											"end": 22926,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 22833,
											"end": 22926,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22951,
											"end": 22953,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22946,
											"end": 22949,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22942,
											"end": 22954,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22935,
											"end": 22954,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22935,
											"end": 22954,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22594,
											"end": 22960,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22594,
											"end": 22960,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22594,
											"end": 22960,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22594,
											"end": 22960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22966,
											"end": 23385,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 22966,
											"end": 23385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23132,
											"end": 23136,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23170,
											"end": 23172,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23159,
											"end": 23168,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23155,
											"end": 23173,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23147,
											"end": 23173,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23147,
											"end": 23173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23219,
											"end": 23228,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23213,
											"end": 23217,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23209,
											"end": 23229,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 23205,
											"end": 23206,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23194,
											"end": 23203,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23190,
											"end": 23207,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23183,
											"end": 23230,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23247,
											"end": 23378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 23373,
											"end": 23377,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23247,
											"end": 23378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 23247,
											"end": 23378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23247,
											"end": 23378,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 23247,
											"end": 23378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23239,
											"end": 23378,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23239,
											"end": 23378,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22966,
											"end": 23385,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22966,
											"end": 23385,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22966,
											"end": 23385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22966,
											"end": 23385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23391,
											"end": 23573,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 23391,
											"end": 23573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23531,
											"end": 23565,
											"name": "PUSH",
											"source": 13,
											"value": "546F6B656E20696E666F732070726F76696465642061726520696E76616C6964"
										},
										{
											"begin": 23527,
											"end": 23528,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23519,
											"end": 23525,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23515,
											"end": 23529,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23508,
											"end": 23566,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23391,
											"end": 23573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23391,
											"end": 23573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23579,
											"end": 23945,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 23579,
											"end": 23945,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23721,
											"end": 23724,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23742,
											"end": 23809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 23806,
											"end": 23808,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23801,
											"end": 23804,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23742,
											"end": 23809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 23742,
											"end": 23809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23742,
											"end": 23809,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 23742,
											"end": 23809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23735,
											"end": 23809,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23735,
											"end": 23809,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23818,
											"end": 23911,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 23907,
											"end": 23910,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23818,
											"end": 23911,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 23818,
											"end": 23911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23818,
											"end": 23911,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 23818,
											"end": 23911,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23936,
											"end": 23938,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23931,
											"end": 23934,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23927,
											"end": 23939,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23920,
											"end": 23939,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23920,
											"end": 23939,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23579,
											"end": 23945,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23579,
											"end": 23945,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23579,
											"end": 23945,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23579,
											"end": 23945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23951,
											"end": 24370,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 23951,
											"end": 24370,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24117,
											"end": 24121,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24155,
											"end": 24157,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24144,
											"end": 24153,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24140,
											"end": 24158,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24132,
											"end": 24158,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24132,
											"end": 24158,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24204,
											"end": 24213,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24198,
											"end": 24202,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24194,
											"end": 24214,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 24190,
											"end": 24191,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24179,
											"end": 24188,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24175,
											"end": 24192,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24168,
											"end": 24215,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24232,
											"end": 24363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 24358,
											"end": 24362,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24232,
											"end": 24363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 24232,
											"end": 24363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24232,
											"end": 24363,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 24232,
											"end": 24363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24224,
											"end": 24363,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24224,
											"end": 24363,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23951,
											"end": 24370,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23951,
											"end": 24370,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23951,
											"end": 24370,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23951,
											"end": 24370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24376,
											"end": 24556,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 24376,
											"end": 24556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24424,
											"end": 24501,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24421,
											"end": 24422,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24414,
											"end": 24502,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24521,
											"end": 24525,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 24518,
											"end": 24519,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 24511,
											"end": 24526,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24545,
											"end": 24549,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 24542,
											"end": 24543,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24535,
											"end": 24550,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 24562,
											"end": 24647,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 24562,
											"end": 24647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24607,
											"end": 24614,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24636,
											"end": 24641,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24625,
											"end": 24641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24625,
											"end": 24641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24562,
											"end": 24647,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24562,
											"end": 24647,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24562,
											"end": 24647,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24562,
											"end": 24647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24653,
											"end": 24811,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 24653,
											"end": 24811,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24711,
											"end": 24720,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24744,
											"end": 24805,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 24762,
											"end": 24804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 24771,
											"end": 24803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 24797,
											"end": 24802,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24771,
											"end": 24803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 24771,
											"end": 24803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24771,
											"end": 24803,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 24771,
											"end": 24803,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24762,
											"end": 24804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 24762,
											"end": 24804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24762,
											"end": 24804,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 24762,
											"end": 24804,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24744,
											"end": 24805,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 24744,
											"end": 24805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24744,
											"end": 24805,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 24744,
											"end": 24805,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24731,
											"end": 24805,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24731,
											"end": 24805,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24653,
											"end": 24811,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24653,
											"end": 24811,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24653,
											"end": 24811,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24653,
											"end": 24811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24817,
											"end": 24964,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 24817,
											"end": 24964,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24912,
											"end": 24957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 24951,
											"end": 24956,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24912,
											"end": 24957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 24912,
											"end": 24957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24912,
											"end": 24957,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 24912,
											"end": 24957,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24907,
											"end": 24910,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24900,
											"end": 24958,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24817,
											"end": 24964,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24817,
											"end": 24964,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24817,
											"end": 24964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24970,
											"end": 25138,
											"name": "tag",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 24970,
											"end": 25138,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25053,
											"end": 25064,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25087,
											"end": 25093,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25082,
											"end": 25085,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25075,
											"end": 25094,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 25127,
											"end": 25131,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 25122,
											"end": 25125,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25118,
											"end": 25132,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25103,
											"end": 25132,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25103,
											"end": 25132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24970,
											"end": 25138,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 24970,
											"end": 25138,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24970,
											"end": 25138,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24970,
											"end": 25138,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24970,
											"end": 25138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25144,
											"end": 25298,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 25144,
											"end": 25298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25284,
											"end": 25290,
											"name": "PUSH",
											"source": 13,
											"value": "3078303000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25280,
											"end": 25281,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25272,
											"end": 25278,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25268,
											"end": 25282,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25261,
											"end": 25291,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 25144,
											"end": 25298,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25144,
											"end": 25298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25304,
											"end": 25667,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 25304,
											"end": 25667,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25445,
											"end": 25448,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25466,
											"end": 25531,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 25529,
											"end": 25530,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 25524,
											"end": 25527,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25466,
											"end": 25531,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 25466,
											"end": 25531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25466,
											"end": 25531,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 25466,
											"end": 25531,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25459,
											"end": 25531,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25459,
											"end": 25531,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25540,
											"end": 25633,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 25629,
											"end": 25632,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25540,
											"end": 25633,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 25540,
											"end": 25633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25540,
											"end": 25633,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 25540,
											"end": 25633,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25658,
											"end": 25660,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 25653,
											"end": 25656,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25649,
											"end": 25661,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25642,
											"end": 25661,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25642,
											"end": 25661,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25304,
											"end": 25667,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25304,
											"end": 25667,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25304,
											"end": 25667,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25304,
											"end": 25667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25673,
											"end": 26548,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 25673,
											"end": 26548,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25958,
											"end": 25962,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25996,
											"end": 25999,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 25985,
											"end": 25994,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25981,
											"end": 26000,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25973,
											"end": 26000,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25973,
											"end": 26000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26010,
											"end": 26081,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 26078,
											"end": 26079,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26067,
											"end": 26076,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26063,
											"end": 26080,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26054,
											"end": 26060,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 26010,
											"end": 26081,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 26010,
											"end": 26081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26010,
											"end": 26081,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 26010,
											"end": 26081,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26091,
											"end": 26163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 26159,
											"end": 26161,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 26148,
											"end": 26157,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26144,
											"end": 26162,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26135,
											"end": 26141,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 26091,
											"end": 26163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 26091,
											"end": 26163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26091,
											"end": 26163,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 26091,
											"end": 26163,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26173,
											"end": 26245,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 26241,
											"end": 26243,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 26230,
											"end": 26239,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26226,
											"end": 26244,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26217,
											"end": 26223,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 26173,
											"end": 26245,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 26173,
											"end": 26245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26173,
											"end": 26245,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 26173,
											"end": 26245,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26255,
											"end": 26335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 26331,
											"end": 26333,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 26320,
											"end": 26329,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26316,
											"end": 26334,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26307,
											"end": 26313,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 26255,
											"end": 26335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 26255,
											"end": 26335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26255,
											"end": 26335,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 26255,
											"end": 26335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26383,
											"end": 26392,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26377,
											"end": 26381,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26373,
											"end": 26393,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 26367,
											"end": 26370,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 26356,
											"end": 26365,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26352,
											"end": 26371,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26345,
											"end": 26394,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 26411,
											"end": 26541,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 26536,
											"end": 26540,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26411,
											"end": 26541,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 26411,
											"end": 26541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26411,
											"end": 26541,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 26411,
											"end": 26541,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26403,
											"end": 26541,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26403,
											"end": 26541,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25673,
											"end": 26548,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 25673,
											"end": 26548,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 25673,
											"end": 26548,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25673,
											"end": 26548,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25673,
											"end": 26548,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25673,
											"end": 26548,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25673,
											"end": 26548,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25673,
											"end": 26548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26554,
											"end": 26734,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 26554,
											"end": 26734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26602,
											"end": 26679,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26599,
											"end": 26600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26592,
											"end": 26680,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 26699,
											"end": 26703,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 26696,
											"end": 26697,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 26689,
											"end": 26704,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 26723,
											"end": 26727,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 26720,
											"end": 26721,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26713,
											"end": 26728,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 26740,
											"end": 26973,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 26740,
											"end": 26973,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26779,
											"end": 26782,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26802,
											"end": 26826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 26820,
											"end": 26825,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26802,
											"end": 26826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 26802,
											"end": 26826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26802,
											"end": 26826,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 26802,
											"end": 26826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26793,
											"end": 26826,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26793,
											"end": 26826,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26848,
											"end": 26914,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26841,
											"end": 26846,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26838,
											"end": 26915,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 26835,
											"end": 26938,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 26835,
											"end": 26938,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 26918,
											"end": 26936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 26918,
											"end": 26936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 26918,
											"end": 26936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26918,
											"end": 26936,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 26918,
											"end": 26936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26835,
											"end": 26938,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 26835,
											"end": 26938,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26965,
											"end": 26966,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 26958,
											"end": 26963,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26954,
											"end": 26967,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26947,
											"end": 26967,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26947,
											"end": 26967,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26740,
											"end": 26973,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26740,
											"end": 26973,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26740,
											"end": 26973,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26740,
											"end": 26973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26979,
											"end": 27161,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 26979,
											"end": 27161,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27119,
											"end": 27153,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 27115,
											"end": 27116,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27107,
											"end": 27113,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27103,
											"end": 27117,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27096,
											"end": 27154,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 26979,
											"end": 27161,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26979,
											"end": 27161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27167,
											"end": 27533,
											"name": "tag",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 27167,
											"end": 27533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27309,
											"end": 27312,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27330,
											"end": 27397,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 27394,
											"end": 27396,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 27389,
											"end": 27392,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27330,
											"end": 27397,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 27330,
											"end": 27397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27330,
											"end": 27397,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 27330,
											"end": 27397,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27323,
											"end": 27397,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 27323,
											"end": 27397,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27406,
											"end": 27499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 27495,
											"end": 27498,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27406,
											"end": 27499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 27406,
											"end": 27499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27406,
											"end": 27499,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 27406,
											"end": 27499,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27524,
											"end": 27526,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 27519,
											"end": 27522,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27515,
											"end": 27527,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27508,
											"end": 27527,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27508,
											"end": 27527,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27167,
											"end": 27533,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 27167,
											"end": 27533,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27167,
											"end": 27533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27167,
											"end": 27533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27539,
											"end": 27958,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 27539,
											"end": 27958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27705,
											"end": 27709,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27743,
											"end": 27745,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 27732,
											"end": 27741,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27728,
											"end": 27746,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27720,
											"end": 27746,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27720,
											"end": 27746,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27792,
											"end": 27801,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 27786,
											"end": 27790,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 27782,
											"end": 27802,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 27778,
											"end": 27779,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27767,
											"end": 27776,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27763,
											"end": 27780,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27756,
											"end": 27803,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 27820,
											"end": 27951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 27946,
											"end": 27950,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 27820,
											"end": 27951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 27820,
											"end": 27951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27820,
											"end": 27951,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 27820,
											"end": 27951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27812,
											"end": 27951,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27812,
											"end": 27951,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27539,
											"end": 27958,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 27539,
											"end": 27958,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27539,
											"end": 27958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27539,
											"end": 27958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27964,
											"end": 28189,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 27964,
											"end": 28189,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28104,
											"end": 28138,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 28100,
											"end": 28101,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28092,
											"end": 28098,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28088,
											"end": 28102,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28081,
											"end": 28139,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 28173,
											"end": 28181,
											"name": "PUSH",
											"source": 13,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28168,
											"end": 28170,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 28160,
											"end": 28166,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28156,
											"end": 28171,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28149,
											"end": 28182,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 27964,
											"end": 28189,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27964,
											"end": 28189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28195,
											"end": 28561,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 28195,
											"end": 28561,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28337,
											"end": 28340,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28358,
											"end": 28425,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 28422,
											"end": 28424,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 28417,
											"end": 28420,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 28358,
											"end": 28425,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 28358,
											"end": 28425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28358,
											"end": 28425,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 28358,
											"end": 28425,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28351,
											"end": 28425,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 28351,
											"end": 28425,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28434,
											"end": 28527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 28523,
											"end": 28526,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28434,
											"end": 28527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 28434,
											"end": 28527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28434,
											"end": 28527,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 28434,
											"end": 28527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28552,
											"end": 28554,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 28547,
											"end": 28550,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28543,
											"end": 28555,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28536,
											"end": 28555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28536,
											"end": 28555,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28195,
											"end": 28561,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 28195,
											"end": 28561,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28195,
											"end": 28561,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28195,
											"end": 28561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28567,
											"end": 28986,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 28567,
											"end": 28986,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28733,
											"end": 28737,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28771,
											"end": 28773,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 28760,
											"end": 28769,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28756,
											"end": 28774,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28748,
											"end": 28774,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28748,
											"end": 28774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28820,
											"end": 28829,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28814,
											"end": 28818,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28810,
											"end": 28830,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 28806,
											"end": 28807,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28795,
											"end": 28804,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 28791,
											"end": 28808,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28784,
											"end": 28831,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 28848,
											"end": 28979,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 28974,
											"end": 28978,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28848,
											"end": 28979,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 28848,
											"end": 28979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28848,
											"end": 28979,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 28848,
											"end": 28979,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28840,
											"end": 28979,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28840,
											"end": 28979,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28567,
											"end": 28986,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 28567,
											"end": 28986,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28567,
											"end": 28986,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28567,
											"end": 28986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/plugins/StaterTransfers.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferItems(address,address,address[],uint256[],uint8[])": "407299d7",
							"transferOwnership(address)": "f2fde38b",
							"transferTokens(address,address,address,uint256,uint256)": "2e3f4a5d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"nftAddressArray\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftTokenIdArray\",\"type\":\"uint256[]\"},{\"internalType\":\"uint8[]\",\"name\":\"nftTokenTypeArray\",\"type\":\"uint8[]\"}],\"name\":\"transferItems\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"qty1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty2\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/plugins/StaterTransfers.sol\":\"StaterTransfers\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/plugins/StaterTransfers.sol\":{\"keccak256\":\"0x2b356031f5bffcf643d1d9d1bc4b347876e45b8ab49d7c177e80a1560ce36b5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc748c5f0dd66ee67ab6c95f481b207f647c5454996b9eff96aacff38ba01334\",\"dweb:/ipfs/QmNfpmcpU7iYnMKUkWdpAeeEaDoGEC8VSbf76Mue3QupQj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/plugins/StaterTransfers.sol:StaterTransfers",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							613
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 614,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 613,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								613
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							226
						],
						"IERC165": [
							649
						]
					},
					"id": 227,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 227,
							"sourceUnit": 650,
							"src": "120:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 109,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 649,
										"src": "357:7:1"
									},
									"id": 110,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:1"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 108,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:1",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 226,
							"linearizedBaseContracts": [
								226,
								649
							],
							"name": "IERC1155",
							"nameLocation": "345:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:1",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 123,
									"name": "TransferSingle",
									"nameLocation": "503:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "518:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "544:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "566:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "586:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "598:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:1"
									},
									"src": "497:116:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:1",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 138,
									"name": "TransferBatch",
									"nameLocation": "774:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "797:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "831:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "861:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "889:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 131,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 132,
													"nodeType": "ArrayTypeName",
													"src": "889:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "912:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 134,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 135,
													"nodeType": "ArrayTypeName",
													"src": "912:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:1"
									},
									"src": "768:167:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:1",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 147,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "1114:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "1139:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "1165:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:1"
									},
									"src": "1093:87:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:1",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 154,
									"name": "URI",
									"nameLocation": "1540:3:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1544:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1558:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:1"
									},
									"src": "1534:44:1"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:1",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1781:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1798:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1833:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:1"
									},
									"scope": 226,
									"src": "1762:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2065:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 166,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 167,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2094:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 169,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 170,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2165:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 173,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 174,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:1"
									},
									"scope": 226,
									"src": "2041:142:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:1",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "2469:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "2487:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 181,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:1"
									},
									"scope": 226,
									"src": "2442:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:1",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2683:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2700:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2741:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:1"
									},
									"scope": 226,
									"src": "2657:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:1",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3352:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3374:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3394:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3414:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3438:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 205,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:1"
									},
									"scope": 226,
									"src": "3317:156:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "3914:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "3936:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "3956:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 215,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 216,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "3988:26:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 218,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 219,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "4024:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 221,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:1"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:1"
									},
									"scope": 226,
									"src": "3874:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 227,
							"src": "335:3726:1",
							"usedErrors": []
						}
					],
					"src": "95:3967:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							267
						],
						"IERC165": [
							649
						]
					},
					"id": 268,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 228,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 268,
							"sourceUnit": 650,
							"src": "143:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 231,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 649,
										"src": "262:7:2"
									},
									"id": 232,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:2"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 230,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 267,
							"linearizedBaseContracts": [
								267,
								649
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:2",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1143:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1169:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1191:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1211:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1234:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:2"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1278:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 245,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:2"
									},
									"scope": 267,
									"src": "1107:179:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:2",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 266,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2332:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2358:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2380:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 254,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 255,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2412:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 257,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 258,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2447:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:2"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2491:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 263,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:2"
									},
									"scope": 267,
									"src": "2291:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 268,
							"src": "232:2269:2",
							"usedErrors": []
						}
					],
					"src": "118:2384:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
					"exportedSymbols": {
						"ERC1155Holder": [
							318
						],
						"ERC1155Receiver": [
							352
						],
						"ERC165": [
							637
						],
						"IERC1155Receiver": [
							267
						],
						"IERC165": [
							649
						]
					},
					"id": 319,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 269,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "121:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
							"file": "./ERC1155Receiver.sol",
							"id": 270,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 319,
							"sourceUnit": 353,
							"src": "146:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 272,
										"name": "ERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 352,
										"src": "477:15:3"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "477:15:3"
								}
							],
							"canonicalName": "ERC1155Holder",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 271,
								"nodeType": "StructuredDocumentation",
								"src": "179:271:3",
								"text": " Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n stuck.\n @dev _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 318,
							"linearizedBaseContracts": [
								318,
								352,
								267,
								637,
								649
							],
							"name": "ERC1155Holder",
							"nameLocation": "460:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										248
									],
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "663:55:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 289,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "680:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$318",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC1155Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 294,
														"src": "680:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "680:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 288,
												"id": 292,
												"nodeType": "Return",
												"src": "673:38:3"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "508:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 285,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "637:8:3"
									},
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "535:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "552:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "569:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "586:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "603:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 282,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "603:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:96:3"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "655:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 286,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "655:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:8:3"
									},
									"scope": 318,
									"src": "499:219:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										266
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "911:60:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 312,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "928:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$318",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC1155BatchReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 317,
														"src": "928:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "928:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 311,
												"id": 315,
												"nodeType": "Return",
												"src": "921:43:3"
											}
										]
									},
									"functionSelector": "bc197c81",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "733:22:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 308,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "885:8:3"
									},
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "765:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "782:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "799:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 299,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "799:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 300,
													"nodeType": "ArrayTypeName",
													"src": "799:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "825:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 302,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "825:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 303,
													"nodeType": "ArrayTypeName",
													"src": "825:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "851:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "851:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:114:3"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "903:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 309,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "903:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:8:3"
									},
									"scope": 318,
									"src": "724:247:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 319,
							"src": "451:522:3",
							"usedErrors": []
						}
					],
					"src": "121:853:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
					"exportedSymbols": {
						"ERC1155Receiver": [
							352
						],
						"ERC165": [
							637
						],
						"IERC1155Receiver": [
							267
						],
						"IERC165": [
							649
						]
					},
					"id": 353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 320,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "../IERC1155Receiver.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 268,
							"src": "133:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 638,
							"src": "167:49:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 324,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 637,
										"src": "295:6:4"
									},
									"id": 325,
									"nodeType": "InheritanceSpecifier",
									"src": "295:6:4"
								},
								{
									"baseName": {
										"id": 326,
										"name": "IERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 267,
										"src": "303:16:4"
									},
									"id": 327,
									"nodeType": "InheritanceSpecifier",
									"src": "303:16:4"
								}
							],
							"canonicalName": "ERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 323,
								"nodeType": "StructuredDocumentation",
								"src": "218:39:4",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 352,
							"linearizedBaseContracts": [
								352,
								267,
								637,
								649
							],
							"name": "ERC1155Receiver",
							"nameLocation": "276:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										636,
										648
									],
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "495:113:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 338,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "512:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 340,
																		"name": "IERC1155Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "532:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$267_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$267_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	],
																	"id": 339,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "527:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "527:22:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$267",
																	"typeString": "type(contract IERC1155Receiver)"
																}
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "527:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "512:49:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 346,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "589:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 344,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "565:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155Receiver_$352_$",
																	"typeString": "type(contract super ERC1155Receiver)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 636,
															"src": "565:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "565:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "512:89:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 337,
												"id": 349,
												"nodeType": "Return",
												"src": "505:96:4"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "326:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "396:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 334,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 332,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 637,
												"src": "463:6:4"
											},
											{
												"id": 333,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 649,
												"src": "471:7:4"
											}
										],
										"src": "454:25:4"
									},
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "421:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "414:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 329,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "414:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:20:4"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "489:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 335,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "489:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:6:4"
									},
									"scope": 352,
									"src": "387:221:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 353,
							"src": "258:352:4",
							"usedErrors": []
						}
					],
					"src": "108:503:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							430
						]
					},
					"id": 431,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 355,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 430,
							"linearizedBaseContracts": [
								430
							],
							"name": "IERC20",
							"nameLocation": "212:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 364,
									"name": "Transfer",
									"nameLocation": "394:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "403:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "425:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "445:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:5"
									},
									"src": "388:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 373,
									"name": "Approval",
									"nameLocation": "625:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "634:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "657:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "682:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:5"
									},
									"src": "619:78:5"
								},
								{
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 430,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 430,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1211:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1223:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:5"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1257:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:5"
									},
									"scope": 430,
									"src": "1193:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1557:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1572:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:5"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1612:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:5"
									},
									"scope": 430,
									"src": "1538:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "2291:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "2308:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:5"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "2342:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:5"
									},
									"scope": 430,
									"src": "2274:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:5",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "2677:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "2699:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "2719:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:5"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "2758:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:5"
									},
									"scope": 430,
									"src": "2646:118:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 431,
							"src": "202:2564:5",
							"usedErrors": []
						}
					],
					"src": "106:2661:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							649
						],
						"IERC721": [
							546
						]
					},
					"id": 547,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 432,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 433,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 547,
							"sourceUnit": 650,
							"src": "133:47:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 435,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 649,
										"src": "271:7:6"
									},
									"id": 436,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 434,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 546,
							"linearizedBaseContracts": [
								546,
								649
							],
							"name": "IERC721",
							"nameLocation": "260:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 445,
									"name": "Transfer",
									"nameLocation": "384:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "393:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "415:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "435:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:6"
									},
									"src": "378:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 454,
									"name": "Approval",
									"nameLocation": "571:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "580:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "603:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "629:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:6"
									},
									"src": "565:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 463,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "803:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "826:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "852:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 460,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:6"
									},
									"src": "782:85:6"
								},
								{
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "973:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:6"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "1011:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:6"
									},
									"scope": 546,
									"src": "954:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1187:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:6"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1227:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:6"
									},
									"scope": 546,
									"src": "1170:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 491,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1844:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1866:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1886:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1911:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:6"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:6"
									},
									"scope": 546,
									"src": "1809:137:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "1952:690:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2656:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2690:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "2682:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2712:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "2704:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2732:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "2724:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2672:73:6"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2754:0:6"
									},
									"scope": 546,
									"src": "2647:108:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "2761:504:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3279:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3309:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "3301:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3331:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "3323:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3351:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "3343:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:73:6"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:6"
									},
									"scope": 546,
									"src": "3270:104:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "3380:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3846:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3862:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3854:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3874:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3866:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:29:6"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3891:0:6"
									},
									"scope": 546,
									"src": "3837:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "3898:309:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4221:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4247:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "4239:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4262:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "4257:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 523,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4257:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:34:6"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4281:0:6"
									},
									"scope": 546,
									"src": "4212:70:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "4288:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4441:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4461:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "4453:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4452:17:6"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4501:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "4493:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:18:6"
									},
									"scope": 546,
									"src": "4432:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "4517:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4669:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4694:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "4686:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4686:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4709:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "4701:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4685:33:6"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "4742:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 542,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4742:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:6:6"
									},
									"scope": 546,
									"src": "4660:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 547,
							"src": "250:4500:6",
							"usedErrors": []
						}
					],
					"src": "108:4643:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							564
						]
					},
					"id": 565,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 548,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 549,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:7",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 564,
							"linearizedBaseContracts": [
								564
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "859:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "885:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "907:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "932:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 557,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:7"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "976:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 560,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:7"
									},
									"scope": 564,
									"src": "824:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 565,
							"src": "294:692:7",
							"usedErrors": []
						}
					],
					"src": "116:871:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
					"exportedSymbols": {
						"ERC721Holder": [
							591
						],
						"IERC721Receiver": [
							564
						]
					},
					"id": 592,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 566,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "../IERC721Receiver.sol",
							"id": 567,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 592,
							"sourceUnit": 565,
							"src": "129:32:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 569,
										"name": "IERC721Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 564,
										"src": "424:15:8"
									},
									"id": 570,
									"nodeType": "InheritanceSpecifier",
									"src": "424:15:8"
								}
							],
							"canonicalName": "ERC721Holder",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 568,
								"nodeType": "StructuredDocumentation",
								"src": "163:235:8",
								"text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
							},
							"fullyImplemented": true,
							"id": 591,
							"linearizedBaseContracts": [
								591,
								564
							],
							"name": "ERC721Holder",
							"nameLocation": "408:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										563
									],
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "734:54:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 585,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "751:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721Holder_$591",
																"typeString": "contract ERC721Holder"
															}
														},
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 590,
														"src": "751:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "751:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 584,
												"id": 588,
												"nodeType": "Return",
												"src": "744:37:8"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "446:137:8",
										"text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "597:16:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 581,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "708:8:8"
									},
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "623:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "640:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "657:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "674:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 578,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:79:8"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "726:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 582,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "726:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:8:8"
									},
									"scope": 591,
									"src": "588:200:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 592,
							"src": "399:391:8",
							"usedErrors": []
						}
					],
					"src": "104:687:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							613
						]
					},
					"id": 614,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 593,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 594,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 613,
							"linearizedBaseContracts": [
								613
							],
							"name": "Context",
							"nameLocation": "626:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "702:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 599,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 598,
												"id": 601,
												"nodeType": "Return",
												"src": "712:17:9"
											}
										]
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:9"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "693:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:9"
									},
									"scope": 613,
									"src": "640:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "809:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 608,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 607,
												"id": 610,
												"nodeType": "Return",
												"src": "819:15:9"
											}
										]
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:9"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "793:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 605,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:9"
									},
									"scope": 613,
									"src": "742:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 614,
							"src": "608:235:9",
							"usedErrors": []
						}
					],
					"src": "86:758:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							637
						],
						"IERC165": [
							649
						]
					},
					"id": 638,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 615,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 616,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 638,
							"sourceUnit": 650,
							"src": "124:23:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 618,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 649,
										"src": "754:7:10"
									},
									"id": 619,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 617,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 637,
							"linearizedBaseContracts": [
								637,
								649
							],
							"name": "ERC165",
							"nameLocation": "744:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										648
									],
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "920:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 628,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "937:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 630,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "957:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$649_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$649_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 629,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$649",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 627,
												"id": 634,
												"nodeType": "Return",
												"src": "930:47:10"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 624,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:10"
									},
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "856:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 621,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:10"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "914:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 625,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:10"
									},
									"scope": 637,
									"src": "829:155:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 638,
							"src": "726:260:10",
							"usedErrors": []
						}
					],
					"src": "99:888:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							649
						]
					},
					"id": 650,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 639,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 640,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 649,
							"linearizedBaseContracts": [
								649
							],
							"name": "IERC165",
							"nameLocation": "415:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 648,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "801:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 642,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:11"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "844:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 645,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:11"
									},
									"scope": 649,
									"src": "774:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 650,
							"src": "405:447:11",
							"usedErrors": []
						}
					],
					"src": "100:753:11"
				},
				"id": 11
			},
			"contracts/plugins/StaterTransfers.sol": {
				"ast": {
					"absolutePath": "contracts/plugins/StaterTransfers.sol",
					"exportedSymbols": {
						"Context": [
							613
						],
						"ERC1155Holder": [
							318
						],
						"ERC1155Receiver": [
							352
						],
						"ERC165": [
							637
						],
						"ERC721Holder": [
							591
						],
						"IERC1155": [
							226
						],
						"IERC1155Receiver": [
							267
						],
						"IERC165": [
							649
						],
						"IERC20": [
							430
						],
						"IERC721": [
							546
						],
						"IERC721Receiver": [
							564
						],
						"Ownable": [
							104
						],
						"StaterTransfers": [
							812
						]
					},
					"id": 813,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 651,
							"literals": [
								"solidity",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"id": 652,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 813,
							"sourceUnit": 227,
							"src": "56:60:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 653,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 813,
							"sourceUnit": 105,
							"src": "117:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 654,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 813,
							"sourceUnit": 431,
							"src": "170:56:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 655,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 813,
							"sourceUnit": 547,
							"src": "227:58:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
							"file": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
							"id": 656,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 813,
							"sourceUnit": 592,
							"src": "286:69:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"id": 657,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 813,
							"sourceUnit": 319,
							"src": "356:71:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 658,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "458:7:12"
									},
									"id": 659,
									"nodeType": "InheritanceSpecifier",
									"src": "458:7:12"
								},
								{
									"baseName": {
										"id": 660,
										"name": "ERC721Holder",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 591,
										"src": "467:12:12"
									},
									"id": 661,
									"nodeType": "InheritanceSpecifier",
									"src": "467:12:12"
								},
								{
									"baseName": {
										"id": 662,
										"name": "ERC1155Holder",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 318,
										"src": "481:13:12"
									},
									"id": 663,
									"nodeType": "InheritanceSpecifier",
									"src": "481:13:12"
								}
							],
							"canonicalName": "StaterTransfers",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 812,
							"linearizedBaseContracts": [
								812,
								318,
								352,
								267,
								637,
								649,
								591,
								564,
								104,
								613
							],
							"name": "StaterTransfers",
							"nameLocation": "439:15:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "782:548:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 676,
														"name": "currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "795:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "815:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "807:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 677,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "807:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "807:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "795:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 728,
													"nodeType": "Block",
													"src": "1159:165:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 711,
																				"name": "qty1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 671,
																				"src": "1187:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 709,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 667,
																				"src": "1179:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "send",
																			"nodeType": "MemberAccess",
																			"src": "1179:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (uint256) returns (bool)"
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1179:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e73666572206f662045544820746f207265636569766572206661696c6564",
																		"id": 713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1194:36:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54",
																			"typeString": "literal_string \"Transfer of ETH to receiver failed\""
																		},
																		"value": "Transfer of ETH to receiver failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54",
																			"typeString": "literal_string \"Transfer of ETH to receiver failed\""
																		}
																	],
																	"id": 708,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1171:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1171:60:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 715,
															"nodeType": "ExpressionStatement",
															"src": "1171:60:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 723,
																				"name": "qty2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 673,
																				"src": "1273:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 719,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 32,
																							"src": "1259:5:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																								"typeString": "function () view returns (address)"
																							}
																						},
																						"id": 720,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1259:7:12",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 718,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1251:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_payable_$",
																						"typeString": "type(address payable)"
																					},
																					"typeName": {
																						"id": 717,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "1251:8:12",
																						"stateMutability": "payable",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1251:16:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"id": 722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "send",
																			"nodeType": "MemberAccess",
																			"src": "1251:21:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (uint256) returns (bool)"
																			}
																		},
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1251:27:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e73666572206f662045544820746f20537461746572206661696c6564",
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1280:34:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea",
																			"typeString": "literal_string \"Transfer of ETH to Stater failed\""
																		},
																		"value": "Transfer of ETH to Stater failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea",
																			"typeString": "literal_string \"Transfer of ETH to Stater failed\""
																		}
																	],
																	"id": 716,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1243:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1243:72:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 727,
															"nodeType": "ExpressionStatement",
															"src": "1243:72:12"
														}
													]
												},
												"id": 729,
												"nodeType": "IfStatement",
												"src": "790:534:12",
												"trueBody": {
													"id": 707,
													"nodeType": "Block",
													"src": "819:336:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 687,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 665,
																				"src": "884:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 688,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 667,
																				"src": "904:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			{
																				"id": 689,
																				"name": "qty1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 671,
																				"src": "923:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 684,
																						"name": "currency",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 669,
																						"src": "846:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 683,
																					"name": "IERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 430,
																					"src": "839:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC20_$430_$",
																						"typeString": "type(contract IERC20)"
																					}
																				},
																				"id": 685,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "839:16:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$430",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "transferFrom",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 429,
																			"src": "839:29:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,address,uint256) external returns (bool)"
																			}
																		},
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "839:100:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e73666572206f6620746f6b656e7320746f207265636569766572206661696c6564",
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "941:39:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5",
																			"typeString": "literal_string \"Transfer of tokens to receiver failed\""
																		},
																		"value": "Transfer of tokens to receiver failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5",
																			"typeString": "literal_string \"Transfer of tokens to receiver failed\""
																		}
																	],
																	"id": 682,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "831:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "831:150:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 693,
															"nodeType": "ExpressionStatement",
															"src": "831:150:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 699,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 665,
																				"src": "1046:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 700,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 32,
																					"src": "1066:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1066:7:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 702,
																				"name": "qty2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 673,
																				"src": "1090:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 696,
																						"name": "currency",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 669,
																						"src": "1008:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 695,
																					"name": "IERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 430,
																					"src": "1001:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC20_$430_$",
																						"typeString": "type(contract IERC20)"
																					}
																				},
																				"id": 697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1001:16:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$430",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "transferFrom",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 429,
																			"src": "1001:29:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,address,uint256) external returns (bool)"
																			}
																		},
																		"id": 703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1001:105:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e73666572206f6620746f6b656e7320746f20537461746572206661696c6564",
																		"id": 704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1108:37:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e",
																			"typeString": "literal_string \"Transfer of tokens to Stater failed\""
																		},
																		"value": "Transfer of tokens to Stater failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e",
																			"typeString": "literal_string \"Transfer of tokens to Stater failed\""
																		}
																	],
																	"id": 694,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "993:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "993:153:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 706,
															"nodeType": "ExpressionStatement",
															"src": "993:153:12"
														}
													]
												}
											}
										]
									},
									"functionSelector": "2e3f4a5d",
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "634:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "666:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "658:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "696:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "680:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "680:15:12",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "716:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "708:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "qty1",
												"nameLocation": "742:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "734:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "qty2",
												"nameLocation": "764:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "756:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:126:12"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "782:0:12"
									},
									"scope": 812,
									"src": "625:705:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "1634:680:12",
										"statements": [
											{
												"assignments": [
													748
												],
												"declarations": [
													{
														"constant": false,
														"id": 748,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1652:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 810,
														"src": "1644:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 747,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1644:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 751,
												"initialValue": {
													"expression": {
														"id": 749,
														"name": "nftAddressArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "1661:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1661:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1644:39:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 753,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "1701:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 754,
																		"name": "nftTokenIdArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 741,
																		"src": "1711:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1711:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1701:32:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 757,
																		"name": "nftTokenTypeArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 744,
																		"src": "1737:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																			"typeString": "uint8[] memory"
																		}
																	},
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1737:24:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 759,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "1765:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1737:34:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1701:70:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20696e666f732070726f76696465642061726520696e76616c6964",
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1773:34:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1",
																"typeString": "literal_string \"Token infos provided are invalid\""
															},
															"value": "Token infos provided are invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1",
																"typeString": "literal_string \"Token infos provided are invalid\""
															}
														],
														"id": 752,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1693:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1693:115:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "1693:115:12"
											},
											{
												"body": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 775,
																"name": "nftTokenTypeArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "1872:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																	"typeString": "uint8[] memory"
																}
															},
															"id": 777,
															"indexExpression": {
																"id": 776,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "1890:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1872:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1896:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1872:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"expression": {
															"arguments": [
																{
																	"id": 799,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "2170:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 800,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "2196:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"baseExpression": {
																		"id": 801,
																		"name": "nftTokenIdArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 741,
																		"src": "2220:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 803,
																	"indexExpression": {
																		"id": 802,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "2236:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2220:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "31",
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2260:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																{
																	"hexValue": "30783030",
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																		"typeString": "literal_string \"0x00\""
																	},
																	"value": "0x00"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																		"typeString": "literal_string \"0x00\""
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 794,
																				"name": "nftAddressArray",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 738,
																				"src": "2112:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 796,
																			"indexExpression": {
																				"id": 795,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 766,
																				"src": "2128:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2112:18:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 793,
																		"name": "IERC1155",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 226,
																		"src": "2103:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1155_$226_$",
																			"typeString": "type(contract IERC1155)"
																		}
																	},
																	"id": 797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2103:28:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1155_$226",
																		"typeString": "contract IERC1155"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "safeTransferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 209,
																"src": "2103:45:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (address,address,uint256,uint256,bytes memory) external"
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2103:204:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 807,
														"nodeType": "ExpressionStatement",
														"src": "2103:204:12"
													},
													"id": 808,
													"nodeType": "IfStatement",
													"src": "1867:440:12",
													"trueBody": {
														"expression": {
															"arguments": [
																{
																	"id": 786,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "1982:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 787,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "2008:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"baseExpression": {
																		"id": 788,
																		"name": "nftTokenIdArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 741,
																		"src": "2032:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 790,
																	"indexExpression": {
																		"id": 789,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "2048:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2032:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 781,
																				"name": "nftAddressArray",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 738,
																				"src": "1924:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 783,
																			"indexExpression": {
																				"id": 782,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 766,
																				"src": "1940:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1924:18:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 780,
																		"name": "IERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "1916:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721_$546_$",
																			"typeString": "type(contract IERC721)"
																		}
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1916:27:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721_$546",
																		"typeString": "contract IERC721"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "safeTransferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 501,
																"src": "1916:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256) external"
																}
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1916:152:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 792,
														"nodeType": "ExpressionStatement",
														"src": "1916:152:12"
													}
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 769,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "1837:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 770,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "1841:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1837:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 809,
												"initializationExpression": {
													"assignments": [
														766
													],
													"declarations": [
														{
															"constant": false,
															"id": 766,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1830:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 809,
															"src": "1822:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 765,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1822:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 768,
													"initialValue": {
														"hexValue": "30",
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1834:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1822:13:12"
												},
												"loopExpression": {
													"expression": {
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "1849:3:12",
														"subExpression": {
															"id": 772,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "1851:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 774,
													"nodeType": "ExpressionStatement",
													"src": "1849:3:12"
												},
												"nodeType": "ForStatement",
												"src": "1818:489:12"
											}
										]
									},
									"functionSelector": "407299d7",
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferItems",
									"nameLocation": "1436:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1467:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "1459:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1459:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1490:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "1482:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1482:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "nftAddressArray",
												"nameLocation": "1520:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "1503:32:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 736,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1503:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 737,
													"nodeType": "ArrayTypeName",
													"src": "1503:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "nftTokenIdArray",
												"nameLocation": "1563:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "1546:32:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 739,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1546:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 740,
													"nodeType": "ArrayTypeName",
													"src": "1546:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "nftTokenTypeArray",
												"nameLocation": "1603:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "1588:32:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
													"typeString": "uint8[]"
												},
												"typeName": {
													"baseType": {
														"id": 742,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "1588:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 743,
													"nodeType": "ArrayTypeName",
													"src": "1588:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
														"typeString": "uint8[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1449:177:12"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1634:0:12"
									},
									"scope": 812,
									"src": "1427:887:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 813,
							"src": "430:1887:12",
							"usedErrors": []
						}
					],
					"src": "32:2285:12"
				},
				"id": 12
			}
		}
	}
}