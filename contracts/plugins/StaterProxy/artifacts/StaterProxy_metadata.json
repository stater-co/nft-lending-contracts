{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "boilerplate",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "input",
						"type": "bytes"
					}
				],
				"name": "delegateCall",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "empty",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "onBehalfOf",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "bytes4",
						"name": "method",
						"type": "bytes4"
					}
				],
				"name": "forcefullyUpdateBoilerplate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "bytes4",
						"name": "method",
						"type": "bytes4"
					}
				],
				"name": "updateBoilerplate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "input",
						"type": "bytes"
					}
				],
				"name": "vanillaCall",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/plugins/StaterProxy/StaterProxy.sol": "StaterProxy"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/libs/openzeppelin-solidity/contracts/access/Ownable.sol": {
			"keccak256": "0x549c5343ad9f7e3f38aa4c4761854403502574bbc15b822db2ce892ff9b79da7",
			"license": "MIT",
			"urls": [
				"bzz-raw://19c0dfbf7bb7744af0c03156e372d0096e0d07de8805ead7722243b8b42276a3",
				"dweb:/ipfs/QmPEFDvi6mJZ3sVii3uBs3CQzAARXPFwCKiHG5zkiCmC4V"
			]
		},
		"contracts/libs/openzeppelin-solidity/contracts/utils/Context.sol": {
			"keccak256": "0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0",
			"license": "MIT",
			"urls": [
				"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f",
				"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96"
			]
		},
		"contracts/plugins/StaterProxy/ProxyCore.sol": {
			"keccak256": "0xfdf7528d825436a7120c6e1d3756dfda45400d881a1aef39c81be1a1ef5ea41b",
			"license": "MIT",
			"urls": [
				"bzz-raw://b10b342a5956c326abef00beddc2033864084b7ac05ef0a857126ff052667c63",
				"dweb:/ipfs/Qmf8TnGm5r5FJHrHgnWh5ywobxXVZV2xMYefkpWRmDsrt3"
			]
		},
		"contracts/plugins/StaterProxy/StaterProxy.sol": {
			"keccak256": "0x7866a7e0f1f3067b381506b67c79d869b80bca5ed13a163473ab73f2aed7424e",
			"license": "MIT",
			"urls": [
				"bzz-raw://1109ee1ce5dbb1554a0f7a2cd9b9444c288e036a6f598dc382bad559c98feee6",
				"dweb:/ipfs/QmbsAziV5Zxedqgz5gTzpegzUbfcMjVvRHAs23vsFP7bcT"
			]
		},
		"contracts/plugins/StaterProxy/StaterProxyAdmin.sol": {
			"keccak256": "0x366ee0f0aa329381f0216e112b993cd7655ef9faca9a78d4549126b9459ed1bf",
			"license": "MIT",
			"urls": [
				"bzz-raw://ccc99b59b8fc2cb96d8b3987473b04686f3b84937cb57473a6161e8847ceaf21",
				"dweb:/ipfs/QmT13tmik2iGumrUs4BSvi7byG8GR1yMztvbEpX31GatFK"
			]
		}
	},
	"version": 1
}