{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "boilerplate",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "input",
						"type": "bytes"
					}
				],
				"name": "delegateCall",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "empty",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "onBehalfOf",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "bytes4",
						"name": "method",
						"type": "bytes4"
					}
				],
				"name": "forcefullyUpdateBoilerplate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "bytes4",
						"name": "method",
						"type": "bytes4"
					}
				],
				"name": "updateBoilerplate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "input",
						"type": "bytes"
					}
				],
				"name": "vanillaCall",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/plugins/StaterProxy/StaterProxy.sol": "StaterProxy"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/libs/openzeppelin-solidity/contracts/access/Ownable.sol": {
			"keccak256": "0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1",
			"license": "MIT",
			"urls": [
				"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163",
				"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro"
			]
		},
		"contracts/libs/openzeppelin-solidity/contracts/utils/Context.sol": {
			"keccak256": "0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f",
			"license": "MIT",
			"urls": [
				"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c",
				"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux"
			]
		},
		"contracts/plugins/StaterProxy/ProxyCore.sol": {
			"keccak256": "0xbfc959a3aaddba1af7e9e296ecc87472e0c7b6ecf5f0a57866ea7469c4656622",
			"license": "MIT",
			"urls": [
				"bzz-raw://5bc03a2483e100355e3b9c7bd78e69130e3078b1442c95340f29360e7e34daf4",
				"dweb:/ipfs/QmS9hYUYvc27KUjWfPyJH4xV4KzAbkiBvFPNuwU6ZhJ6j7"
			]
		},
		"contracts/plugins/StaterProxy/StaterProxy.sol": {
			"keccak256": "0xa95d44775ff36d51c92ee5e9e8e4e1a116a0992ea90317299d319ca6fe807eea",
			"license": "MIT",
			"urls": [
				"bzz-raw://baa9ceb7c281c4811a26091f2930f7ef03f352cbe22a3ba01a898775f5dff617",
				"dweb:/ipfs/QmUqCdxtbpj2etwnQV4YMEjenfRx8NyrnoTspa5swvdNWg"
			]
		},
		"contracts/plugins/StaterProxy/StaterProxyAdmin.sol": {
			"keccak256": "0xe9cda5ce5d2aec11f066d002fe6b57a0ce4e55b252d364d0da15ed9bc82e3138",
			"license": "MIT",
			"urls": [
				"bzz-raw://ab84218eef1879fa2df01b8ad16d5735932bb513e84c4786e82dea0065c78834",
				"dweb:/ipfs/QmWytBzE5YauFt6bPmnP8DA3ABY1P8j5AFfbf23qDzQhQr"
			]
		}
	},
	"version": 1
}