{
	"id": "dfb7b20c12b978491e2ccd309a526cdd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/lending/LendingCore.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.15;\nimport \"../plugins/StaterTransfers.sol\";\nimport \"../workers/IStaterDiscounts.sol\";\n\ncontract LendingCore is StaterTransfers {\n    \n    /*\n     * @DIIMIIM : The loan events\n     */\n    event NewLoan(\n        address indexed owner,\n        address indexed currency,\n        uint256 indexed loanId,\n        address[] nftAddressArray,\n        uint256[] nftTokenIdArray,\n        uint8[] nftTokenTypeArray\n    );\n    event EditLoan(\n        address indexed currency,\n        uint256 indexed loanId,\n        uint256 loanAmount,\n        uint256 amountDue,\n        uint256 installmentAmount,\n        uint256 assetsValue,\n        uint256 frequencyTime,\n        uint256 frequencyTimeUnit\n    );\n    event LoanApproved(\n        address indexed lender,\n        uint256 indexed loanId,\n        uint256 loanPaymentEnd\n    );\n    event LoanCancelled(\n        uint256 indexed loanId\n    );\n    event ItemsWithdrawn(\n        address indexed requester,\n        uint256 indexed loanId,\n        Status status\n    );\n    event LoanPayment(\n        uint256 indexed loanId,\n        uint256 installmentAmount,\n        uint256 amountPaidAsInstallmentToLender,\n        uint256 interestPerInstallement,\n        uint256 interestToStaterPerInstallement,\n        Status status\n    );\n    \n    /*\n     * @DIIMIIM Public & global variables for the lending contract\n     * id : the loan ID, id will be the actual loans mapping length\n     * ltv : max allowed 60%\n     * interestRate : 20% of the payment\n     * interestRateToStater : 40% of interestRate\n     * discountNft : 50% discount\n     * discountGeyser : 5% discount\n     * lenderFee : 1%\n     * Status : provides the loans status \n     *   LISTED - loan is created and visible on lending.stater.co\n     *   APPROVED - lender found and assigned to loan\n     *   LIQUIDATED - all loan payments are paid\n     *   CANCELLED - loan is cancelled before a lender to be assigned\n     *   WITHDRAWN - loan is LIQUIDATED and items are withdrawn to either lender or borrower\n     */\n    address public promissoryNoteAddress;\n    address public lendingMethodsAddress;\n    IStaterDiscounts public discounts;\n    uint256 public id = 1; // the loan ID\n    uint256 public ltv = 60; // 60%\n    uint256 public interestRate = 20;\n    uint256 public interestRateToStater = 40;\n    uint32 public lenderFee = 100;\n    enum Status{ \n        LISTED, \n        APPROVED, \n        LIQUIDATED, \n        CANCELLED, \n        WITHDRAWN \n    }\n    \n    \n    /*\n     * @DIIMIIM : The loan structure\n     */\n    struct Loan {\n        address[] nftAddressArray; // the adderess of the ERC721\n        address payable borrower; // the address who receives the loan\n        address payable lender; // the address who gives/offers the loan to the borrower\n        address currency; // the token that the borrower lends, address(0) for ETH\n        Status status; // the loan status\n        uint256[] nftTokenIdArray; // the unique identifier of the NFT token that the borrower uses as collateral\n        uint256 installmentTime; // the installment unix timestamp\n        uint256 nrOfPayments; // the number of installments paid\n        uint256 loanAmount; // the amount, denominated in tokens (see next struct entry), the borrower lends\n        uint256 assetsValue; // important for determintng LTV which has to be under 50-60%\n        uint256[2] startEnd; // startEnd[0] loan start date , startEnd[1] loan end date\n        uint256 installmentAmount; // amount expected for each installment\n        uint256 amountDue; // loanAmount + interest that needs to be paid back by borrower\n        uint256 paidAmount; // the amount that has been paid back to the lender to date\n        uint16 nrOfInstallments; // the number of installments that the borrower must pay.\n        uint8 defaultingLimit; // the number of installments allowed to be missed without getting defaulted\n        uint8[] nftTokenTypeArray; // the token types : ERC721 , ERC1155 , ...\n        mapping(address => uint256) offers;\n    }\n    \n    /*\n     * @DIIMIIM : public mappings\n     *   loans - the loans mapping\n     */\n    mapping(uint256 => Loan) public loans;\n    \n    // @notice Mapping for all the loans that are approved by the owner in order to be used in the promissory note\n    mapping(uint256 => address) public promissoryPermissions;\n    \n    modifier isPromissoryNote {\n        require(msg.sender == promissoryNoteAddress, \"Lending Methods: Access denied\");\n        _;\n    }\n    \n    /*\n     * @DIIMIIM Determines if a loan has passed the maximum unpaid installments limit or not\n     * @ => TRUE = Loan has exceed the maximum unpaid installments limit, lender can terminate the loan and get the NFTs\n     * @ => FALSE = Loan has not exceed the maximum unpaid installments limit, lender can not terminate the loan\n     */\n    function canBeTerminated(uint256 loanId) public view returns(bool) {\n        require(loans[loanId].status == Status.APPROVED || loans[loanId].status == Status.LIQUIDATED, \"Loan is not yet approved\");\n        // return last paid installment date + defaultingLimit * installment time interval <= block.timestamp\n        return ( loans[loanId].startEnd[0] + loans[loanId].nrOfPayments * loans[loanId].installmentTime ) + loans[loanId].defaultingLimit * loans[loanId].installmentTime <= min(block.timestamp,loans[loanId].startEnd[1]);\n    }\n\n    // Checks the loan to value ratio\n    function checkLtv(uint256 loanValue, uint256 assetsValue) public view {\n        require(loanValue <= assetsValue / 100 * ltv, \"LTV too high\");\n    }\n\n\n    function min(uint256 a, uint256 b) internal pure returns(uint256) {\n        return a < b ? a : b;\n    }\n\n    function getLoanStartEnd(uint256 loanId) external view returns(uint256[2] memory) {\n        return loans[loanId].startEnd;\n    }\n\n    function getPromissoryPermission(uint256 loanId) external view returns(address) {\n        require(loans[loanId].status == Status.APPROVED, \"Loan is no longer approved\");\n        return promissoryPermissions[loanId];\n    }\n\n}"
			},
			"contracts/workers/IStaterDiscounts.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.15;\n\n\ninterface IStaterDiscounts {\n    function getDiscountTokenId(uint256 _discountId, uint256 tokenIdIndex) external view returns(uint256);\n    function calculateDiscount(address requester) external view returns(uint256);\n}"
			},
			"contracts/plugins/StaterTransfers.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.15;\nimport '@openzeppelin/contracts/token/ERC1155/IERC1155.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\nimport '@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol';\nimport '@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol';\n\n\ncontract StaterTransfers is Ownable, ERC721Holder, ERC1155Holder {\n    \n\n    /*\n     * @DIIMIIM : standard method to send tokens from an account to another ( + payment fee to admin )\n     */\n    function transferTokens(\n        address from,\n        address payable to,\n        address currency,\n        uint256 qty1,\n        uint256 qty2\n    ) public {\n      if ( currency != address(0) ){\n          require(IERC20(currency).transferFrom(\n              from,\n              to, \n              qty1\n          ), \"Transfer of tokens to receiver failed\");\n          require(IERC20(currency).transferFrom(\n              from,\n              owner(), \n              qty2\n          ), \"Transfer of tokens to Stater failed\");\n      }else{\n          require(to.send(qty1), \"Transfer of ETH to receiver failed\");\n          require(payable(owner()).send(qty2), \"Transfer of ETH to Stater failed\");\n      }\n    }\n\n\n    /*\n     * @DIIMIIM : standard method to send items from an account to another\n     */\n    function transferItems(\n        address from, \n        address to, \n        address[] memory nftAddressArray, \n        uint256[] memory nftTokenIdArray,\n        uint8[] memory nftTokenTypeArray\n    ) public {\n        uint256 length = nftAddressArray.length;\n        require(length == nftTokenIdArray.length && nftTokenTypeArray.length == length, \"Token infos provided are invalid\");\n        for(uint256 i = 0; i < length; ++i) \n            if ( nftTokenTypeArray[i] == 0 )\n                IERC721(nftAddressArray[i]).safeTransferFrom(\n                    from,\n                    to,\n                    nftTokenIdArray[i]\n                );\n            else\n                IERC1155(nftAddressArray[i]).safeTransferFrom(\n                    from,\n                    to,\n                    nftTokenIdArray[i],\n                    1,\n                    '0x00'\n                );\n    }\n\n}"
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/utils/ERC1155Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC1155Receiver.sol\";\n\n/**\n * Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n *\n * IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n * stuck.\n *\n * @dev _Available since v3.1._\n */\ncontract ERC1155Holder is ERC1155Receiver {\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n */\ncontract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155Receiver.sol\";\nimport \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ERC1155Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":451:973  contract ERC1155Holder is ERC1155Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":451:973  contract ERC1155Holder is ERC1155Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_6\n      tag_7\n      calldatasize\n      0x04\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_4:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      shl(0xe0, 0xbc197c81)\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n    tag_12:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":3449:3482   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3431:3483   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3419:3421   */\n      0x20\n        /* \"#utility.yul\":3404:3422   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n      tag_10\n        /* \"#utility.yul\":3287:3489   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_5:\n      tag_12\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      shl(0xe0, 0xf23a6e61)\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      dup3\n      and\n      shl(0xe5, 0x02711897)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      tag_25\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_8:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_37\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_37:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_38\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":199:270   */\n    tag_38:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":497:670   */\n    tag_30:\n        /* \"#utility.yul\":565:585   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":614:645   */\n      dup2\n      and\n        /* \"#utility.yul\":604:646   */\n      dup2\n      eq\n        /* \"#utility.yul\":594:664   */\n      tag_41\n      jumpi\n        /* \"#utility.yul\":660:661   */\n      0x00\n        /* \"#utility.yul\":657:658   */\n      dup1\n        /* \"#utility.yul\":650:662   */\n      revert\n        /* \"#utility.yul\":594:664   */\n    tag_41:\n        /* \"#utility.yul\":497:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":675:802   */\n    tag_31:\n        /* \"#utility.yul\":736:746   */\n      0x4e487b71\n        /* \"#utility.yul\":731:734   */\n      0xe0\n        /* \"#utility.yul\":727:747   */\n      shl\n        /* \"#utility.yul\":724:725   */\n      0x00\n        /* \"#utility.yul\":717:748   */\n      mstore\n        /* \"#utility.yul\":767:771   */\n      0x41\n        /* \"#utility.yul\":764:765   */\n      0x04\n        /* \"#utility.yul\":757:772   */\n      mstore\n        /* \"#utility.yul\":791:795   */\n      0x24\n        /* \"#utility.yul\":788:789   */\n      0x00\n        /* \"#utility.yul\":781:796   */\n      revert\n        /* \"#utility.yul\":807:1082   */\n    tag_32:\n        /* \"#utility.yul\":878:880   */\n      0x40\n        /* \"#utility.yul\":872:881   */\n      mload\n        /* \"#utility.yul\":943:945   */\n      0x1f\n        /* \"#utility.yul\":924:937   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":920:947   */\n      and\n        /* \"#utility.yul\":908:948   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":963:997   */\n      dup2\n      gt\n        /* \"#utility.yul\":999:1021   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":960:1022   */\n      or\n        /* \"#utility.yul\":957:1045   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":1025:1043   */\n      tag_45\n      tag_31\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1061:1063   */\n      0x40\n        /* \"#utility.yul\":1054:1076   */\n      mstore\n        /* \"#utility.yul\":807:1082   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1087:1799   */\n    tag_33:\n        /* \"#utility.yul\":1141:1146   */\n      0x00\n        /* \"#utility.yul\":1194:1197   */\n      dup3\n        /* \"#utility.yul\":1187:1191   */\n      0x1f\n        /* \"#utility.yul\":1179:1185   */\n      dup4\n        /* \"#utility.yul\":1175:1192   */\n      add\n        /* \"#utility.yul\":1171:1198   */\n      slt\n        /* \"#utility.yul\":1161:1216   */\n      tag_47\n      jumpi\n        /* \"#utility.yul\":1212:1213   */\n      0x00\n        /* \"#utility.yul\":1209:1210   */\n      dup1\n        /* \"#utility.yul\":1202:1214   */\n      revert\n        /* \"#utility.yul\":1161:1216   */\n    tag_47:\n        /* \"#utility.yul\":1235:1255   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":1274:1278   */\n      0x20\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1290:1316   */\n      dup3\n      gt\n        /* \"#utility.yul\":1287:1339   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":1319:1337   */\n      tag_49\n      tag_31\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1365:1367   */\n      dup2\n        /* \"#utility.yul\":1362:1363   */\n      0x05\n        /* \"#utility.yul\":1358:1368   */\n      shl\n        /* \"#utility.yul\":1388:1416   */\n      tag_50\n        /* \"#utility.yul\":1412:1414   */\n      dup3\n        /* \"#utility.yul\":1408:1410   */\n      dup3\n        /* \"#utility.yul\":1404:1415   */\n      add\n        /* \"#utility.yul\":1388:1416   */\n      tag_32\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1450:1465   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1520:1535   */\n      dup5\n      dup2\n      add\n        /* \"#utility.yul\":1516:1540   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":1481:1493   */\n      dup3\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1552:1567   */\n      dup8\n      dup6\n      gt\n        /* \"#utility.yul\":1549:1584   */\n      iszero\n      tag_51\n      jumpi\n        /* \"#utility.yul\":1580:1581   */\n      0x00\n        /* \"#utility.yul\":1577:1578   */\n      dup1\n        /* \"#utility.yul\":1570:1582   */\n      revert\n        /* \"#utility.yul\":1549:1584   */\n    tag_51:\n        /* \"#utility.yul\":1616:1618   */\n      dup4\n        /* \"#utility.yul\":1608:1614   */\n      dup8\n        /* \"#utility.yul\":1604:1619   */\n      add\n        /* \"#utility.yul\":1593:1619   */\n      swap3\n      pop\n        /* \"#utility.yul\":1628:1770   */\n    tag_52:\n        /* \"#utility.yul\":1644:1650   */\n      dup5\n        /* \"#utility.yul\":1639:1642   */\n      dup4\n        /* \"#utility.yul\":1636:1651   */\n      lt\n        /* \"#utility.yul\":1628:1770   */\n      iszero\n      tag_54\n      jumpi\n        /* \"#utility.yul\":1710:1727   */\n      dup3\n      calldataload\n        /* \"#utility.yul\":1698:1728   */\n      dup3\n      mstore\n        /* \"#utility.yul\":1661:1673   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":1748:1760   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":1628:1770   */\n      jump(tag_52)\n    tag_54:\n        /* \"#utility.yul\":1788:1793   */\n      swap8\n        /* \"#utility.yul\":1087:1799   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1804:2334   */\n    tag_34:\n        /* \"#utility.yul\":1846:1851   */\n      0x00\n        /* \"#utility.yul\":1899:1902   */\n      dup3\n        /* \"#utility.yul\":1892:1896   */\n      0x1f\n        /* \"#utility.yul\":1884:1890   */\n      dup4\n        /* \"#utility.yul\":1880:1897   */\n      add\n        /* \"#utility.yul\":1876:1903   */\n      slt\n        /* \"#utility.yul\":1866:1921   */\n      tag_56\n      jumpi\n        /* \"#utility.yul\":1917:1918   */\n      0x00\n        /* \"#utility.yul\":1914:1915   */\n      dup1\n        /* \"#utility.yul\":1907:1919   */\n      revert\n        /* \"#utility.yul\":1866:1921   */\n    tag_56:\n        /* \"#utility.yul\":1940:1960   */\n      dup2\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1972:1998   */\n      dup2\n      gt\n        /* \"#utility.yul\":1969:2021   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":2001:2019   */\n      tag_58\n      tag_31\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":2045:2100   */\n      tag_59\n        /* \"#utility.yul\":2088:2090   */\n      0x1f\n        /* \"#utility.yul\":2069:2082   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2065:2092   */\n      and\n        /* \"#utility.yul\":2094:2098   */\n      0x20\n        /* \"#utility.yul\":2061:2099   */\n      add\n        /* \"#utility.yul\":2045:2100   */\n      tag_32\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":2125:2127   */\n      dup2\n        /* \"#utility.yul\":2116:2123   */\n      dup2\n        /* \"#utility.yul\":2109:2128   */\n      mstore\n        /* \"#utility.yul\":2171:2174   */\n      dup5\n        /* \"#utility.yul\":2164:2168   */\n      0x20\n        /* \"#utility.yul\":2159:2161   */\n      dup4\n        /* \"#utility.yul\":2151:2157   */\n      dup7\n        /* \"#utility.yul\":2147:2162   */\n      add\n        /* \"#utility.yul\":2143:2169   */\n      add\n        /* \"#utility.yul\":2140:2175   */\n      gt\n        /* \"#utility.yul\":2137:2192   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":2188:2189   */\n      0x00\n        /* \"#utility.yul\":2185:2186   */\n      dup1\n        /* \"#utility.yul\":2178:2190   */\n      revert\n        /* \"#utility.yul\":2137:2192   */\n    tag_60:\n        /* \"#utility.yul\":2253:2255   */\n      dup2\n        /* \"#utility.yul\":2246:2250   */\n      0x20\n        /* \"#utility.yul\":2238:2244   */\n      dup6\n        /* \"#utility.yul\":2234:2251   */\n      add\n        /* \"#utility.yul\":2227:2231   */\n      0x20\n        /* \"#utility.yul\":2218:2225   */\n      dup4\n        /* \"#utility.yul\":2214:2232   */\n      add\n        /* \"#utility.yul\":2201:2256   */\n      calldatacopy\n        /* \"#utility.yul\":2301:2302   */\n      0x00\n        /* \"#utility.yul\":2276:2292   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":2294:2298   */\n      0x20\n        /* \"#utility.yul\":2272:2299   */\n      add\n        /* \"#utility.yul\":2265:2303   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2280:2287   */\n      swap4\n        /* \"#utility.yul\":1804:2334   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2339:3282   */\n    tag_14:\n        /* \"#utility.yul\":2493:2499   */\n      0x00\n        /* \"#utility.yul\":2501:2507   */\n      dup1\n        /* \"#utility.yul\":2509:2515   */\n      0x00\n        /* \"#utility.yul\":2517:2523   */\n      dup1\n        /* \"#utility.yul\":2525:2531   */\n      0x00\n        /* \"#utility.yul\":2578:2581   */\n      0xa0\n        /* \"#utility.yul\":2566:2575   */\n      dup7\n        /* \"#utility.yul\":2557:2564   */\n      dup9\n        /* \"#utility.yul\":2553:2576   */\n      sub\n        /* \"#utility.yul\":2549:2582   */\n      slt\n        /* \"#utility.yul\":2546:2599   */\n      iszero\n      tag_62\n      jumpi\n        /* \"#utility.yul\":2595:2596   */\n      0x00\n        /* \"#utility.yul\":2592:2593   */\n      dup1\n        /* \"#utility.yul\":2585:2597   */\n      revert\n        /* \"#utility.yul\":2546:2599   */\n    tag_62:\n        /* \"#utility.yul\":2618:2647   */\n      tag_63\n        /* \"#utility.yul\":2637:2646   */\n      dup7\n        /* \"#utility.yul\":2618:2647   */\n      tag_30\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2608:2647   */\n      swap5\n      pop\n        /* \"#utility.yul\":2666:2704   */\n      tag_64\n        /* \"#utility.yul\":2700:2702   */\n      0x20\n        /* \"#utility.yul\":2689:2698   */\n      dup8\n        /* \"#utility.yul\":2685:2703   */\n      add\n        /* \"#utility.yul\":2666:2704   */\n      tag_30\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2656:2704   */\n      swap4\n      pop\n        /* \"#utility.yul\":2755:2757   */\n      0x40\n        /* \"#utility.yul\":2740:2758   */\n      dup7\n      add\n        /* \"#utility.yul\":2727:2759   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2808:2822   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2805:2839   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":2835:2836   */\n      0x00\n        /* \"#utility.yul\":2832:2833   */\n      dup1\n        /* \"#utility.yul\":2825:2837   */\n      revert\n        /* \"#utility.yul\":2805:2839   */\n    tag_65:\n        /* \"#utility.yul\":2858:2919   */\n      tag_66\n        /* \"#utility.yul\":2911:2918   */\n      dup10\n        /* \"#utility.yul\":2902:2908   */\n      dup4\n        /* \"#utility.yul\":2891:2900   */\n      dup11\n        /* \"#utility.yul\":2887:2909   */\n      add\n        /* \"#utility.yul\":2858:2919   */\n      tag_33\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2848:2919   */\n      swap5\n      pop\n        /* \"#utility.yul\":2972:2974   */\n      0x60\n        /* \"#utility.yul\":2961:2970   */\n      dup9\n        /* \"#utility.yul\":2957:2975   */\n      add\n        /* \"#utility.yul\":2944:2976   */\n      calldataload\n        /* \"#utility.yul\":2928:2976   */\n      swap2\n      pop\n        /* \"#utility.yul\":3001:3003   */\n      dup1\n        /* \"#utility.yul\":2991:2999   */\n      dup3\n        /* \"#utility.yul\":2988:3004   */\n      gt\n        /* \"#utility.yul\":2985:3021   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":3017:3018   */\n      0x00\n        /* \"#utility.yul\":3014:3015   */\n      dup1\n        /* \"#utility.yul\":3007:3019   */\n      revert\n        /* \"#utility.yul\":2985:3021   */\n    tag_67:\n        /* \"#utility.yul\":3040:3103   */\n      tag_68\n        /* \"#utility.yul\":3095:3102   */\n      dup10\n        /* \"#utility.yul\":3084:3092   */\n      dup4\n        /* \"#utility.yul\":3073:3082   */\n      dup11\n        /* \"#utility.yul\":3069:3093   */\n      add\n        /* \"#utility.yul\":3040:3103   */\n      tag_33\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":3030:3103   */\n      swap4\n      pop\n        /* \"#utility.yul\":3156:3159   */\n      0x80\n        /* \"#utility.yul\":3145:3154   */\n      dup9\n        /* \"#utility.yul\":3141:3160   */\n      add\n        /* \"#utility.yul\":3128:3161   */\n      calldataload\n        /* \"#utility.yul\":3112:3161   */\n      swap2\n      pop\n        /* \"#utility.yul\":3186:3188   */\n      dup1\n        /* \"#utility.yul\":3176:3184   */\n      dup3\n        /* \"#utility.yul\":3173:3189   */\n      gt\n        /* \"#utility.yul\":3170:3206   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":3202:3203   */\n      0x00\n        /* \"#utility.yul\":3199:3200   */\n      dup1\n        /* \"#utility.yul\":3192:3204   */\n      revert\n        /* \"#utility.yul\":3170:3206   */\n    tag_69:\n      pop\n        /* \"#utility.yul\":3225:3276   */\n      tag_70\n        /* \"#utility.yul\":3268:3275   */\n      dup9\n        /* \"#utility.yul\":3257:3265   */\n      dup3\n        /* \"#utility.yul\":3246:3255   */\n      dup10\n        /* \"#utility.yul\":3242:3266   */\n      add\n        /* \"#utility.yul\":3225:3276   */\n      tag_34\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":3215:3276   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2339:3282   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3494:4100   */\n    tag_20:\n        /* \"#utility.yul\":3598:3604   */\n      0x00\n        /* \"#utility.yul\":3606:3612   */\n      dup1\n        /* \"#utility.yul\":3614:3620   */\n      0x00\n        /* \"#utility.yul\":3622:3628   */\n      dup1\n        /* \"#utility.yul\":3630:3636   */\n      0x00\n        /* \"#utility.yul\":3683:3686   */\n      0xa0\n        /* \"#utility.yul\":3671:3680   */\n      dup7\n        /* \"#utility.yul\":3662:3669   */\n      dup9\n        /* \"#utility.yul\":3658:3681   */\n      sub\n        /* \"#utility.yul\":3654:3687   */\n      slt\n        /* \"#utility.yul\":3651:3704   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":3700:3701   */\n      0x00\n        /* \"#utility.yul\":3697:3698   */\n      dup1\n        /* \"#utility.yul\":3690:3702   */\n      revert\n        /* \"#utility.yul\":3651:3704   */\n    tag_73:\n        /* \"#utility.yul\":3723:3752   */\n      tag_74\n        /* \"#utility.yul\":3742:3751   */\n      dup7\n        /* \"#utility.yul\":3723:3752   */\n      tag_30\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":3713:3752   */\n      swap5\n      pop\n        /* \"#utility.yul\":3771:3809   */\n      tag_75\n        /* \"#utility.yul\":3805:3807   */\n      0x20\n        /* \"#utility.yul\":3794:3803   */\n      dup8\n        /* \"#utility.yul\":3790:3808   */\n      add\n        /* \"#utility.yul\":3771:3809   */\n      tag_30\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":3761:3809   */\n      swap4\n      pop\n        /* \"#utility.yul\":3856:3858   */\n      0x40\n        /* \"#utility.yul\":3841:3859   */\n      dup7\n      add\n        /* \"#utility.yul\":3828:3860   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":3907:3909   */\n      0x60\n        /* \"#utility.yul\":3892:3910   */\n      dup7\n      add\n        /* \"#utility.yul\":3879:3911   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3962:3965   */\n      0x80\n        /* \"#utility.yul\":3947:3966   */\n      dup7\n      add\n        /* \"#utility.yul\":3934:3967   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3979:4009   */\n      dup2\n      gt\n        /* \"#utility.yul\":3976:4026   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":4022:4023   */\n      0x00\n        /* \"#utility.yul\":4019:4020   */\n      dup1\n        /* \"#utility.yul\":4012:4024   */\n      revert\n        /* \"#utility.yul\":3976:4026   */\n    tag_76:\n        /* \"#utility.yul\":4045:4094   */\n      tag_70\n        /* \"#utility.yul\":4086:4093   */\n      dup9\n        /* \"#utility.yul\":4077:4083   */\n      dup3\n        /* \"#utility.yul\":4066:4075   */\n      dup10\n        /* \"#utility.yul\":4062:4084   */\n      add\n        /* \"#utility.yul\":4045:4094   */\n      tag_34\n      jump\t// in\n\n    auxdata: 0xa264697066735822122049d379d9ca369b77ecbca91283b3e2390b9334322c2545ec7e82019741ad6eb964736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506103c0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c811461006e578063f23a6e61146100a6575b600080fd5b6100596100543660046100fc565b6100c5565b60405190151581526020015b60405180910390f35b61008d61007c36600461027d565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610065565b61008d6100b4366004610326565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b14806100f657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006020828403121561010e57600080fd5b81356001600160e01b03198116811461012657600080fd5b9392505050565b80356001600160a01b038116811461014457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561018757610187610149565b604052919050565b600082601f8301126101a057600080fd5b813560206001600160401b038211156101bb576101bb610149565b8160051b6101ca82820161015f565b92835284810182019282810190878511156101e457600080fd5b83870192505b84831015610203578235825291830191908301906101ea565b979650505050505050565b600082601f83011261021f57600080fd5b81356001600160401b0381111561023857610238610149565b61024b601f8201601f191660200161015f565b81815284602083860101111561026057600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561029557600080fd5b61029e8661012d565b94506102ac6020870161012d565b935060408601356001600160401b03808211156102c857600080fd5b6102d489838a0161018f565b945060608801359150808211156102ea57600080fd5b6102f689838a0161018f565b9350608088013591508082111561030c57600080fd5b506103198882890161020e565b9150509295509295909350565b600080600080600060a0868803121561033e57600080fd5b6103478661012d565b94506103556020870161012d565b9350604086013592506060860135915060808601356001600160401b0381111561037e57600080fd5b6103198882890161020e56fea264697066735822122049d379d9ca369b77ecbca91283b3e2390b9334322c2545ec7e82019741ad6eb964736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C0 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x27D JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x65 JUMP JUMPDEST PUSH2 0x8D PUSH2 0xB4 CALLDATASIZE PUSH1 0x4 PUSH2 0x326 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0xF6 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x187 JUMPI PUSH2 0x187 PUSH2 0x149 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1BB JUMPI PUSH2 0x1BB PUSH2 0x149 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x1CA DUP3 DUP3 ADD PUSH2 0x15F JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x203 JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1EA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x238 JUMPI PUSH2 0x238 PUSH2 0x149 JUMP JUMPDEST PUSH2 0x24B PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x15F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29E DUP7 PUSH2 0x12D JUMP JUMPDEST SWAP5 POP PUSH2 0x2AC PUSH1 0x20 DUP8 ADD PUSH2 0x12D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D4 DUP10 DUP4 DUP11 ADD PUSH2 0x18F JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F6 DUP10 DUP4 DUP11 ADD PUSH2 0x18F JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x319 DUP9 DUP3 DUP10 ADD PUSH2 0x20E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x347 DUP7 PUSH2 0x12D JUMP JUMPDEST SWAP5 POP PUSH2 0x355 PUSH1 0x20 DUP8 ADD PUSH2 0x12D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x319 DUP9 DUP3 DUP10 ADD PUSH2 0x20E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 0xD3 PUSH26 0xD9CA369B77ECBCA91283B3E2390B9334322C2545EC7E82019741 0xAD PUSH15 0xB964736F6C634300080E0033000000 ",
							"sourceMap": "451:522:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC1155BatchReceived_317": {
									"entryPoint": null,
									"id": 317,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_294": {
									"entryPoint": null,
									"id": 294,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@supportsInterface_351": {
									"entryPoint": 197,
									"id": 351,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_636": {
									"entryPoint": null,
									"id": 636,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4102:15",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:217:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:15"
															},
															"nodeType": "YulIf",
															"src": "93:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "234:3:15",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "239:10:15",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:51:15"
															},
															"nodeType": "YulIf",
															"src": "199:71:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:15",
														"type": ""
													}
												],
												"src": "14:286:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:15",
														"type": ""
													}
												],
												"src": "305:187:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:124:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "556:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "578:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "565:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "565:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "556:5:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "648:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "657:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "660:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "650:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "650:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "650:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "607:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "618:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "633:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "638:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "629:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "629:11:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "642:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "625:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "625:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "604:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "604:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:50:15"
															},
															"nodeType": "YulIf",
															"src": "594:70:15"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "525:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "536:5:15",
														"type": ""
													}
												],
												"src": "497:173:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "707:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "724:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "731:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "736:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "727:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "727:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "717:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "717:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "764:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "767:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "757:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "757:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "757:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "788:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "791:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "781:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "781:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "781:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "675:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "852:230:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "862:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "878:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "872:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "872:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "862:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "890:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "912:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "928:4:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "934:2:15",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "924:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "924:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "943:2:15",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "939:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "939:7:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "920:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "920:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "908:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "894:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1025:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "966:10:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "986:2:15",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "990:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "982:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "982:10:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "994:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "978:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "978:18:15"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "963:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "963:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1002:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1014:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "999:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "999:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "960:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "960:62:15"
															},
															"nodeType": "YulIf",
															"src": "957:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1061:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1065:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1054:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1054:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1054:22:15"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "832:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "841:6:15",
														"type": ""
													}
												],
												"src": "807:275:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1151:648:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1187:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1175:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1175:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1194:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1164:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1164:35:15"
															},
															"nodeType": "YulIf",
															"src": "1161:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1248:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1235:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1235:20:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1229:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:14:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1274:4:15",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1317:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1319:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1319:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1319:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1293:2:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1305:2:15",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1309:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1301:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1301:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1313:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:18:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1290:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1290:26:15"
															},
															"nodeType": "YulIf",
															"src": "1287:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1348:20:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1362:1:15",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1365:2:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1358:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:10:15"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1352:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1377:39:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1408:2:15"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1412:2:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1404:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1404:11:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1388:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1388:28:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1381:3:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1425:16:15",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "1438:3:15"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "1429:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1457:3:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1462:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1450:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1450:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1450:15:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1485:3:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1481:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1481:12:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1474:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1502:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1524:6:15"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1532:2:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1520:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1520:15:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1537:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1516:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1516:24:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "1506:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1568:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1577:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1580:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1570:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1570:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1570:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1555:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1563:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1552:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1552:15:15"
															},
															"nodeType": "YulIf",
															"src": "1549:35:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1593:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1608:6:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1616:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1604:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1604:15:15"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1597:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1684:86:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1705:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1723:3:15"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "1710:12:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1710:17:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1698:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1698:30:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1698:30:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1741:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1752:3:15"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1757:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1748:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1639:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1644:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1636:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1636:15:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1652:23:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1654:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1665:3:15"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1670:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1661:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1661:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1654:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1632:3:15",
																"statements": []
															},
															"src": "1628:142:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1779:14:15",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "1788:5:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1779:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1125:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1133:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1141:5:15",
														"type": ""
													}
												],
												"src": "1087:712:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1856:478:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1905:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1884:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1892:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1880:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1880:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1899:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1876:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1876:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1869:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1869:35:15"
															},
															"nodeType": "YulIf",
															"src": "1866:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1930:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1953:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1940:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1940:20:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1934:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1999:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2001:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2001:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2001:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1975:2:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1987:2:15",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1991:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1983:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1995:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1979:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1979:18:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1972:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1972:26:15"
															},
															"nodeType": "YulIf",
															"src": "1969:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2030:70:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2073:2:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2077:4:15",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2069:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2069:13:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2088:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2084:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2084:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2065:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2065:27:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2094:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2061:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2061:38:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2045:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2045:55:15"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "2034:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "2116:7:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2125:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2109:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2109:19:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2176:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2185:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2188:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2178:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2178:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2178:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2151:6:15"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2159:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2147:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2147:15:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2164:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:26:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2140:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2140:35:15"
															},
															"nodeType": "YulIf",
															"src": "2137:55:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "2218:7:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2227:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2214:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2214:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2238:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2246:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2234:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2234:17:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2253:2:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2201:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2201:55:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2201:55:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "2280:7:15"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2289:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2276:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2276:16:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2294:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2272:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2272:27:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2301:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2265:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2265:38:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2265:38:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2312:16:15",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "2321:7:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2312:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1830:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1838:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1846:5:15",
														"type": ""
													}
												],
												"src": "1804:530:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2536:746:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2583:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2592:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2595:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2585:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2585:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2585:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2557:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2566:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2553:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2553:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2578:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2549:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2549:33:15"
															},
															"nodeType": "YulIf",
															"src": "2546:53:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2608:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2637:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2618:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2618:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2608:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2656:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2689:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2700:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2685:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2685:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2666:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2666:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2656:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2713:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2744:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2755:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2740:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2740:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2727:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2727:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2717:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2768:28:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2786:2:15",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2790:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2782:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2782:10:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2794:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2778:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2778:18:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2772:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2823:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2832:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2835:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2825:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2825:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2825:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2811:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2819:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2808:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2808:14:15"
															},
															"nodeType": "YulIf",
															"src": "2805:34:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2848:71:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2891:9:15"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2902:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2887:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2887:22:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2911:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2858:28:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2858:61:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2928:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2961:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2972:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2957:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2957:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2944:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2944:32:15"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2932:8:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3005:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3014:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3017:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3007:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3007:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3007:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2991:8:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3001:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2988:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2988:16:15"
															},
															"nodeType": "YulIf",
															"src": "2985:36:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3030:73:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3073:9:15"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3084:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3069:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3069:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3095:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3040:28:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3040:63:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3030:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3112:49:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3145:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3156:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3141:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3141:19:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3128:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3128:33:15"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "3116:8:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3190:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3199:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3202:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3192:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3192:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3192:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "3176:8:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3186:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3173:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3173:16:15"
															},
															"nodeType": "YulIf",
															"src": "3170:36:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3215:61:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3246:9:15"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "3257:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3242:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3242:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3268:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3225:16:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3225:51:15"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3215:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2470:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2481:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2493:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2501:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2509:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2517:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2525:6:15",
														"type": ""
													}
												],
												"src": "2339:943:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3386:103:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3396:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3408:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3419:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3404:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3404:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3396:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3438:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3453:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3465:3:15",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3470:10:15",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3461:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3461:20:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3449:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3449:33:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3431:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3431:52:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3431:52:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3355:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3366:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3377:4:15",
														"type": ""
													}
												],
												"src": "3287:202:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3641:459:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3688:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3697:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3700:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3690:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3690:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3690:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3662:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3671:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3658:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3658:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3683:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3654:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3654:33:15"
															},
															"nodeType": "YulIf",
															"src": "3651:53:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3713:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3742:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3723:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3723:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3713:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3761:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3794:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3805:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3790:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3790:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3771:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3771:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3761:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3818:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3845:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3856:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3841:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3841:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3828:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3828:32:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3818:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3869:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3896:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3907:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3892:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3892:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3879:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3879:32:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3869:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3920:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3951:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3962:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3947:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3947:19:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3934:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3934:33:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3924:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4010:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4019:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4022:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4012:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4012:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4012:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3982:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3998:2:15",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4002:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3994:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3994:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4006:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3990:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3990:18:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3979:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3979:30:15"
															},
															"nodeType": "YulIf",
															"src": "3976:50:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4035:59:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4066:9:15"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4077:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4062:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4062:22:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4086:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4045:16:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:49:15"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4035:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3575:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3586:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3598:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3606:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3614:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3622:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3630:6:15",
														"type": ""
													}
												],
												"src": "3494:606:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let _3 := shl(5, _1)\n        let dst := allocate_memory(add(_3, _2))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, _3), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c811461006e578063f23a6e61146100a6575b600080fd5b6100596100543660046100fc565b6100c5565b60405190151581526020015b60405180910390f35b61008d61007c36600461027d565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610065565b61008d6100b4366004610326565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b14806100f657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006020828403121561010e57600080fd5b81356001600160e01b03198116811461012657600080fd5b9392505050565b80356001600160a01b038116811461014457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561018757610187610149565b604052919050565b600082601f8301126101a057600080fd5b813560206001600160401b038211156101bb576101bb610149565b8160051b6101ca82820161015f565b92835284810182019282810190878511156101e457600080fd5b83870192505b84831015610203578235825291830191908301906101ea565b979650505050505050565b600082601f83011261021f57600080fd5b81356001600160401b0381111561023857610238610149565b61024b601f8201601f191660200161015f565b81815284602083860101111561026057600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561029557600080fd5b61029e8661012d565b94506102ac6020870161012d565b935060408601356001600160401b03808211156102c857600080fd5b6102d489838a0161018f565b945060608801359150808211156102ea57600080fd5b6102f689838a0161018f565b9350608088013591508082111561030c57600080fd5b506103198882890161020e565b9150509295509295909350565b600080600080600060a0868803121561033e57600080fd5b6103478661012d565b94506103556020870161012d565b9350604086013592506060860135915060808601356001600160401b0381111561037e57600080fd5b6103198882890161020e56fea264697066735822122049d379d9ca369b77ecbca91283b3e2390b9334322c2545ec7e82019741ad6eb964736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x27D JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x65 JUMP JUMPDEST PUSH2 0x8D PUSH2 0xB4 CALLDATASIZE PUSH1 0x4 PUSH2 0x326 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0xF6 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x187 JUMPI PUSH2 0x187 PUSH2 0x149 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1BB JUMPI PUSH2 0x1BB PUSH2 0x149 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x1CA DUP3 DUP3 ADD PUSH2 0x15F JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x203 JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1EA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x238 JUMPI PUSH2 0x238 PUSH2 0x149 JUMP JUMPDEST PUSH2 0x24B PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x15F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29E DUP7 PUSH2 0x12D JUMP JUMPDEST SWAP5 POP PUSH2 0x2AC PUSH1 0x20 DUP8 ADD PUSH2 0x12D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D4 DUP10 DUP4 DUP11 ADD PUSH2 0x18F JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F6 DUP10 DUP4 DUP11 ADD PUSH2 0x18F JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x319 DUP9 DUP3 DUP10 ADD PUSH2 0x20E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x347 DUP7 PUSH2 0x12D JUMP JUMPDEST SWAP5 POP PUSH2 0x355 PUSH1 0x20 DUP8 ADD PUSH2 0x12D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x319 DUP9 DUP3 DUP10 ADD PUSH2 0x20E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 0xD3 PUSH26 0xD9CA369B77ECBCA91283B3E2390B9334322C2545EC7E82019741 0xAD PUSH15 0xB964736F6C634300080E0033000000 ",
							"sourceMap": "451:522:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:4;;;;;;:::i;:::-;;:::i;:::-;;;470:14:15;;463:22;445:41;;433:2;418:18;387:221:4;;;;;;;;724:247:3;;;;;;:::i;:::-;-1:-1:-1;;;724:247:3;;;;;;;;;;;-1:-1:-1;;;;;;3449:33:15;;;3431:52;;3419:2;3404:18;724:247:3;3287:202:15;499:219:3;;;;;;:::i;:::-;-1:-1:-1;;;499:219:3;;;;;;;;387:221:4;489:4;-1:-1:-1;;;;;;512:49:4;;-1:-1:-1;;;512:49:4;;:89;;-1:-1:-1;;;;;;;;;;937:40:10;;;565:36:4;505:96;387:221;-1:-1:-1;;387:221:4:o;14:286:15:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:15;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:15:o;497:173::-;565:20;;-1:-1:-1;;;;;614:31:15;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:127::-;736:10;731:3;727:20;724:1;717:31;767:4;764:1;757:15;791:4;788:1;781:15;807:275;878:2;872:9;943:2;924:13;;-1:-1:-1;;920:27:15;908:40;;-1:-1:-1;;;;;963:34:15;;999:22;;;960:62;957:88;;;1025:18;;:::i;:::-;1061:2;1054:22;807:275;;-1:-1:-1;807:275:15:o;1087:712::-;1141:5;1194:3;1187:4;1179:6;1175:17;1171:27;1161:55;;1212:1;1209;1202:12;1161:55;1235:20;;1274:4;-1:-1:-1;;;;;1290:26:15;;1287:52;;;1319:18;;:::i;:::-;1365:2;1362:1;1358:10;1388:28;1412:2;1408;1404:11;1388:28;:::i;:::-;1450:15;;;1520;;;1516:24;;;1481:12;;;;1552:15;;;1549:35;;;1580:1;1577;1570:12;1549:35;1616:2;1608:6;1604:15;1593:26;;1628:142;1644:6;1639:3;1636:15;1628:142;;;1710:17;;1698:30;;1661:12;;;;1748;;;;1628:142;;;1788:5;1087:712;-1:-1:-1;;;;;;;1087:712:15:o;1804:530::-;1846:5;1899:3;1892:4;1884:6;1880:17;1876:27;1866:55;;1917:1;1914;1907:12;1866:55;1940:20;;-1:-1:-1;;;;;1972:26:15;;1969:52;;;2001:18;;:::i;:::-;2045:55;2088:2;2069:13;;-1:-1:-1;;2065:27:15;2094:4;2061:38;2045:55;:::i;:::-;2125:2;2116:7;2109:19;2171:3;2164:4;2159:2;2151:6;2147:15;2143:26;2140:35;2137:55;;;2188:1;2185;2178:12;2137:55;2253:2;2246:4;2238:6;2234:17;2227:4;2218:7;2214:18;2201:55;2301:1;2276:16;;;2294:4;2272:27;2265:38;;;;2280:7;1804:530;-1:-1:-1;;;1804:530:15:o;2339:943::-;2493:6;2501;2509;2517;2525;2578:3;2566:9;2557:7;2553:23;2549:33;2546:53;;;2595:1;2592;2585:12;2546:53;2618:29;2637:9;2618:29;:::i;:::-;2608:39;;2666:38;2700:2;2689:9;2685:18;2666:38;:::i;:::-;2656:48;-1:-1:-1;2755:2:15;2740:18;;2727:32;-1:-1:-1;;;;;2808:14:15;;;2805:34;;;2835:1;2832;2825:12;2805:34;2858:61;2911:7;2902:6;2891:9;2887:22;2858:61;:::i;:::-;2848:71;;2972:2;2961:9;2957:18;2944:32;2928:48;;3001:2;2991:8;2988:16;2985:36;;;3017:1;3014;3007:12;2985:36;3040:63;3095:7;3084:8;3073:9;3069:24;3040:63;:::i;:::-;3030:73;;3156:3;3145:9;3141:19;3128:33;3112:49;;3186:2;3176:8;3173:16;3170:36;;;3202:1;3199;3192:12;3170:36;;3225:51;3268:7;3257:8;3246:9;3242:24;3225:51;:::i;:::-;3215:61;;;2339:943;;;;;;;;:::o;3494:606::-;3598:6;3606;3614;3622;3630;3683:3;3671:9;3662:7;3658:23;3654:33;3651:53;;;3700:1;3697;3690:12;3651:53;3723:29;3742:9;3723:29;:::i;:::-;3713:39;;3771:38;3805:2;3794:9;3790:18;3771:38;:::i;:::-;3761:48;-1:-1:-1;3856:2:15;3841:18;;3828:32;;-1:-1:-1;3907:2:15;3892:18;;3879:32;;-1:-1:-1;3962:3:15;3947:19;;3934:33;-1:-1:-1;;;;;3979:30:15;;3976:50;;;4022:1;4019;4012:12;3976:50;4045:49;4086:7;4077:6;4066:9;4062:22;4045:49;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "192000",
								"executionCost": "232",
								"totalCost": "192232"
							},
							"external": {
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"supportsInterface(bytes4)": "404"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122049d379d9ca369b77ecbca91283b3e2390b9334322c2545ec7e82019741ad6eb964736f6c634300080e0033",
									".code": [
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A7"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "BC197C81"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "F23A6E61"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 451,
											"end": 973,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3449,
											"end": 3482,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3449,
											"end": 3482,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3449,
											"end": 3482,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3431,
											"end": 3483,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3431,
											"end": 3483,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3419,
											"end": 3421,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 3287,
											"end": 3489,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 512,
											"end": 561,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2711897"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 512,
											"end": 561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 199,
											"end": 270,
											"name": "tag",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 497,
											"end": 670,
											"name": "tag",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 497,
											"end": 670,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 565,
											"end": 585,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 565,
											"end": 585,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 614,
											"end": 645,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 614,
											"end": 645,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 604,
											"end": 646,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 604,
											"end": 646,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 594,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 660,
											"end": 661,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 658,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 650,
											"end": 662,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 594,
											"end": 664,
											"name": "tag",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 497,
											"end": 670,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 497,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 675,
											"end": 802,
											"name": "tag",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 675,
											"end": 802,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 736,
											"end": 746,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 731,
											"end": 734,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 727,
											"end": 747,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 724,
											"end": 725,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 748,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 767,
											"end": 771,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 764,
											"end": 765,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 757,
											"end": 772,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 791,
											"end": 795,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 788,
											"end": 789,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 796,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 807,
											"end": 1082,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 807,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 878,
											"end": 880,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 881,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 943,
											"end": 945,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 924,
											"end": 937,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 924,
											"end": 937,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 920,
											"end": 947,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 908,
											"end": 948,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 908,
											"end": 948,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 963,
											"end": 997,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 963,
											"end": 997,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 999,
											"end": 1021,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 999,
											"end": 1021,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 999,
											"end": 1021,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 960,
											"end": 1022,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 957,
											"end": 1045,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 957,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 957,
											"end": 1045,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 1025,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "tag",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1061,
											"end": 1063,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1054,
											"end": 1076,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 807,
											"end": 1082,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 807,
											"end": 1082,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 807,
											"end": 1082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1087,
											"end": 1799,
											"name": "tag",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 1087,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1141,
											"end": 1146,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1194,
											"end": 1197,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1191,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1179,
											"end": 1185,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1175,
											"end": 1192,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1171,
											"end": 1198,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 1161,
											"end": 1216,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1212,
											"end": 1213,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1210,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1202,
											"end": 1214,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1216,
											"name": "tag",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 1161,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1235,
											"end": 1255,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1235,
											"end": 1255,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1290,
											"end": 1316,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1290,
											"end": 1316,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1287,
											"end": 1339,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1287,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 1287,
											"end": 1339,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 1319,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "tag",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1365,
											"end": 1367,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1362,
											"end": 1363,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 1358,
											"end": 1368,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1408,
											"end": 1410,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1404,
											"end": 1415,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 1388,
											"end": 1416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1450,
											"end": 1465,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1450,
											"end": 1465,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1450,
											"end": 1465,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1520,
											"end": 1535,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1520,
											"end": 1535,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1520,
											"end": 1535,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1481,
											"end": 1493,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1481,
											"end": 1493,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1481,
											"end": 1493,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1481,
											"end": 1493,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1552,
											"end": 1567,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1552,
											"end": 1567,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1552,
											"end": 1567,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1549,
											"end": 1584,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1549,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 1549,
											"end": 1584,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1580,
											"end": 1581,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1578,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1570,
											"end": 1582,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1549,
											"end": 1584,
											"name": "tag",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 1549,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1616,
											"end": 1618,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1608,
											"end": 1614,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1604,
											"end": 1619,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1593,
											"end": 1619,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1593,
											"end": 1619,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "tag",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1639,
											"end": 1642,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1636,
											"end": 1651,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1710,
											"end": 1727,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1710,
											"end": 1727,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1698,
											"end": 1728,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1698,
											"end": 1728,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1661,
											"end": 1673,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1661,
											"end": 1673,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1661,
											"end": 1673,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1661,
											"end": 1673,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "tag",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1788,
											"end": 1793,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 1087,
											"end": 1799,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1087,
											"end": 1799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1804,
											"end": 2334,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 1804,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1846,
											"end": 1851,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1892,
											"end": 1896,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1884,
											"end": 1890,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1880,
											"end": 1897,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1876,
											"end": 1903,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1917,
											"end": 1918,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1915,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "tag",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1940,
											"end": 1960,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1940,
											"end": 1960,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1972,
											"end": 1998,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1972,
											"end": 1998,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1969,
											"end": 2021,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1969,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 1969,
											"end": 2021,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 2001,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2045,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 2088,
											"end": 2090,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2082,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2069,
											"end": 2082,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2065,
											"end": 2092,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2094,
											"end": 2098,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2061,
											"end": 2099,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2045,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 2045,
											"end": 2100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2045,
											"end": 2100,
											"name": "tag",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 2045,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2125,
											"end": 2127,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2109,
											"end": 2128,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2171,
											"end": 2174,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2164,
											"end": 2168,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2159,
											"end": 2161,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2151,
											"end": 2157,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2147,
											"end": 2162,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2143,
											"end": 2169,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2140,
											"end": 2175,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2137,
											"end": 2192,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2137,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2137,
											"end": 2192,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2188,
											"end": 2189,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2186,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2178,
											"end": 2190,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2137,
											"end": 2192,
											"name": "tag",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2137,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2253,
											"end": 2255,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2246,
											"end": 2250,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2244,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2227,
											"end": 2231,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2218,
											"end": 2225,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2214,
											"end": 2232,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2201,
											"end": 2256,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 2301,
											"end": 2302,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2294,
											"end": 2298,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2272,
											"end": 2299,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1804,
											"end": 2334,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1804,
											"end": 2334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "tag",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2493,
											"end": 2499,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2509,
											"end": 2515,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2523,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2578,
											"end": 2581,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 2566,
											"end": 2575,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2557,
											"end": 2564,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 2553,
											"end": 2576,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2549,
											"end": 2582,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2546,
											"end": 2599,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2546,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 2546,
											"end": 2599,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2595,
											"end": 2596,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2593,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2546,
											"end": 2599,
											"name": "tag",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 2546,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 2637,
											"end": 2646,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 2618,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "tag",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2608,
											"end": 2647,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2608,
											"end": 2647,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2666,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2700,
											"end": 2702,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 2685,
											"end": 2703,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2666,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 2666,
											"end": 2704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2666,
											"end": 2704,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2666,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2656,
											"end": 2704,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2755,
											"end": 2757,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2758,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2740,
											"end": 2758,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2727,
											"end": 2759,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2805,
											"end": 2839,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2805,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 2805,
											"end": 2839,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2836,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2833,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2825,
											"end": 2837,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2805,
											"end": 2839,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 2805,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2858,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 2911,
											"end": 2918,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 2902,
											"end": 2908,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 2887,
											"end": 2909,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2858,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 2858,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2858,
											"end": 2919,
											"name": "tag",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 2858,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2848,
											"end": 2919,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2848,
											"end": 2919,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2972,
											"end": 2974,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2961,
											"end": 2970,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 2957,
											"end": 2975,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2944,
											"end": 2976,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2928,
											"end": 2976,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2928,
											"end": 2976,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3001,
											"end": 3003,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2991,
											"end": 2999,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2988,
											"end": 3004,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3017,
											"end": 3018,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3015,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "tag",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 3095,
											"end": 3102,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3084,
											"end": 3092,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3073,
											"end": 3082,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 3069,
											"end": 3093,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 3040,
											"end": 3103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3030,
											"end": 3103,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3030,
											"end": 3103,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3156,
											"end": 3159,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3145,
											"end": 3154,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3141,
											"end": 3160,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3128,
											"end": 3161,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3112,
											"end": 3161,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3112,
											"end": 3161,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3176,
											"end": 3184,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3173,
											"end": 3189,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3202,
											"end": 3203,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3200,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3192,
											"end": 3204,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "tag",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 3268,
											"end": 3275,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3257,
											"end": 3265,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3246,
											"end": 3255,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 3242,
											"end": 3266,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 3225,
											"end": 3276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "tag",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3215,
											"end": 3276,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3215,
											"end": 3276,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3215,
											"end": 3276,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2339,
											"end": 3282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3494,
											"end": 4100,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3494,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3598,
											"end": 3604,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3612,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3614,
											"end": 3620,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3622,
											"end": 3628,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3630,
											"end": 3636,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3683,
											"end": 3686,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 3671,
											"end": 3680,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3662,
											"end": 3669,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3658,
											"end": 3681,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3654,
											"end": 3687,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3700,
											"end": 3701,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3698,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3690,
											"end": 3702,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "tag",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3723,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3723,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 3723,
											"end": 3752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3723,
											"end": 3752,
											"name": "tag",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 3723,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3713,
											"end": 3752,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3713,
											"end": 3752,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3771,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 3805,
											"end": 3807,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3794,
											"end": 3803,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3790,
											"end": 3808,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3771,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 3771,
											"end": 3809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3771,
											"end": 3809,
											"name": "tag",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 3771,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3761,
											"end": 3809,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3856,
											"end": 3858,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3907,
											"end": 3909,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3879,
											"end": 3911,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3879,
											"end": 3911,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3962,
											"end": 3965,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3947,
											"end": 3966,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3947,
											"end": 3966,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3934,
											"end": 3967,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3979,
											"end": 4009,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3979,
											"end": 4009,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4022,
											"end": 4023,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4019,
											"end": 4020,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4012,
											"end": 4024,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "tag",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4045,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 4086,
											"end": 4093,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4077,
											"end": 4083,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4066,
											"end": 4075,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 4062,
											"end": 4084,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4045,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 4045,
											"end": 4094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/lending/LendingCore.sol",
								"contracts/plugins/StaterTransfers.sol",
								"contracts/workers/IStaterDiscounts.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":\"ERC1155Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.",
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":\"ERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"ERC721Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_3:\n      tag_4\n      tag_5\n      calldatasize\n      0x04\n      tag_6\n      jump\t// in\n    tag_5:\n      shl(0xe1, 0x0a85bd01)\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n    tag_4:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":1629:1662   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1611:1663   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1599:1601   */\n      0x20\n        /* \"#utility.yul\":1584:1602   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"#utility.yul\":14:187   */\n    tag_11:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_15\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_15:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:319   */\n    tag_12:\n        /* \"#utility.yul\":253:263   */\n      0x4e487b71\n        /* \"#utility.yul\":248:251   */\n      0xe0\n        /* \"#utility.yul\":244:264   */\n      shl\n        /* \"#utility.yul\":241:242   */\n      0x00\n        /* \"#utility.yul\":234:265   */\n      mstore\n        /* \"#utility.yul\":284:288   */\n      0x41\n        /* \"#utility.yul\":281:282   */\n      0x04\n        /* \"#utility.yul\":274:289   */\n      mstore\n        /* \"#utility.yul\":308:312   */\n      0x24\n        /* \"#utility.yul\":305:306   */\n      0x00\n        /* \"#utility.yul\":298:313   */\n      revert\n        /* \"#utility.yul\":324:1462   */\n    tag_6:\n        /* \"#utility.yul\":419:425   */\n      0x00\n        /* \"#utility.yul\":427:433   */\n      dup1\n        /* \"#utility.yul\":435:441   */\n      0x00\n        /* \"#utility.yul\":443:449   */\n      dup1\n        /* \"#utility.yul\":496:499   */\n      0x80\n        /* \"#utility.yul\":484:493   */\n      dup6\n        /* \"#utility.yul\":475:482   */\n      dup8\n        /* \"#utility.yul\":471:494   */\n      sub\n        /* \"#utility.yul\":467:500   */\n      slt\n        /* \"#utility.yul\":464:517   */\n      iszero\n      tag_18\n      jumpi\n        /* \"#utility.yul\":513:514   */\n      0x00\n        /* \"#utility.yul\":510:511   */\n      dup1\n        /* \"#utility.yul\":503:515   */\n      revert\n        /* \"#utility.yul\":464:517   */\n    tag_18:\n        /* \"#utility.yul\":536:565   */\n      tag_19\n        /* \"#utility.yul\":555:564   */\n      dup6\n        /* \"#utility.yul\":536:565   */\n      tag_11\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":526:565   */\n      swap4\n      pop\n        /* \"#utility.yul\":584:622   */\n      tag_20\n        /* \"#utility.yul\":618:620   */\n      0x20\n        /* \"#utility.yul\":607:616   */\n      dup7\n        /* \"#utility.yul\":603:621   */\n      add\n        /* \"#utility.yul\":584:622   */\n      tag_11\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":574:622   */\n      swap3\n      pop\n        /* \"#utility.yul\":669:671   */\n      0x40\n        /* \"#utility.yul\":654:672   */\n      dup6\n      add\n        /* \"#utility.yul\":641:673   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":724:726   */\n      0x60\n        /* \"#utility.yul\":709:727   */\n      dup6\n      add\n        /* \"#utility.yul\":696:728   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":777:791   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":774:808   */\n      iszero\n      tag_21\n      jumpi\n        /* \"#utility.yul\":804:805   */\n      0x00\n        /* \"#utility.yul\":801:802   */\n      dup1\n        /* \"#utility.yul\":794:806   */\n      revert\n        /* \"#utility.yul\":774:808   */\n    tag_21:\n        /* \"#utility.yul\":842:848   */\n      dup2\n        /* \"#utility.yul\":831:840   */\n      dup8\n        /* \"#utility.yul\":827:849   */\n      add\n        /* \"#utility.yul\":817:849   */\n      swap2\n      pop\n        /* \"#utility.yul\":887:894   */\n      dup8\n        /* \"#utility.yul\":880:884   */\n      0x1f\n        /* \"#utility.yul\":876:878   */\n      dup4\n        /* \"#utility.yul\":872:885   */\n      add\n        /* \"#utility.yul\":868:895   */\n      slt\n        /* \"#utility.yul\":858:913   */\n      tag_22\n      jumpi\n        /* \"#utility.yul\":909:910   */\n      0x00\n        /* \"#utility.yul\":906:907   */\n      dup1\n        /* \"#utility.yul\":899:911   */\n      revert\n        /* \"#utility.yul\":858:913   */\n    tag_22:\n        /* \"#utility.yul\":945:947   */\n      dup2\n        /* \"#utility.yul\":932:948   */\n      calldataload\n        /* \"#utility.yul\":967:969   */\n      dup2\n        /* \"#utility.yul\":963:965   */\n      dup2\n        /* \"#utility.yul\":960:970   */\n      gt\n        /* \"#utility.yul\":957:993   */\n      iszero\n      tag_24\n      jumpi\n        /* \"#utility.yul\":973:991   */\n      tag_24\n      tag_12\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":1048:1050   */\n      0x40\n        /* \"#utility.yul\":1042:1051   */\n      mload\n        /* \"#utility.yul\":1016:1018   */\n      0x1f\n        /* \"#utility.yul\":1102:1115   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1098:1120   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1122:1124   */\n      0x3f\n        /* \"#utility.yul\":1094:1125   */\n      add\n        /* \"#utility.yul\":1090:1130   */\n      and\n        /* \"#utility.yul\":1078:1131   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1146:1164   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1166:1188   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1143:1189   */\n      or\n        /* \"#utility.yul\":1140:1212   */\n      iszero\n      tag_26\n      jumpi\n        /* \"#utility.yul\":1192:1210   */\n      tag_26\n      tag_12\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":1232:1242   */\n      dup2\n        /* \"#utility.yul\":1228:1230   */\n      0x40\n        /* \"#utility.yul\":1221:1243   */\n      mstore\n        /* \"#utility.yul\":1267:1269   */\n      dup3\n        /* \"#utility.yul\":1259:1265   */\n      dup2\n        /* \"#utility.yul\":1252:1270   */\n      mstore\n        /* \"#utility.yul\":1307:1314   */\n      dup11\n        /* \"#utility.yul\":1302:1304   */\n      0x20\n        /* \"#utility.yul\":1297:1299   */\n      dup5\n        /* \"#utility.yul\":1293:1295   */\n      dup8\n        /* \"#utility.yul\":1289:1300   */\n      add\n        /* \"#utility.yul\":1285:1305   */\n      add\n        /* \"#utility.yul\":1282:1315   */\n      gt\n        /* \"#utility.yul\":1279:1332   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":1328:1329   */\n      0x00\n        /* \"#utility.yul\":1325:1326   */\n      dup1\n        /* \"#utility.yul\":1318:1330   */\n      revert\n        /* \"#utility.yul\":1279:1332   */\n    tag_27:\n        /* \"#utility.yul\":1384:1386   */\n      dup3\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1375:1377   */\n      dup7\n        /* \"#utility.yul\":1371:1382   */\n      add\n        /* \"#utility.yul\":1366:1368   */\n      0x20\n        /* \"#utility.yul\":1358:1364   */\n      dup4\n        /* \"#utility.yul\":1354:1369   */\n      add\n        /* \"#utility.yul\":1341:1387   */\n      calldatacopy\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1424:1426   */\n      0x20\n        /* \"#utility.yul\":1419:1421   */\n      dup5\n        /* \"#utility.yul\":1411:1417   */\n      dup4\n        /* \"#utility.yul\":1407:1422   */\n      add\n        /* \"#utility.yul\":1403:1427   */\n      add\n        /* \"#utility.yul\":1396:1431   */\n      mstore\n        /* \"#utility.yul\":1450:1456   */\n      dup1\n        /* \"#utility.yul\":1440:1456   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":324:1462   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122062d725227bdbc20f2f93e55455015d685cc5bed2dd0d22c1c6d930fc554e589064736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101ae806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004e61003e36600461009d565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200160405180910390f35b80356001600160a01b038116811461008257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156100b357600080fd5b6100bc8561006b565b93506100ca6020860161006b565b92506040850135915060608501356001600160401b03808211156100ed57600080fd5b818701915087601f83011261010157600080fd5b81358181111561011357610113610087565b604051601f8201601f19908116603f0116810190838211818310171561013b5761013b610087565b816040528281528a602084870101111561015457600080fd5b8260208601602083013760006020848301015280955050505050509295919450925056fea264697066735822122062d725227bdbc20f2f93e55455015d685cc5bed2dd0d22c1c6d930fc554e589064736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x9D JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC DUP6 PUSH2 0x6B JUMP JUMPDEST SWAP4 POP PUSH2 0xCA PUSH1 0x20 DUP7 ADD PUSH2 0x6B JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x113 JUMPI PUSH2 0x113 PUSH2 0x87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x13B JUMPI PUSH2 0x13B PUSH2 0x87 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0xD72522 PUSH28 0xDBC20F2F93E55455015D685CC5BED2DD0D22C1C6D930FC554E589064 PUSH20 0x6F6C634300080E00330000000000000000000000 ",
							"sourceMap": "399:391:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC721Received_590": {
									"entryPoint": null,
									"id": 590,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 135,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1671:15",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:15"
															},
															"nodeType": "YulIf",
															"src": "111:70:15"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:15",
														"type": ""
													}
												],
												"src": "14:173:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "224:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "241:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "248:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "253:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "244:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "244:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "234:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "234:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "284:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "274:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "274:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "274:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "305:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "308:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "298:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "298:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "192:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "454:1008:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "501:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "510:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "513:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "503:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "503:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "503:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "475:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "484:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "471:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "471:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "467:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:33:15"
															},
															"nodeType": "YulIf",
															"src": "464:53:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "526:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "555:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "536:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "536:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "526:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "574:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "607:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "618:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "603:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "603:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "584:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "574:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "631:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "658:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "669:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "654:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "654:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "641:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "641:32:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "631:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "682:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "713:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "724:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "709:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "709:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "696:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "696:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "686:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "737:28:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "755:2:15",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "759:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "751:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "751:10:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "763:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "747:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "747:18:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "741:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "792:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "801:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "804:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "794:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "794:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "794:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "788:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "777:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "777:14:15"
															},
															"nodeType": "YulIf",
															"src": "774:34:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "817:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "831:9:15"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "842:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "827:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "827:22:15"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "821:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "897:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "906:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "909:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "899:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "899:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "899:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "876:2:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "880:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "872:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "872:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "887:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "868:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "868:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "861:35:15"
															},
															"nodeType": "YulIf",
															"src": "858:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "922:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "945:2:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "932:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "932:16:15"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "926:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "971:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "973:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "973:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "973:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "963:2:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "967:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "960:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "960:10:15"
															},
															"nodeType": "YulIf",
															"src": "957:36:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1002:17:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1016:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1012:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1012:7:15"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1006:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1028:23:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1042:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1042:9:15"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1032:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1060:71:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1082:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1106:2:15"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1110:4:15",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1102:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1102:13:15"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1117:2:15"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1098:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1098:22:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1122:2:15",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1094:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1094:31:15"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1127:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1090:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1090:40:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1078:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1078:53:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1064:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1190:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1192:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1192:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1192:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1149:10:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1161:2:15"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1146:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1169:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1181:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1166:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1166:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1143:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1143:46:15"
															},
															"nodeType": "YulIf",
															"src": "1140:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1228:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1232:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1221:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1221:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1221:22:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1259:6:15"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1267:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1252:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:18:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1252:18:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1316:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1325:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1318:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1318:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1318:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1293:2:15"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1297:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1289:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1289:11:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1302:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1285:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1285:20:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1307:7:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1282:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1282:33:15"
															},
															"nodeType": "YulIf",
															"src": "1279:53:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1358:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1366:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1354:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1354:15:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1375:2:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1379:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1371:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1371:11:15"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1384:2:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1341:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1341:46:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1341:46:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1411:6:15"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1419:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1407:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1407:15:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1424:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1403:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1403:24:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1396:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1396:35:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1396:35:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1440:16:15",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1450:6:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1440:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "396:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "407:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "419:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "427:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "435:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "443:6:15",
														"type": ""
													}
												],
												"src": "324:1138:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1566:103:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1576:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1588:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1599:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1576:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1618:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1633:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1645:3:15",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1650:10:15",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1641:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1641:20:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1629:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1629:33:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1611:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:52:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1611:52:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1535:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1546:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1557:4:15",
														"type": ""
													}
												],
												"src": "1467:202:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004e61003e36600461009d565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200160405180910390f35b80356001600160a01b038116811461008257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156100b357600080fd5b6100bc8561006b565b93506100ca6020860161006b565b92506040850135915060608501356001600160401b03808211156100ed57600080fd5b818701915087601f83011261010157600080fd5b81358181111561011357610113610087565b604051601f8201601f19908116603f0116810190838211818310171561013b5761013b610087565b816040528281528a602084870101111561015457600080fd5b8260208601602083013760006020848301015280955050505050509295919450925056fea264697066735822122062d725227bdbc20f2f93e55455015d685cc5bed2dd0d22c1c6d930fc554e589064736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x9D JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC DUP6 PUSH2 0x6B JUMP JUMPDEST SWAP4 POP PUSH2 0xCA PUSH1 0x20 DUP7 ADD PUSH2 0x6B JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x113 JUMPI PUSH2 0x113 PUSH2 0x87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x13B JUMPI PUSH2 0x13B PUSH2 0x87 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0xD72522 PUSH28 0xDBC20F2F93E55455015D685CC5BED2DD0D22C1C6D930FC554E589064 PUSH20 0x6F6C634300080E00330000000000000000000000 ",
							"sourceMap": "399:391:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:200;;;;;;:::i;:::-;-1:-1:-1;;;588:200:8;;;;;;;;;;-1:-1:-1;;;;;;1629:33:15;;;1611:52;;1599:2;1584:18;588:200:8;;;;;;;14:173:15;82:20;;-1:-1:-1;;;;;131:31:15;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:127::-;253:10;248:3;244:20;241:1;234:31;284:4;281:1;274:15;308:4;305:1;298:15;324:1138;419:6;427;435;443;496:3;484:9;475:7;471:23;467:33;464:53;;;513:1;510;503:12;464:53;536:29;555:9;536:29;:::i;:::-;526:39;;584:38;618:2;607:9;603:18;584:38;:::i;:::-;574:48;-1:-1:-1;669:2:15;654:18;;641:32;;-1:-1:-1;724:2:15;709:18;;696:32;-1:-1:-1;;;;;777:14:15;;;774:34;;;804:1;801;794:12;774:34;842:6;831:9;827:22;817:32;;887:7;880:4;876:2;872:13;868:27;858:55;;909:1;906;899:12;858:55;945:2;932:16;967:2;963;960:10;957:36;;;973:18;;:::i;:::-;1048:2;1042:9;1016:2;1102:13;;-1:-1:-1;;1098:22:15;;;1122:2;1094:31;1090:40;1078:53;;;1146:18;;;1166:22;;;1143:46;1140:72;;;1192:18;;:::i;:::-;1232:10;1228:2;1221:22;1267:2;1259:6;1252:18;1307:7;1302:2;1297;1293;1289:11;1285:20;1282:33;1279:53;;;1328:1;1325;1318:12;1279:53;1384:2;1379;1375;1371:11;1366:2;1358:6;1354:15;1341:46;1429:1;1424:2;1419;1411:6;1407:15;1403:24;1396:35;1450:6;1440:16;;;;;;;324:1138;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "86000",
								"executionCost": "135",
								"totalCost": "86135"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122062d725227bdbc20f2f93e55455015d685cc5bed2dd0d22c1c6d930fc554e589064736f6c634300080e0033",
									".code": [
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1629,
											"end": 1662,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1629,
											"end": 1662,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1629,
											"end": 1662,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1599,
											"end": 1601,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 192,
											"end": 319,
											"name": "tag",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 192,
											"end": 319,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 253,
											"end": 263,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 248,
											"end": 251,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 244,
											"end": 264,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 241,
											"end": 242,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 265,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 284,
											"end": 288,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 281,
											"end": 282,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 274,
											"end": 289,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 308,
											"end": 312,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 305,
											"end": 306,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 313,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "tag",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 419,
											"end": 425,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 433,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 449,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 496,
											"end": 499,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 484,
											"end": 493,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 475,
											"end": 482,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 471,
											"end": 494,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 467,
											"end": 500,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 464,
											"end": 517,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 464,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 464,
											"end": 517,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 513,
											"end": 514,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 511,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 503,
											"end": 515,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 464,
											"end": 517,
											"name": "tag",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 464,
											"end": 517,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 555,
											"end": 564,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 536,
											"end": 565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 536,
											"end": 565,
											"name": "tag",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 526,
											"end": 565,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 526,
											"end": 565,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 584,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 618,
											"end": 620,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 607,
											"end": 616,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 603,
											"end": 621,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 584,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 584,
											"end": 622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 584,
											"end": 622,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 584,
											"end": 622,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 574,
											"end": 622,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 669,
											"end": 671,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 672,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 654,
											"end": 672,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 641,
											"end": 673,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 641,
											"end": 673,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 724,
											"end": 726,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 709,
											"end": 727,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 709,
											"end": 727,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 696,
											"end": 728,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 777,
											"end": 791,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 777,
											"end": 791,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 777,
											"end": 791,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 774,
											"end": 808,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 774,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 774,
											"end": 808,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 804,
											"end": 805,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 802,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 794,
											"end": 806,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 774,
											"end": 808,
											"name": "tag",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 774,
											"end": 808,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 842,
											"end": 848,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 831,
											"end": 840,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 827,
											"end": 849,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 817,
											"end": 849,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 817,
											"end": 849,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 887,
											"end": 894,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 880,
											"end": 884,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 876,
											"end": 878,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 872,
											"end": 885,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 868,
											"end": 895,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 858,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 858,
											"end": 913,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 909,
											"end": 910,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 907,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 899,
											"end": 911,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 858,
											"end": 913,
											"name": "tag",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 858,
											"end": 913,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 945,
											"end": 947,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 932,
											"end": 948,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 967,
											"end": 969,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 963,
											"end": 965,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 960,
											"end": 970,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 957,
											"end": 993,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 957,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 957,
											"end": 993,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 973,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 973,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 973,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 973,
											"end": 991,
											"name": "tag",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 973,
											"end": 991,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1051,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1016,
											"end": 1018,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1102,
											"end": 1115,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1102,
											"end": 1115,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1120,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1098,
											"end": 1120,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1098,
											"end": 1120,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1122,
											"end": 1124,
											"name": "PUSH",
											"source": 15,
											"value": "3F"
										},
										{
											"begin": 1094,
											"end": 1125,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1090,
											"end": 1130,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1078,
											"end": 1131,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1078,
											"end": 1131,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1078,
											"end": 1131,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1146,
											"end": 1164,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1146,
											"end": 1164,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1146,
											"end": 1164,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1166,
											"end": 1188,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1166,
											"end": 1188,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1166,
											"end": 1188,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 1140,
											"end": 1212,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1140,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 1140,
											"end": 1212,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1192,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 1192,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 1192,
											"end": 1210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1192,
											"end": 1210,
											"name": "tag",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 1192,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1232,
											"end": 1242,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1228,
											"end": 1230,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1243,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1267,
											"end": 1269,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1252,
											"end": 1270,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1307,
											"end": 1314,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1304,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1299,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1295,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1289,
											"end": 1300,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1285,
											"end": 1305,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1282,
											"end": 1315,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1279,
											"end": 1332,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1279,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 1279,
											"end": 1332,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1328,
											"end": 1329,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1326,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1279,
											"end": 1332,
											"name": "tag",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 1279,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1375,
											"end": 1377,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1371,
											"end": 1382,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1366,
											"end": 1368,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1364,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1354,
											"end": 1369,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1341,
											"end": 1387,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1426,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1419,
											"end": 1421,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1411,
											"end": 1417,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1403,
											"end": 1427,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1450,
											"end": 1456,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 324,
											"end": 1462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/lending/LendingCore.sol",
								"contracts/plugins/StaterTransfers.sol",
								"contracts/workers/IStaterDiscounts.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/lending/LendingCore.sol": {
				"LendingCore": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "loanId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "loanAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountDue",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "installmentAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "assetsValue",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "frequencyTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "frequencyTimeUnit",
									"type": "uint256"
								}
							],
							"name": "EditLoan",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "loanId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum LendingCore.Status",
									"name": "status",
									"type": "uint8"
								}
							],
							"name": "ItemsWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "lender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "loanId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "loanPaymentEnd",
									"type": "uint256"
								}
							],
							"name": "LoanApproved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "loanId",
									"type": "uint256"
								}
							],
							"name": "LoanCancelled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "loanId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "installmentAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountPaidAsInstallmentToLender",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "interestPerInstallement",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "interestToStaterPerInstallement",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum LendingCore.Status",
									"name": "status",
									"type": "uint8"
								}
							],
							"name": "LoanPayment",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "loanId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "nftAddressArray",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "nftTokenIdArray",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint8[]",
									"name": "nftTokenTypeArray",
									"type": "uint8[]"
								}
							],
							"name": "NewLoan",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "loanId",
									"type": "uint256"
								}
							],
							"name": "canBeTerminated",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "loanValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "assetsValue",
									"type": "uint256"
								}
							],
							"name": "checkLtv",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "discounts",
							"outputs": [
								{
									"internalType": "contract IStaterDiscounts",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "loanId",
									"type": "uint256"
								}
							],
							"name": "getLoanStartEnd",
							"outputs": [
								{
									"internalType": "uint256[2]",
									"name": "",
									"type": "uint256[2]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "loanId",
									"type": "uint256"
								}
							],
							"name": "getPromissoryPermission",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "id",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "interestRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "interestRateToStater",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lenderFee",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lendingMethodsAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "loans",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "borrower",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "lender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "enum LendingCore.Status",
									"name": "status",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "installmentTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "nrOfPayments",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "loanAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "assetsValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "installmentAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountDue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paidAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "nrOfInstallments",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "defaultingLimit",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ltv",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "promissoryNoteAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "promissoryPermissions",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "nftAddressArray",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "nftTokenIdArray",
									"type": "uint256[]"
								},
								{
									"internalType": "uint8[]",
									"name": "nftTokenTypeArray",
									"type": "uint8[]"
								}
							],
							"name": "transferItems",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "qty1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "qty2",
									"type": "uint256"
								}
							],
							"name": "transferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lending/LendingCore.sol\":140:6047  contract LendingCore is StaterTransfers {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/lending/LendingCore.sol\":2199:2200  1 */\n  0x01\n    /* \"contracts/lending/LendingCore.sol\":2179:2200  uint256 public id = 1 */\n  0x04\n  sstore\n    /* \"contracts/lending/LendingCore.sol\":2242:2244  60 */\n  0x3c\n    /* \"contracts/lending/LendingCore.sol\":2221:2244  uint256 public ltv = 60 */\n  0x05\n  sstore\n    /* \"contracts/lending/LendingCore.sol\":2287:2289  20 */\n  0x14\n    /* \"contracts/lending/LendingCore.sol\":2257:2289  uint256 public interestRate = 20 */\n  0x06\n  sstore\n    /* \"contracts/lending/LendingCore.sol\":2333:2335  40 */\n  0x28\n    /* \"contracts/lending/LendingCore.sol\":2295:2335  uint256 public interestRateToStater = 40 */\n  0x07\n  sstore\n    /* \"contracts/lending/LendingCore.sol\":2341:2370  uint32 public lenderFee = 100 */\n  0x08\n  dup1\n  sload\n  not(0xffffffff)\n  and\n    /* \"contracts/lending/LendingCore.sol\":2367:2370  100 */\n  0x64\n    /* \"contracts/lending/LendingCore.sol\":2341:2370  uint32 public lenderFee = 100 */\n  or\n  swap1\n  sstore\n    /* \"contracts/lending/LendingCore.sol\":140:6047  contract LendingCore is StaterTransfers {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"contracts/lending/LendingCore.sol\":140:6047  contract LendingCore is StaterTransfers {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/lending/LendingCore.sol\":140:6047  contract LendingCore is StaterTransfers {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lending/LendingCore.sol\":140:6047  contract LendingCore is StaterTransfers {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x13c75b5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x24c93fe5\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e3f4a5d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x38daa789\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x407299d7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6fb49d73\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x756db756\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x75af65d1\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7c3a00fd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x87715588\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8ca83f07\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8f829275\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x9e1d7a1e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xaf640d0f\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe1ec3c68\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe70c7446\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/lending/LendingCore.sol\":2056:2092  address public promissoryNoteAddress */\n    tag_4:\n      sload(0x01)\n      tag_32\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_32:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":661:693   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":643:694   */\n      dup2\n      mstore\n        /* \"#utility.yul\":631:633   */\n      0x20\n        /* \"#utility.yul\":616:634   */\n      add\n        /* \"contracts/lending/LendingCore.sol\":2056:2092  address public promissoryNoteAddress */\n      tag_30\n        /* \"#utility.yul\":497:700   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_5:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      shl(0xe1, 0x0a85bd01)\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n    tag_36:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":2620:2653   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2602:2654   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2590:2592   */\n      0x20\n        /* \"#utility.yul\":2575:2593   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      tag_30\n        /* \"#utility.yul\":2458:2660   */\n      jump\n        /* \"contracts/lending/LendingCore.sol\":4294:4350  mapping(uint256 => address) public promissoryPermissions */\n    tag_6:\n      tag_32\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      mstore(0x20, 0x0a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/plugins/StaterTransfers.sol\":625:1330  function transferTokens(... */\n    tag_7:\n      tag_47\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/lending/LendingCore.sol\":2098:2134  address public lendingMethodsAddress */\n    tag_8:\n      sload(0x02)\n      tag_32\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/plugins/StaterTransfers.sol\":1427:2314  function transferItems(... */\n    tag_9:\n      tag_47\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"contracts/lending/LendingCore.sol\":2221:2244  uint256 public ltv = 60 */\n    tag_10:\n      tag_58\n      sload(0x05)\n      dup2\n      jump\n    tag_58:\n      mload(0x40)\n        /* \"#utility.yul\":7089:7114   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":7077:7079   */\n      0x20\n        /* \"#utility.yul\":7062:7080   */\n      add\n        /* \"contracts/lending/LendingCore.sol\":2221:2244  uint256 public ltv = 60 */\n      tag_30\n        /* \"#utility.yul\":6943:7120   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_47\n      tag_63\n      jump\t// in\n        /* \"contracts/lending/LendingCore.sol\":5823:6044  function getPromissoryPermission(uint256 loanId) external view returns(address) {... */\n    tag_12:\n      tag_32\n      tag_65\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n        /* \"contracts/lending/LendingCore.sol\":2140:2173  IStaterDiscounts public discounts */\n    tag_13:\n      sload(0x03)\n      tag_32\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/lending/LendingCore.sol\":2257:2289  uint256 public interestRate = 20 */\n    tag_14:\n      tag_58\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/lending/LendingCore.sol\":5425:5573  function checkLtv(uint256 loanValue, uint256 assetsValue) public view {... */\n    tag_15:\n      tag_47\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n        /* \"contracts/lending/LendingCore.sol\":2341:2370  uint32 public lenderFee = 100 */\n    tag_16:\n      sload(0x08)\n      tag_79\n      swap1\n      0xffffffff\n      and\n      dup2\n      jump\n    tag_79:\n      mload(0x40)\n        /* \"#utility.yul\":7785:7795   */\n      0xffffffff\n        /* \"#utility.yul\":7773:7796   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7755:7797   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7743:7745   */\n      0x20\n        /* \"#utility.yul\":7728:7746   */\n      add\n        /* \"contracts/lending/LendingCore.sol\":2341:2370  uint32 public lenderFee = 100 */\n      tag_30\n        /* \"#utility.yul\":7611:7803   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_32\n      tag_84\n      jump\t// in\n        /* \"contracts/lending/LendingCore.sol\":2295:2335  uint256 public interestRateToStater = 40 */\n    tag_18:\n      tag_58\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/lending/LendingCore.sol\":5689:5817  function getLoanStartEnd(uint256 loanId) external view returns(uint256[2] memory) {... */\n    tag_19:\n      tag_89\n      tag_90\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n        /* \"contracts/lending/LendingCore.sol\":2179:2200  uint256 public id = 1 */\n    tag_20:\n      tag_58\n      sload(0x04)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_21:\n      tag_36\n      tag_98\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_98:\n      shl(0xe0, 0xbc197c81)\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"contracts/lending/LendingCore.sol\":4131:4168  mapping(uint256 => Loan) public loans */\n    tag_22:\n      tag_102\n      tag_103\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_103:\n      mstore(0x20, 0x09)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      0x01\n      dup2\n      add\n      sload\n      0x02\n      dup3\n      add\n      sload\n      0x03\n      dup4\n      add\n      sload\n      0x05\n      dup5\n      add\n      sload\n      0x06\n      dup6\n      add\n      sload\n      0x07\n      dup7\n      add\n      sload\n      0x08\n      dup8\n      add\n      sload\n      0x0b\n      dup9\n      add\n      sload\n      0x0c\n      dup10\n      add\n      sload\n      0x0d\n      dup11\n      add\n      sload\n      0x0e\n      swap1\n      swap11\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap10\n      dup11\n      and\n      swap11\n      swap9\n      dup11\n      and\n      swap10\n      dup9\n      and\n      swap9\n      0xff\n      shl(0xa0, 0x01)\n      swap1\n      swap10\n      div\n      dup10\n      and\n      swap9\n      swap1\n      swap2\n      0xffff\n      dup2\n      and\n      swap2\n      0x010000\n      swap1\n      swap2\n      div\n      and\n      dup14\n      jump\n    tag_102:\n      mload(0x40)\n      tag_30\n      swap14\n      swap13\n      swap12\n      swap11\n      swap10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n        /* \"contracts/lending/LendingCore.sol\":4845:5381  function canBeTerminated(uint256 loanId) public view returns(bool) {... */\n    tag_23:\n      tag_26\n      tag_108\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_24:\n      tag_36\n      tag_112\n      calldatasize\n      0x04\n      tag_113\n      jump\t// in\n    tag_112:\n      shl(0xe0, 0xf23a6e61)\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_47\n      tag_117\n      calldatasize\n      0x04\n      tag_118\n      jump\t// in\n    tag_117:\n      tag_119\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      dup3\n      and\n      shl(0xe5, 0x02711897)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      tag_122\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/plugins/StaterTransfers.sol\":625:1330  function transferTokens(... */\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/plugins/StaterTransfers.sol\":795:817  currency != address(0) */\n      dup4\n      and\n      iszero\n        /* \"contracts/plugins/StaterTransfers.sol\":790:1324  if ( currency != address(0) ){... */\n      tag_126\n      jumpi\n        /* \"contracts/plugins/StaterTransfers.sol\":839:939  IERC20(currency).transferFrom(... */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/plugins/StaterTransfers.sol\":839:868  IERC20(currency).transferFrom */\n      dup5\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"contracts/plugins/StaterTransfers.sol\":839:939  IERC20(currency).transferFrom(... */\n      tag_127\n      swap1\n        /* \"contracts/plugins/StaterTransfers.sol\":884:888  from */\n      dup9\n      swap1\n        /* \"contracts/plugins/StaterTransfers.sol\":904:906  to */\n      dup9\n      swap1\n        /* \"contracts/plugins/StaterTransfers.sol\":923:927  qty1 */\n      dup8\n      swap1\n        /* \"contracts/plugins/StaterTransfers.sol\":839:939  IERC20(currency).transferFrom(... */\n      0x04\n      add\n      tag_128\n      jump\t// in\n    tag_127:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"contracts/plugins/StaterTransfers.sol\":831:981  require(IERC20(currency).transferFrom(... */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12889:12891   */\n      0x20\n        /* \"contracts/plugins/StaterTransfers.sol\":831:981  require(IERC20(currency).transferFrom(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12871:12892   */\n      mstore\n        /* \"#utility.yul\":12928:12930   */\n      0x25\n        /* \"#utility.yul\":12908:12926   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12901:12931   */\n      mstore\n        /* \"#utility.yul\":12967:13001   */\n      0x5472616e73666572206f6620746f6b656e7320746f2072656365697665722066\n        /* \"#utility.yul\":12947:12965   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12940:13002   */\n      mstore\n      shl(0xda, 0x185a5b1959)\n        /* \"#utility.yul\":13018:13036   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13011:13046   */\n      mstore\n        /* \"#utility.yul\":13063:13082   */\n      0x84\n      add\n        /* \"contracts/plugins/StaterTransfers.sol\":831:981  require(IERC20(currency).transferFrom(... */\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"contracts/plugins/StaterTransfers.sol\":1008:1016  currency */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/plugins/StaterTransfers.sol\":1001:1030  IERC20(currency).transferFrom */\n      and\n      0x23b872dd\n        /* \"contracts/plugins/StaterTransfers.sol\":1046:1050  from */\n      dup7\n        /* \"contracts/plugins/StaterTransfers.sol\":1066:1073  owner() */\n      tag_136\n        /* \"contracts/plugins/StaterTransfers.sol\":1066:1071  owner */\n      tag_84\n        /* \"contracts/plugins/StaterTransfers.sol\":1066:1073  owner() */\n      jump\t// in\n    tag_136:\n        /* \"contracts/plugins/StaterTransfers.sol\":1090:1094  qty2 */\n      dup5\n        /* \"contracts/plugins/StaterTransfers.sol\":1001:1106  IERC20(currency).transferFrom(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_137:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_140\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_141:\n        /* \"contracts/plugins/StaterTransfers.sol\":993:1146  require(IERC20(currency).transferFrom(... */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13675:13677   */\n      0x20\n        /* \"contracts/plugins/StaterTransfers.sol\":993:1146  require(IERC20(currency).transferFrom(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13657:13678   */\n      mstore\n        /* \"#utility.yul\":13714:13716   */\n      0x23\n        /* \"#utility.yul\":13694:13712   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13687:13717   */\n      mstore\n        /* \"#utility.yul\":13753:13787   */\n      0x5472616e73666572206f6620746f6b656e7320746f2053746174657220666169\n        /* \"#utility.yul\":13733:13751   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13726:13788   */\n      mstore\n      shl(0xea, 0x1b1959)\n        /* \"#utility.yul\":13804:13822   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13797:13830   */\n      mstore\n        /* \"#utility.yul\":13847:13866   */\n      0x84\n      add\n        /* \"contracts/plugins/StaterTransfers.sol\":993:1146  require(IERC20(currency).transferFrom(... */\n      tag_134\n        /* \"#utility.yul\":13473:13872   */\n      jump\n        /* \"contracts/plugins/StaterTransfers.sol\":993:1146  require(IERC20(currency).transferFrom(... */\n    tag_142:\n        /* \"contracts/plugins/StaterTransfers.sol\":790:1324  if ( currency != address(0) ){... */\n      jump(tag_152)\n    tag_126:\n        /* \"contracts/plugins/StaterTransfers.sol\":1179:1192  to.send(qty1) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/plugins/StaterTransfers.sol\":1179:1186  to.send */\n      dup6\n      and\n      swap1\n        /* \"contracts/plugins/StaterTransfers.sol\":1179:1192  to.send(qty1) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/plugins/StaterTransfers.sol\":1187:1191  qty1 */\n      dup5\n      swap1\n        /* \"contracts/plugins/StaterTransfers.sol\":1179:1192  to.send(qty1) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/plugins/StaterTransfers.sol\":1187:1191  qty1 */\n      dup6\n        /* \"contracts/plugins/StaterTransfers.sol\":1179:1186  to.send */\n      dup9\n        /* \"contracts/plugins/StaterTransfers.sol\":1179:1192  to.send(qty1) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1171:1231  require(to.send(qty1), \"Transfer of ETH to receiver failed\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14079:14081   */\n      0x20\n        /* \"contracts/plugins/StaterTransfers.sol\":1171:1231  require(to.send(qty1), \"Transfer of ETH to receiver failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14061:14082   */\n      mstore\n        /* \"#utility.yul\":14118:14120   */\n      0x22\n        /* \"#utility.yul\":140.8.15116   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14091:14121   */\n      mstore\n        /* \"#utility.yul\":14157:14191   */\n      0x5472616e73666572206f662045544820746f207265636569766572206661696c\n        /* \"#utility.yul\":14137:14155   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14130:14192   */\n      mstore\n      shl(0xf2, 0x1959)\n        /* \"#utility.yul\":14208:14226   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14201:14233   */\n      mstore\n        /* \"#utility.yul\":14250:14269   */\n      0x84\n      add\n        /* \"contracts/plugins/StaterTransfers.sol\":1171:1231  require(to.send(qty1), \"Transfer of ETH to receiver failed\") */\n      tag_134\n        /* \"#utility.yul\":13877:14275   */\n      jump\n        /* \"contracts/plugins/StaterTransfers.sol\":1171:1231  require(to.send(qty1), \"Transfer of ETH to receiver failed\") */\n    tag_147:\n        /* \"contracts/plugins/StaterTransfers.sol\":1259:1266  owner() */\n      tag_150\n        /* \"contracts/plugins/StaterTransfers.sol\":1259:1264  owner */\n      tag_84\n        /* \"contracts/plugins/StaterTransfers.sol\":1259:1266  owner() */\n      jump\t// in\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/plugins/StaterTransfers.sol\":1251:1272  payable(owner()).send */\n      and\n        /* \"contracts/plugins/StaterTransfers.sol\":1251:1278  payable(owner()).send(qty2) */\n      0x08fc\n        /* \"contracts/plugins/StaterTransfers.sol\":1273:1277  qty2 */\n      dup3\n        /* \"contracts/plugins/StaterTransfers.sol\":1251:1278  payable(owner()).send(qty2) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1243:1315  require(payable(owner()).send(qty2), \"Transfer of ETH to Stater failed\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14482:14484   */\n      0x20\n        /* \"contracts/plugins/StaterTransfers.sol\":1243:1315  require(payable(owner()).send(qty2), \"Transfer of ETH to Stater failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14464:14485   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14501:14519   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14494:14524   */\n      mstore\n        /* \"#utility.yul\":14560:14594   */\n      0x5472616e73666572206f662045544820746f20537461746572206661696c6564\n        /* \"#utility.yul\":14540:14558   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14533:14595   */\n      mstore\n        /* \"#utility.yul\":14612:14630   */\n      0x64\n      add\n        /* \"contracts/plugins/StaterTransfers.sol\":1243:1315  require(payable(owner()).send(qty2), \"Transfer of ETH to Stater failed\") */\n      tag_134\n        /* \"#utility.yul\":14280:14636   */\n      jump\n        /* \"contracts/plugins/StaterTransfers.sol\":1243:1315  require(payable(owner()).send(qty2), \"Transfer of ETH to Stater failed\") */\n    tag_152:\n        /* \"contracts/plugins/StaterTransfers.sol\":625:1330  function transferTokens(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/plugins/StaterTransfers.sol\":1427:2314  function transferItems(... */\n    tag_57:\n        /* \"contracts/plugins/StaterTransfers.sol\":1661:1683  nftAddressArray.length */\n      dup3\n      mload\n        /* \"contracts/plugins/StaterTransfers.sol\":1711:1733  nftTokenIdArray.length */\n      dup3\n      mload\n        /* \"contracts/plugins/StaterTransfers.sol\":1701:1733  length == nftTokenIdArray.length */\n      dup2\n      eq\n        /* \"contracts/plugins/StaterTransfers.sol\":1701:1771  length == nftTokenIdArray.length && nftTokenTypeArray.length == length */\n      dup1\n      iszero\n      tag_156\n      jumpi\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1765:1771  length */\n      dup1\n        /* \"contracts/plugins/StaterTransfers.sol\":1737:1754  nftTokenTypeArray */\n      dup3\n        /* \"contracts/plugins/StaterTransfers.sol\":1737:1761  nftTokenTypeArray.length */\n      mload\n        /* \"contracts/plugins/StaterTransfers.sol\":1737:1771  nftTokenTypeArray.length == length */\n      eq\n        /* \"contracts/plugins/StaterTransfers.sol\":1701:1771  length == nftTokenIdArray.length && nftTokenTypeArray.length == length */\n    tag_156:\n        /* \"contracts/plugins/StaterTransfers.sol\":1693:1808  require(length == nftTokenIdArray.length && nftTokenTypeArray.length == length, \"Token infos provided are invalid\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14843:14845   */\n      0x20\n        /* \"contracts/plugins/StaterTransfers.sol\":1693:1808  require(length == nftTokenIdArray.length && nftTokenTypeArray.length == length, \"Token infos provided are invalid\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14825:14846   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14862:14880   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14855:14885   */\n      mstore\n        /* \"#utility.yul\":14921:14955   */\n      0x546f6b656e20696e666f732070726f76696465642061726520696e76616c6964\n        /* \"#utility.yul\":14901:14919   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14894:14956   */\n      mstore\n        /* \"#utility.yul\":14973:14991   */\n      0x64\n      add\n        /* \"contracts/plugins/StaterTransfers.sol\":1693:1808  require(length == nftTokenIdArray.length && nftTokenTypeArray.length == length, \"Token infos provided are invalid\") */\n      tag_134\n        /* \"#utility.yul\":14641:14997   */\n      jump\n        /* \"contracts/plugins/StaterTransfers.sol\":1693:1808  require(length == nftTokenIdArray.length && nftTokenTypeArray.length == length, \"Token infos provided are invalid\") */\n    tag_157:\n        /* \"contracts/plugins/StaterTransfers.sol\":1822:1831  uint256 i */\n      0x00\n        /* \"contracts/plugins/StaterTransfers.sol\":1818:2307  for(uint256 i = 0; i < length; ++i) ... */\n    tag_160:\n        /* \"contracts/plugins/StaterTransfers.sol\":1841:1847  length */\n      dup2\n        /* \"contracts/plugins/StaterTransfers.sol\":1837:1838  i */\n      dup2\n        /* \"contracts/plugins/StaterTransfers.sol\":1837:1847  i < length */\n      lt\n        /* \"contracts/plugins/StaterTransfers.sol\":1818:2307  for(uint256 i = 0; i < length; ++i) ... */\n      iszero\n      tag_161\n      jumpi\n        /* \"contracts/plugins/StaterTransfers.sol\":1872:1889  nftTokenTypeArray */\n      dup3\n        /* \"contracts/plugins/StaterTransfers.sol\":1890:1891  i */\n      dup2\n        /* \"contracts/plugins/StaterTransfers.sol\":1872:1892  nftTokenTypeArray[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_164\n      jumpi\n      tag_164\n      tag_165\n      jump\t// in\n    tag_164:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/plugins/StaterTransfers.sol\":1872:1897  nftTokenTypeArray[i] == 0 */\n      0xff\n      and\n        /* \"contracts/plugins/StaterTransfers.sol\":1896:1897  0 */\n      0x00\n        /* \"contracts/plugins/StaterTransfers.sol\":1872:1897  nftTokenTypeArray[i] == 0 */\n      sub\n        /* \"contracts/plugins/StaterTransfers.sol\":1867:2307  if ( nftTokenTypeArray[i] == 0 )... */\n      tag_166\n      jumpi\n        /* \"contracts/plugins/StaterTransfers.sol\":1924:1939  nftAddressArray */\n      dup5\n        /* \"contracts/plugins/StaterTransfers.sol\":1940:1941  i */\n      dup2\n        /* \"contracts/plugins/StaterTransfers.sol\":1924:1942  nftAddressArray[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_168\n      jumpi\n      tag_168\n      tag_165\n      jump\t// in\n    tag_168:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/plugins/StaterTransfers.sol\":1916:1960  IERC721(nftAddressArray[i]).safeTransferFrom */\n      and\n      0x42842e0e\n        /* \"contracts/plugins/StaterTransfers.sol\":1982:1986  from */\n      dup9\n        /* \"contracts/plugins/StaterTransfers.sol\":2008:2010  to */\n      dup9\n        /* \"contracts/plugins/StaterTransfers.sol\":2032:2047  nftTokenIdArray */\n      dup8\n        /* \"contracts/plugins/StaterTransfers.sol\":2048:2049  i */\n      dup6\n        /* \"contracts/plugins/StaterTransfers.sol\":2032:2050  nftTokenIdArray[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_170\n      jumpi\n      tag_170\n      tag_165\n      jump\t// in\n    tag_170:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/plugins/StaterTransfers.sol\":1916:2068  IERC721(nftAddressArray[i]).safeTransferFrom(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_171:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_174\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_174:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1867:2307  if ( nftTokenTypeArray[i] == 0 )... */\n      jump(tag_175)\n    tag_166:\n        /* \"contracts/plugins/StaterTransfers.sol\":2112:2127  nftAddressArray */\n      dup5\n        /* \"contracts/plugins/StaterTransfers.sol\":2128:2129  i */\n      dup2\n        /* \"contracts/plugins/StaterTransfers.sol\":2112:2130  nftAddressArray[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_177\n      jumpi\n      tag_177\n      tag_165\n      jump\t// in\n    tag_177:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/plugins/StaterTransfers.sol\":2103:2148  IERC1155(nftAddressArray[i]).safeTransferFrom */\n      and\n      0xf242432a\n        /* \"contracts/plugins/StaterTransfers.sol\":2170:2174  from */\n      dup9\n        /* \"contracts/plugins/StaterTransfers.sol\":2196:2198  to */\n      dup9\n        /* \"contracts/plugins/StaterTransfers.sol\":2220:2235  nftTokenIdArray */\n      dup8\n        /* \"contracts/plugins/StaterTransfers.sol\":2236:2237  i */\n      dup6\n        /* \"contracts/plugins/StaterTransfers.sol\":2220:2238  nftTokenIdArray[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_179\n      jumpi\n      tag_179\n      tag_165\n      jump\t// in\n    tag_179:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/plugins/StaterTransfers.sol\":2260:2261  1 */\n      0x01\n        /* \"contracts/plugins/StaterTransfers.sol\":2103:2307  IERC1155(nftAddressArray[i]).safeTransferFrom(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15493:15508   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":15475:15509   */\n      dup2\n      mstore\n        /* \"#utility.yul\":15545:15560   */\n      swap3\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":15540:15542   */\n      0x20\n        /* \"#utility.yul\":15525:15543   */\n      dup4\n      add\n        /* \"#utility.yul\":15518:15561   */\n      mstore\n        /* \"#utility.yul\":15592:15594   */\n      0x40\n        /* \"#utility.yul\":15577:15595   */\n      dup3\n      add\n        /* \"#utility.yul\":15570:15604   */\n      mstore\n        /* \"#utility.yul\":15635:15637   */\n      0x60\n        /* \"#utility.yul\":15620:15638   */\n      dup2\n      add\n        /* \"#utility.yul\":15613:15647   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":15455:15458   */\n      0xa0\n        /* \"#utility.yul\":15678:15681   */\n      0x80\n        /* \"#utility.yul\":15663:15682   */\n      dup3\n      add\n        /* \"#utility.yul\":15656:15688   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":15725:15726   */\n      0x04\n        /* \"#utility.yul\":15704:15723   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15697:15727   */\n      mstore\n      shl(0xe4, 0x03078303)\n        /* \"#utility.yul\":15758:15761   */\n      0xc0\n        /* \"#utility.yul\":15743:15762   */\n      dup3\n      add\n        /* \"#utility.yul\":15736:15771   */\n      mstore\n        /* \"#utility.yul\":15803:15806   */\n      0xe0\n        /* \"#utility.yul\":15788:15807   */\n      add\n      swap1\n        /* \"#utility.yul\":15134:15813   */\n      jump\n        /* \"contracts/plugins/StaterTransfers.sol\":2103:2307  IERC1155(nftAddressArray[i]).safeTransferFrom(... */\n    tag_180:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1867:2307  if ( nftTokenTypeArray[i] == 0 )... */\n    tag_175:\n        /* \"contracts/plugins/StaterTransfers.sol\":1849:1852  ++i */\n      tag_185\n      dup2\n      tag_186\n      jump\t// in\n    tag_185:\n      swap1\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1818:2307  for(uint256 i = 0; i < length; ++i) ... */\n      jump(tag_160)\n    tag_161:\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1634:2314  {... */\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1427:2314  function transferItems(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_193\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/lending/LendingCore.sol\":5823:6044  function getPromissoryPermission(uint256 loanId) external view returns(address) {... */\n    tag_66:\n        /* \"contracts/lending/LendingCore.sol\":5894:5901  address */\n      0x00\n        /* \"contracts/lending/LendingCore.sol\":5945:5960  Status.APPROVED */\n      0x01\n        /* \"contracts/lending/LendingCore.sol\":5921:5934  loans[loanId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/lending/LendingCore.sol\":5921:5926  loans */\n      0x09\n        /* \"contracts/lending/LendingCore.sol\":5921:5934  loans[loanId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/lending/LendingCore.sol\":5921:5941  loans[loanId].status */\n      0x03\n      add\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/lending/LendingCore.sol\":5921:5960  loans[loanId].status == Status.APPROVED */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_202\n      jumpi\n      tag_202\n      tag_200\n      jump\t// in\n    tag_202:\n      eq\n        /* \"contracts/lending/LendingCore.sol\":5913:5991  require(loans[loanId].status == Status.APPROVED, \"Loan is no longer approved\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16653:16655   */\n      0x20\n        /* \"contracts/lending/LendingCore.sol\":5913:5991  require(loans[loanId].status == Status.APPROVED, \"Loan is no longer approved\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16635:16656   */\n      mstore\n        /* \"#utility.yul\":16692:16694   */\n      0x1a\n        /* \"#utility.yul\":16672:16690   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16665:16695   */\n      mstore\n      shl(0x32, 0x131bd85b881a5cc81b9bc81b1bdb99d95c88185c1c1c9bdd9959)\n        /* \"#utility.yul\":16711:16729   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16704:16760   */\n      mstore\n        /* \"#utility.yul\":16777:16795   */\n      0x64\n      add\n        /* \"contracts/lending/LendingCore.sol\":5913:5991  require(loans[loanId].status == Status.APPROVED, \"Loan is no longer approved\") */\n      tag_134\n        /* \"#utility.yul\":16451:16801   */\n      jump\n        /* \"contracts/lending/LendingCore.sol\":5913:5991  require(loans[loanId].status == Status.APPROVED, \"Loan is no longer approved\") */\n    tag_203:\n      pop\n        /* \"contracts/lending/LendingCore.sol\":6008:6037  promissoryPermissions[loanId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/lending/LendingCore.sol\":6008:6029  promissoryPermissions */\n      0x0a\n        /* \"contracts/lending/LendingCore.sol\":6008:6037  promissoryPermissions[loanId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/lending/LendingCore.sol\":5823:6044  function getPromissoryPermission(uint256 loanId) external view returns(address) {... */\n      jump\t// out\n        /* \"contracts/lending/LendingCore.sol\":5425:5573  function checkLtv(uint256 loanValue, uint256 assetsValue) public view {... */\n    tag_78:\n        /* \"contracts/lending/LendingCore.sol\":5546:5549  ltv */\n      sload(0x05)\n        /* \"contracts/lending/LendingCore.sol\":5526:5543  assetsValue / 100 */\n      tag_207\n        /* \"contracts/lending/LendingCore.sol\":5540:5543  100 */\n      0x64\n        /* \"contracts/lending/LendingCore.sol\":5526:5537  assetsValue */\n      dup4\n        /* \"contracts/lending/LendingCore.sol\":5526:5543  assetsValue / 100 */\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"contracts/lending/LendingCore.sol\":5526:5549  assetsValue / 100 * ltv */\n      tag_209\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"contracts/lending/LendingCore.sol\":5513:5522  loanValue */\n      dup3\n        /* \"contracts/lending/LendingCore.sol\":5513:5549  loanValue <= assetsValue / 100 * ltv */\n      gt\n      iszero\n        /* \"contracts/lending/LendingCore.sol\":5505:5566  require(loanValue <= assetsValue / 100 * ltv, \"LTV too high\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17403:17405   */\n      0x20\n        /* \"contracts/lending/LendingCore.sol\":5505:5566  require(loanValue <= assetsValue / 100 * ltv, \"LTV too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17385:17406   */\n      mstore\n        /* \"#utility.yul\":17442:17444   */\n      0x0c\n        /* \"#utility.yul\":17422:17440   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17415:17445   */\n      mstore\n      shl(0xa3, 0x098a8ac40e8dede40d0d2ced)\n        /* \"#utility.yul\":17461:17479   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17454:17496   */\n      mstore\n        /* \"#utility.yul\":17513:17531   */\n      0x64\n      add\n        /* \"contracts/lending/LendingCore.sol\":5505:5566  require(loanValue <= assetsValue / 100 * ltv, \"LTV too high\") */\n      tag_134\n        /* \"#utility.yul\":17201:17537   */\n      jump\n        /* \"contracts/lending/LendingCore.sol\":5505:5566  require(loanValue <= assetsValue / 100 * ltv, \"LTV too high\") */\n    tag_211:\n        /* \"contracts/lending/LendingCore.sol\":5425:5573  function checkLtv(uint256 loanValue, uint256 assetsValue) public view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump\t// out\n        /* \"contracts/lending/LendingCore.sol\":5689:5817  function getLoanStartEnd(uint256 loanId) external view returns(uint256[2] memory) {... */\n    tag_91:\n        /* \"contracts/lending/LendingCore.sol\":5752:5769  uint256[2] memory */\n      tag_215\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"contracts/lending/LendingCore.sol\":5788:5801  loans[loanId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/lending/LendingCore.sol\":5788:5793  loans */\n      0x09\n        /* \"contracts/lending/LendingCore.sol\":5788:5801  loans[loanId] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/lending/LendingCore.sol\":5781:5810  return loans[loanId].startEnd */\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      swap4\n      dup5\n      swap1\n      mstore\n      swap3\n        /* \"contracts/lending/LendingCore.sol\":5788:5810  loans[loanId].startEnd */\n      swap2\n      add\n      swap1\n        /* \"contracts/lending/LendingCore.sol\":5781:5810  return loans[loanId].startEnd */\n      0x02\n      swap1\n        /* \"contracts/lending/LendingCore.sol\":5788:5810  loans[loanId].startEnd */\n      dup3\n        /* \"contracts/lending/LendingCore.sol\":5781:5810  return loans[loanId].startEnd */\n      dup5\n    tag_219:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_219\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/lending/LendingCore.sol\":5689:5817  function getLoanStartEnd(uint256 loanId) external view returns(uint256[2] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/lending/LendingCore.sol\":4845:5381  function canBeTerminated(uint256 loanId) public view returns(bool) {... */\n    tag_109:\n        /* \"contracts/lending/LendingCore.sol\":4906:4910  bool */\n      0x00\n        /* \"contracts/lending/LendingCore.sol\":4954:4969  Status.APPROVED */\n      0x01\n        /* \"contracts/lending/LendingCore.sol\":4930:4943  loans[loanId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/lending/LendingCore.sol\":4930:4935  loans */\n      0x09\n        /* \"contracts/lending/LendingCore.sol\":4930:4943  loans[loanId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/lending/LendingCore.sol\":4930:4950  loans[loanId].status */\n      0x03\n      add\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/lending/LendingCore.sol\":4930:4969  loans[loanId].status == Status.APPROVED */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_225\n      jumpi\n      tag_225\n      tag_200\n      jump\t// in\n    tag_225:\n      eq\n        /* \"contracts/lending/LendingCore.sol\":4930:5014  loans[loanId].status == Status.APPROVED || loans[loanId].status == Status.LIQUIDATED */\n      dup1\n      tag_226\n      jumpi\n      pop\n        /* \"contracts/lending/LendingCore.sol\":4997:5014  Status.LIQUIDATED */\n      0x02\n        /* \"contracts/lending/LendingCore.sol\":4973:4986  loans[loanId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/lending/LendingCore.sol\":4973:4978  loans */\n      0x09\n        /* \"contracts/lending/LendingCore.sol\":4973:4986  loans[loanId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/lending/LendingCore.sol\":4973:4993  loans[loanId].status */\n      0x03\n      add\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/lending/LendingCore.sol\":4973:5014  loans[loanId].status == Status.LIQUIDATED */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_230\n      jumpi\n      tag_230\n      tag_200\n      jump\t// in\n    tag_230:\n      eq\n        /* \"contracts/lending/LendingCore.sol\":4930:5014  loans[loanId].status == Status.APPROVED || loans[loanId].status == Status.LIQUIDATED */\n    tag_226:\n        /* \"contracts/lending/LendingCore.sol\":4922:5043  require(loans[loanId].status == Status.APPROVED || loans[loanId].status == Status.LIQUIDATED, \"Loan is not yet approved\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17744:17746   */\n      0x20\n        /* \"contracts/lending/LendingCore.sol\":4922:5043  require(loans[loanId].status == Status.APPROVED || loans[loanId].status == Status.LIQUIDATED, \"Loan is not yet approved\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17726:17747   */\n      mstore\n        /* \"#utility.yul\":17783:17785   */\n      0x18\n        /* \"#utility.yul\":17763:17781   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17756:17786   */\n      mstore\n      shl(0x42, 0x131bd85b881a5cc81b9bdd081e595d08185c1c1c9bdd9959)\n        /* \"#utility.yul\":17802:17820   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17795:17849   */\n      mstore\n        /* \"#utility.yul\":17866:17884   */\n      0x64\n      add\n        /* \"contracts/lending/LendingCore.sol\":4922:5043  require(loans[loanId].status == Status.APPROVED || loans[loanId].status == Status.LIQUIDATED, \"Loan is not yet approved\") */\n      tag_134\n        /* \"#utility.yul\":17542:17890   */\n      jump\n        /* \"contracts/lending/LendingCore.sol\":4922:5043  require(loans[loanId].status == Status.APPROVED || loans[loanId].status == Status.LIQUIDATED, \"Loan is not yet approved\") */\n    tag_231:\n        /* \"contracts/lending/LendingCore.sol\":5348:5361  loans[loanId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/lending/LendingCore.sol\":5348:5353  loans */\n      0x09\n        /* \"contracts/lending/LendingCore.sol\":5348:5361  loans[loanId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/lending/LendingCore.sol\":5348:5373  loans[loanId].startEnd[1] */\n      0x0a\n      add\n      sload\n        /* \"contracts/lending/LendingCore.sol\":5328:5374  min(block.timestamp,loans[loanId].startEnd[1]) */\n      tag_234\n      swap1\n        /* \"contracts/lending/LendingCore.sol\":5332:5347  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/lending/LendingCore.sol\":5328:5331  min */\n      tag_238\n        /* \"contracts/lending/LendingCore.sol\":5328:5374  min(block.timestamp,loans[loanId].startEnd[1]) */\n      jump\t// in\n    tag_234:\n        /* \"contracts/lending/LendingCore.sol\":5295:5308  loans[loanId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/lending/LendingCore.sol\":5295:5300  loans */\n      0x09\n        /* \"contracts/lending/LendingCore.sol\":5295:5308  loans[loanId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/lending/LendingCore.sol\":5295:5324  loans[loanId].installmentTime */\n      0x05\n      dup2\n      add\n      sload\n        /* \"contracts/lending/LendingCore.sol\":5263:5292  loans[loanId].defaultingLimit */\n      0x0e\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/lending/LendingCore.sol\":5263:5324  loans[loanId].defaultingLimit * loans[loanId].installmentTime */\n      tag_239\n      swap2\n        /* \"contracts/lending/LendingCore.sol\":5295:5324  loans[loanId].installmentTime */\n      swap1\n        /* \"contracts/lending/LendingCore.sol\":5263:5292  loans[loanId].defaultingLimit */\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/lending/LendingCore.sol\":5263:5324  loans[loanId].defaultingLimit * loans[loanId].installmentTime */\n      tag_210\n      jump\t// in\n    tag_239:\n        /* \"contracts/lending/LendingCore.sol\":5229:5242  loans[loanId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/lending/LendingCore.sol\":5229:5234  loans */\n      0x09\n        /* \"contracts/lending/LendingCore.sol\":5229:5242  loans[loanId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/lending/LendingCore.sol\":5229:5258  loans[loanId].installmentTime */\n      0x05\n      dup2\n      add\n      sload\n        /* \"contracts/lending/LendingCore.sol\":5200:5226  loans[loanId].nrOfPayments */\n      0x06\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/lending/LendingCore.sol\":5200:5258  loans[loanId].nrOfPayments * loans[loanId].installmentTime */\n      tag_240\n      swap2\n        /* \"contracts/lending/LendingCore.sol\":5229:5258  loans[loanId].installmentTime */\n      swap1\n        /* \"contracts/lending/LendingCore.sol\":5200:5258  loans[loanId].nrOfPayments * loans[loanId].installmentTime */\n      tag_210\n      jump\t// in\n    tag_240:\n        /* \"contracts/lending/LendingCore.sol\":5172:5185  loans[loanId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/lending/LendingCore.sol\":5172:5177  loans */\n      0x09\n        /* \"contracts/lending/LendingCore.sol\":5172:5185  loans[loanId] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/lending/LendingCore.sol\":5172:5194  loans[loanId].startEnd */\n      add\n        /* \"contracts/lending/LendingCore.sol\":5172:5197  loans[loanId].startEnd[0] */\n      add\n      sload\n        /* \"contracts/lending/LendingCore.sol\":5172:5258  loans[loanId].startEnd[0] + loans[loanId].nrOfPayments * loans[loanId].installmentTime */\n      tag_244\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"contracts/lending/LendingCore.sol\":5170:5324  ( loans[loanId].startEnd[0] + loans[loanId].nrOfPayments * loans[loanId].installmentTime ) + loans[loanId].defaultingLimit * loans[loanId].installmentTime */\n      tag_246\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_246:\n        /* \"contracts/lending/LendingCore.sol\":5170:5374  ( loans[loanId].startEnd[0] + loans[loanId].nrOfPayments * loans[loanId].installmentTime ) + loans[loanId].defaultingLimit * loans[loanId].installmentTime <= min(block.timestamp,loans[loanId].startEnd[1]) */\n      gt\n      iszero\n      swap3\n        /* \"contracts/lending/LendingCore.sol\":4845:5381  function canBeTerminated(uint256 loanId) public view returns(bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_250\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_250:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_193\n      jump\t// in\n    tag_251:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18230:18232   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18212:18233   */\n      mstore\n        /* \"#utility.yul\":18269:18271   */\n      0x26\n        /* \"#utility.yul\":18249:18267   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18242:18272   */\n      mstore\n        /* \"#utility.yul\":18308:18342   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":18288:18306   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18281:18343   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":18359:18377   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":18352:18388   */\n      mstore\n        /* \"#utility.yul\":18405:18424   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_134\n        /* \"#utility.yul\":18028:18430   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_254:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_257\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/lending/LendingCore.sol\":5580:5683  function min(uint256 a, uint256 b) internal pure returns(uint256) {... */\n    tag_238:\n        /* \"contracts/lending/LendingCore.sol\":5637:5644  uint256 */\n      0x00\n        /* \"contracts/lending/LendingCore.sol\":5667:5668  b */\n      dup2\n        /* \"contracts/lending/LendingCore.sol\":5663:5664  a */\n      dup4\n        /* \"contracts/lending/LendingCore.sol\":5663:5668  a < b */\n      lt\n        /* \"contracts/lending/LendingCore.sol\":5663:5676  a < b ? a : b */\n      tag_262\n      jumpi\n        /* \"contracts/lending/LendingCore.sol\":5675:5676  b */\n      dup2\n        /* \"contracts/lending/LendingCore.sol\":5663:5676  a < b ? a : b */\n      jump(tag_263)\n    tag_262:\n        /* \"contracts/lending/LendingCore.sol\":5671:5672  a */\n      dup3\n        /* \"contracts/lending/LendingCore.sol\":5663:5676  a < b ? a : b */\n    tag_263:\n        /* \"contracts/lending/LendingCore.sol\":5656:5676  return a < b ? a : b */\n      swap4\n        /* \"contracts/lending/LendingCore.sol\":5580:5683  function min(uint256 a, uint256 b) internal pure returns(uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_216:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      swap1\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      swap2\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_28:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_276:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_263\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":705:836   */\n    tag_264:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":780:811   */\n      dup2\n      and\n        /* \"#utility.yul\":770:812   */\n      dup2\n      eq\n        /* \"#utility.yul\":760:830   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":826:827   */\n      0x00\n        /* \"#utility.yul\":823:824   */\n      dup1\n        /* \"#utility.yul\":816:828   */\n      revert\n        /* \"#utility.yul\":841:968   */\n    tag_265:\n        /* \"#utility.yul\":902:912   */\n      0x4e487b71\n        /* \"#utility.yul\":897:900   */\n      0xe0\n        /* \"#utility.yul\":893:913   */\n      shl\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":883:914   */\n      mstore\n        /* \"#utility.yul\":933:937   */\n      0x41\n        /* \"#utility.yul\":930:931   */\n      0x04\n        /* \"#utility.yul\":923:938   */\n      mstore\n        /* \"#utility.yul\":957:961   */\n      0x24\n        /* \"#utility.yul\":954:955   */\n      0x00\n        /* \"#utility.yul\":947:962   */\n      revert\n        /* \"#utility.yul\":973:1248   */\n    tag_266:\n        /* \"#utility.yul\":1044:1046   */\n      0x40\n        /* \"#utility.yul\":1038:1047   */\n      mload\n        /* \"#utility.yul\":1109:1111   */\n      0x1f\n        /* \"#utility.yul\":1090:1103   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1086:1113   */\n      and\n        /* \"#utility.yul\":1074:1114   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1129:1163   */\n      dup2\n      gt\n        /* \"#utility.yul\":1165:1187   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1126:1188   */\n      or\n        /* \"#utility.yul\":1123:1211   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":1191:1209   */\n      tag_285\n      tag_265\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":1227:1229   */\n      0x40\n        /* \"#utility.yul\":1220:1242   */\n      mstore\n        /* \"#utility.yul\":973:1248   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1253:1783   */\n    tag_267:\n        /* \"#utility.yul\":1295:1300   */\n      0x00\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1345   */\n      0x1f\n        /* \"#utility.yul\":1333:1339   */\n      dup4\n        /* \"#utility.yul\":1329:1346   */\n      add\n        /* \"#utility.yul\":1325:1352   */\n      slt\n        /* \"#utility.yul\":1315:1370   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":1366:1367   */\n      0x00\n        /* \"#utility.yul\":1363:1364   */\n      dup1\n        /* \"#utility.yul\":1356:1368   */\n      revert\n        /* \"#utility.yul\":1315:1370   */\n    tag_287:\n        /* \"#utility.yul\":1389:1409   */\n      dup2\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1421:1447   */\n      dup2\n      gt\n        /* \"#utility.yul\":1418:1470   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":1450:1468   */\n      tag_289\n      tag_265\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":1494:1549   */\n      tag_290\n        /* \"#utility.yul\":1537:1539   */\n      0x1f\n        /* \"#utility.yul\":1518:1531   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1514:1541   */\n      and\n        /* \"#utility.yul\":1543:1547   */\n      0x20\n        /* \"#utility.yul\":1510:1548   */\n      add\n        /* \"#utility.yul\":1494:1549   */\n      tag_266\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":1574:1576   */\n      dup2\n        /* \"#utility.yul\":1565:1572   */\n      dup2\n        /* \"#utility.yul\":1558:1577   */\n      mstore\n        /* \"#utility.yul\":1620:1623   */\n      dup5\n        /* \"#utility.yul\":1613:1617   */\n      0x20\n        /* \"#utility.yul\":1608:1610   */\n      dup4\n        /* \"#utility.yul\":1600:1606   */\n      dup7\n        /* \"#utility.yul\":1596:1611   */\n      add\n        /* \"#utility.yul\":1592:1618   */\n      add\n        /* \"#utility.yul\":1589:1624   */\n      gt\n        /* \"#utility.yul\":1586:1641   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":1637:1638   */\n      0x00\n        /* \"#utility.yul\":1634:1635   */\n      dup1\n        /* \"#utility.yul\":1627:1639   */\n      revert\n        /* \"#utility.yul\":1586:1641   */\n    tag_291:\n        /* \"#utility.yul\":1702:1704   */\n      dup2\n        /* \"#utility.yul\":1695:1699   */\n      0x20\n        /* \"#utility.yul\":1687:1693   */\n      dup6\n        /* \"#utility.yul\":1683:1700   */\n      add\n        /* \"#utility.yul\":1676:1680   */\n      0x20\n        /* \"#utility.yul\":1667:1674   */\n      dup4\n        /* \"#utility.yul\":1663:1681   */\n      add\n        /* \"#utility.yul\":1650:1705   */\n      calldatacopy\n        /* \"#utility.yul\":1750:1751   */\n      0x00\n        /* \"#utility.yul\":1725:1741   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":1743:1747   */\n      0x20\n        /* \"#utility.yul\":1721:1748   */\n      add\n        /* \"#utility.yul\":1714:1752   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1729:1736   */\n      swap4\n        /* \"#utility.yul\":1253:1783   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1788:2453   */\n    tag_38:\n        /* \"#utility.yul\":1883:1889   */\n      0x00\n        /* \"#utility.yul\":1891:1897   */\n      dup1\n        /* \"#utility.yul\":1899:1905   */\n      0x00\n        /* \"#utility.yul\":1907:1913   */\n      dup1\n        /* \"#utility.yul\":1960:1963   */\n      0x80\n        /* \"#utility.yul\":1948:1957   */\n      dup6\n        /* \"#utility.yul\":1939:1946   */\n      dup8\n        /* \"#utility.yul\":1935:1958   */\n      sub\n        /* \"#utility.yul\":1931:1964   */\n      slt\n        /* \"#utility.yul\":1928:1981   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":1977:1978   */\n      0x00\n        /* \"#utility.yul\":1974:1975   */\n      dup1\n        /* \"#utility.yul\":1967:1979   */\n      revert\n        /* \"#utility.yul\":1928:1981   */\n    tag_293:\n        /* \"#utility.yul\":2016:2025   */\n      dup5\n        /* \"#utility.yul\":2003:2026   */\n      calldataload\n        /* \"#utility.yul\":2035:2066   */\n      tag_294\n        /* \"#utility.yul\":2060:2065   */\n      dup2\n        /* \"#utility.yul\":2035:2066   */\n      tag_264\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2085:2090   */\n      swap4\n      pop\n        /* \"#utility.yul\":2142:2144   */\n      0x20\n        /* \"#utility.yul\":2127:2145   */\n      dup6\n      add\n        /* \"#utility.yul\":2114:2146   */\n      calldataload\n        /* \"#utility.yul\":2155:2188   */\n      tag_295\n        /* \"#utility.yul\":2114:2146   */\n      dup2\n        /* \"#utility.yul\":2155:2188   */\n      tag_264\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":2207:2214   */\n      swap3\n      pop\n        /* \"#utility.yul\":2261:2263   */\n      0x40\n        /* \"#utility.yul\":2246:2264   */\n      dup6\n      add\n        /* \"#utility.yul\":2233:2265   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2316:2318   */\n      0x60\n        /* \"#utility.yul\":2301:2319   */\n      dup6\n      add\n        /* \"#utility.yul\":2288:2320   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2332:2362   */\n      dup2\n      gt\n        /* \"#utility.yul\":2329:2379   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":2375:2376   */\n      0x00\n        /* \"#utility.yul\":2372:2373   */\n      dup1\n        /* \"#utility.yul\":2365:2377   */\n      revert\n        /* \"#utility.yul\":2329:2379   */\n    tag_296:\n        /* \"#utility.yul\":2398:2447   */\n      tag_297\n        /* \"#utility.yul\":2439:2446   */\n      dup8\n        /* \"#utility.yul\":2430:2436   */\n      dup3\n        /* \"#utility.yul\":2419:2428   */\n      dup9\n        /* \"#utility.yul\":2415:2437   */\n      add\n        /* \"#utility.yul\":2398:2447   */\n      tag_267\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":2388:2447   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1788:2453   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2665:2845   */\n    tag_44:\n        /* \"#utility.yul\":2724:2730   */\n      0x00\n        /* \"#utility.yul\":2777:2779   */\n      0x20\n        /* \"#utility.yul\":2765:2774   */\n      dup3\n        /* \"#utility.yul\":2756:2763   */\n      dup5\n        /* \"#utility.yul\":2752:2775   */\n      sub\n        /* \"#utility.yul\":2748:2780   */\n      slt\n        /* \"#utility.yul\":2745:2797   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":2793:2794   */\n      0x00\n        /* \"#utility.yul\":2790:2791   */\n      dup1\n        /* \"#utility.yul\":2783:2795   */\n      revert\n        /* \"#utility.yul\":2745:2797   */\n    tag_300:\n      pop\n        /* \"#utility.yul\":2816:2839   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2665:2845   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2850:3525   */\n    tag_49:\n        /* \"#utility.yul\":2953:2959   */\n      0x00\n        /* \"#utility.yul\":2961:2967   */\n      dup1\n        /* \"#utility.yul\":2969:2975   */\n      0x00\n        /* \"#utility.yul\":2977:2983   */\n      dup1\n        /* \"#utility.yul\":2985:2991   */\n      0x00\n        /* \"#utility.yul\":3038:3041   */\n      0xa0\n        /* \"#utility.yul\":3026:3035   */\n      dup7\n        /* \"#utility.yul\":3017:3024   */\n      dup9\n        /* \"#utility.yul\":3013:3036   */\n      sub\n        /* \"#utility.yul\":3009:3042   */\n      slt\n        /* \"#utility.yul\":3006:3059   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":3006:3059   */\n    tag_302:\n        /* \"#utility.yul\":3094:3103   */\n      dup6\n        /* \"#utility.yul\":3081:3104   */\n      calldataload\n        /* \"#utility.yul\":3113:3144   */\n      tag_303\n        /* \"#utility.yul\":3138:3143   */\n      dup2\n        /* \"#utility.yul\":3113:3144   */\n      tag_264\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":3163:3168   */\n      swap5\n      pop\n        /* \"#utility.yul\":3220:3222   */\n      0x20\n        /* \"#utility.yul\":3205:3223   */\n      dup7\n      add\n        /* \"#utility.yul\":3192:3224   */\n      calldataload\n        /* \"#utility.yul\":3233:3266   */\n      tag_304\n        /* \"#utility.yul\":3192:3224   */\n      dup2\n        /* \"#utility.yul\":3233:3266   */\n      tag_264\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3285:3292   */\n      swap4\n      pop\n        /* \"#utility.yul\":3344:3346   */\n      0x40\n        /* \"#utility.yul\":3329:3347   */\n      dup7\n      add\n        /* \"#utility.yul\":3316:3348   */\n      calldataload\n        /* \"#utility.yul\":3357:3390   */\n      tag_305\n        /* \"#utility.yul\":3316:3348   */\n      dup2\n        /* \"#utility.yul\":3357:3390   */\n      tag_264\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":2850:3525   */\n      swap5\n      swap8\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":3409:3416   */\n      swap4\n      swap5\n        /* \"#utility.yul\":3463:3465   */\n      0x60\n        /* \"#utility.yul\":3448:3466   */\n      dup2\n      add\n        /* \"#utility.yul\":3435:3467   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":3514:3517   */\n      0x80\n        /* \"#utility.yul\":3499:3518   */\n      add\n        /* \"#utility.yul\":3486:3519   */\n      calldataload\n      swap3\n        /* \"#utility.yul\":2850:3525   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3530:3713   */\n    tag_268:\n        /* \"#utility.yul\":3590:3594   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3612:3642   */\n      dup3\n      gt\n        /* \"#utility.yul\":3609:3665   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":3645:3663   */\n      tag_308\n      tag_265\n      jump\t// in\n    tag_308:\n      pop\n        /* \"#utility.yul\":3690:3691   */\n      0x05\n        /* \"#utility.yul\":3686:3700   */\n      shl\n        /* \"#utility.yul\":3702:3706   */\n      0x20\n        /* \"#utility.yul\":3682:3707   */\n      add\n      swap1\n        /* \"#utility.yul\":3530:3713   */\n      jump\t// out\n        /* \"#utility.yul\":3718:4380   */\n    tag_269:\n        /* \"#utility.yul\":3772:3777   */\n      0x00\n        /* \"#utility.yul\":3825:3828   */\n      dup3\n        /* \"#utility.yul\":3818:3822   */\n      0x1f\n        /* \"#utility.yul\":3810:3816   */\n      dup4\n        /* \"#utility.yul\":3806:3823   */\n      add\n        /* \"#utility.yul\":3802:3829   */\n      slt\n        /* \"#utility.yul\":3792:3847   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":3843:3844   */\n      0x00\n        /* \"#utility.yul\":3840:3841   */\n      dup1\n        /* \"#utility.yul\":3833:3845   */\n      revert\n        /* \"#utility.yul\":3792:3847   */\n    tag_310:\n        /* \"#utility.yul\":3879:3885   */\n      dup2\n        /* \"#utility.yul\":3866:3886   */\n      calldataload\n        /* \"#utility.yul\":3905:3909   */\n      0x20\n        /* \"#utility.yul\":3929:3989   */\n      tag_311\n        /* \"#utility.yul\":3945:3988   */\n      tag_312\n        /* \"#utility.yul\":3985:3987   */\n      dup4\n        /* \"#utility.yul\":3945:3988   */\n      tag_268\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":3929:3989   */\n      tag_266\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":4023:4038   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":4109:4110   */\n      0x05\n        /* \"#utility.yul\":4105:4115   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":4093:4116   */\n      dup5\n      add\n        /* \"#utility.yul\":4089:4121   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":4054:4066   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4133:4148   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":4130:4165   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":4161:4162   */\n      0x00\n        /* \"#utility.yul\":4158:4159   */\n      dup1\n        /* \"#utility.yul\":4151:4163   */\n      revert\n        /* \"#utility.yul\":4130:4165   */\n    tag_313:\n        /* \"#utility.yul\":4197:4199   */\n      dup3\n        /* \"#utility.yul\":4189:4195   */\n      dup7\n        /* \"#utility.yul\":4185:4200   */\n      add\n        /* \"#utility.yul\":4209:4351   */\n    tag_314:\n        /* \"#utility.yul\":4225:4231   */\n      dup5\n        /* \"#utility.yul\":4220:4223   */\n      dup2\n        /* \"#utility.yul\":4217:4232   */\n      lt\n        /* \"#utility.yul\":4209:4351   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":4291:4308   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":4279:4309   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4329:4341   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":4242:4254   */\n      dup4\n      add\n        /* \"#utility.yul\":4209:4351   */\n      jump(tag_314)\n    tag_316:\n      pop\n        /* \"#utility.yul\":4369:4374   */\n      swap7\n        /* \"#utility.yul\":3718:4380   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4385:5214   */\n    tag_270:\n        /* \"#utility.yul\":4437:4442   */\n      0x00\n        /* \"#utility.yul\":4490:4493   */\n      dup3\n        /* \"#utility.yul\":4483:4487   */\n      0x1f\n        /* \"#utility.yul\":4475:4481   */\n      dup4\n        /* \"#utility.yul\":4471:4488   */\n      add\n        /* \"#utility.yul\":4467:4494   */\n      slt\n        /* \"#utility.yul\":4457:4512   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":4508:4509   */\n      0x00\n        /* \"#utility.yul\":4505:4506   */\n      dup1\n        /* \"#utility.yul\":4498:4510   */\n      revert\n        /* \"#utility.yul\":4457:4512   */\n    tag_318:\n        /* \"#utility.yul\":4544:4550   */\n      dup2\n        /* \"#utility.yul\":4531:4551   */\n      calldataload\n        /* \"#utility.yul\":4570:4574   */\n      0x20\n        /* \"#utility.yul\":4594:4654   */\n      tag_319\n        /* \"#utility.yul\":4610:4653   */\n      tag_312\n        /* \"#utility.yul\":4650:4652   */\n      dup4\n        /* \"#utility.yul\":4610:4653   */\n      tag_268\n      jump\t// in\n        /* \"#utility.yul\":4594:4654   */\n    tag_319:\n        /* \"#utility.yul\":4688:4703   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":4774:4775   */\n      0x05\n        /* \"#utility.yul\":4770:4780   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":4758:4781   */\n      dup5\n      add\n        /* \"#utility.yul\":4754:4786   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":4719:4731   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4798:4813   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":4795:4830   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":4826:4827   */\n      0x00\n        /* \"#utility.yul\":4823:4824   */\n      dup1\n        /* \"#utility.yul\":4816:4828   */\n      revert\n        /* \"#utility.yul\":4795:4830   */\n    tag_321:\n        /* \"#utility.yul\":4862:4864   */\n      dup3\n        /* \"#utility.yul\":4854:4860   */\n      dup7\n        /* \"#utility.yul\":4850:4865   */\n      add\n        /* \"#utility.yul\":4874:5185   */\n    tag_322:\n        /* \"#utility.yul\":4890:4896   */\n      dup5\n        /* \"#utility.yul\":4885:4888   */\n      dup2\n        /* \"#utility.yul\":4882:4897   */\n      lt\n        /* \"#utility.yul\":4874:5185   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":4970:4973   */\n      dup1\n        /* \"#utility.yul\":4957:4974   */\n      calldataload\n        /* \"#utility.yul\":5018:5022   */\n      0xff\n        /* \"#utility.yul\":5011:5016   */\n      dup2\n        /* \"#utility.yul\":5007:5023   */\n      and\n        /* \"#utility.yul\":5000:5005   */\n      dup2\n        /* \"#utility.yul\":4997:5024   */\n      eq\n        /* \"#utility.yul\":4987:5112   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":5066:5067   */\n      0x00\n        /* \"#utility.yul\":5095:5097   */\n      dup1\n        /* \"#utility.yul\":5091:5093   */\n      dup2\n        /* \"#utility.yul\":5084:5098   */\n      revert\n        /* \"#utility.yul\":4987:5112   */\n    tag_325:\n        /* \"#utility.yul\":5125:5143   */\n      dup4\n      mstore\n        /* \"#utility.yul\":5163:5175   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":4907:4919   */\n      dup4\n      add\n        /* \"#utility.yul\":4874:5185   */\n      jump(tag_322)\n        /* \"#utility.yul\":5219:6938   */\n    tag_56:\n        /* \"#utility.yul\":5387:5393   */\n      0x00\n        /* \"#utility.yul\":5395:5401   */\n      dup1\n        /* \"#utility.yul\":5403:5409   */\n      0x00\n        /* \"#utility.yul\":5411:5417   */\n      dup1\n        /* \"#utility.yul\":5419:5425   */\n      0x00\n        /* \"#utility.yul\":5472:5475   */\n      0xa0\n        /* \"#utility.yul\":5460:5469   */\n      dup7\n        /* \"#utility.yul\":5451:5458   */\n      dup9\n        /* \"#utility.yul\":5447:5470   */\n      sub\n        /* \"#utility.yul\":5443:5476   */\n      slt\n        /* \"#utility.yul\":5440:5493   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":5489:5490   */\n      0x00\n        /* \"#utility.yul\":5486:5487   */\n      dup1\n        /* \"#utility.yul\":5479:5491   */\n      revert\n        /* \"#utility.yul\":5440:5493   */\n    tag_327:\n        /* \"#utility.yul\":5528:5537   */\n      dup6\n        /* \"#utility.yul\":5515:5538   */\n      calldataload\n        /* \"#utility.yul\":5547:5578   */\n      tag_328\n        /* \"#utility.yul\":5572:5577   */\n      dup2\n        /* \"#utility.yul\":5547:5578   */\n      tag_264\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":5597:5602   */\n      swap5\n      pop\n        /* \"#utility.yul\":5621:5623   */\n      0x20\n        /* \"#utility.yul\":5660:5678   */\n      dup7\n      dup2\n      add\n        /* \"#utility.yul\":5647:5679   */\n      calldataload\n        /* \"#utility.yul\":5688:5721   */\n      tag_329\n        /* \"#utility.yul\":5647:5679   */\n      dup2\n        /* \"#utility.yul\":5688:5721   */\n      tag_264\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":5740:5747   */\n      swap5\n      pop\n        /* \"#utility.yul\":5798:5800   */\n      0x40\n        /* \"#utility.yul\":5783:5801   */\n      dup8\n      add\n        /* \"#utility.yul\":5770:5802   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":5851:5865   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5848:5882   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":5878:5879   */\n      0x00\n        /* \"#utility.yul\":5875:5876   */\n      dup1\n        /* \"#utility.yul\":5868:5880   */\n      revert\n        /* \"#utility.yul\":5848:5882   */\n    tag_330:\n        /* \"#utility.yul\":5916:5922   */\n      dup2\n        /* \"#utility.yul\":5905:5914   */\n      dup10\n        /* \"#utility.yul\":5901:5923   */\n      add\n        /* \"#utility.yul\":5891:5923   */\n      swap2\n      pop\n        /* \"#utility.yul\":5961:5968   */\n      dup10\n        /* \"#utility.yul\":5954:5958   */\n      0x1f\n        /* \"#utility.yul\":5950:5952   */\n      dup4\n        /* \"#utility.yul\":5946:5959   */\n      add\n        /* \"#utility.yul\":5942:5969   */\n      slt\n        /* \"#utility.yul\":5932:5987   */\n      tag_331\n      jumpi\n        /* \"#utility.yul\":5983:5984   */\n      0x00\n        /* \"#utility.yul\":5980:5981   */\n      dup1\n        /* \"#utility.yul\":5973:5985   */\n      revert\n        /* \"#utility.yul\":5932:5987   */\n    tag_331:\n        /* \"#utility.yul\":6019:6021   */\n      dup2\n        /* \"#utility.yul\":6006:6022   */\n      calldataload\n        /* \"#utility.yul\":6042:6102   */\n      tag_332\n        /* \"#utility.yul\":6058:6101   */\n      tag_312\n        /* \"#utility.yul\":6098:6100   */\n      dup3\n        /* \"#utility.yul\":6058:6101   */\n      tag_268\n      jump\t// in\n        /* \"#utility.yul\":6042:6102   */\n    tag_332:\n        /* \"#utility.yul\":6136:6151   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":6218:6219   */\n      0x05\n        /* \"#utility.yul\":6214:6224   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":6206:6225   */\n      dup4\n      add\n        /* \"#utility.yul\":6202:6230   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":6167:6179   */\n      dup5\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":6242:6261   */\n      dup13\n      dup4\n      gt\n        /* \"#utility.yul\":6239:6278   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":6274:6275   */\n      0x00\n        /* \"#utility.yul\":6271:6272   */\n      dup1\n        /* \"#utility.yul\":6264:6276   */\n      revert\n        /* \"#utility.yul\":6239:6278   */\n    tag_334:\n        /* \"#utility.yul\":6298:6309   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":6318:6541   */\n    tag_335:\n        /* \"#utility.yul\":6334:6340   */\n      dup3\n        /* \"#utility.yul\":6329:6332   */\n      dup6\n        /* \"#utility.yul\":6326:6341   */\n      lt\n        /* \"#utility.yul\":6318:6541   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":6416:6419   */\n      dup5\n        /* \"#utility.yul\":6403:6420   */\n      calldataload\n        /* \"#utility.yul\":6433:6466   */\n      tag_338\n        /* \"#utility.yul\":6458:6465   */\n      dup2\n        /* \"#utility.yul\":6433:6466   */\n      tag_264\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":6479:6499   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6351:6363   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":6519:6531   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":6318:6541   */\n      jump(tag_335)\n    tag_337:\n        /* \"#utility.yul\":6560:6565   */\n      swap8\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6618:6620   */\n      0x60\n        /* \"#utility.yul\":6603:6621   */\n      dup10\n      add\n        /* \"#utility.yul\":6590:6622   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":6634:6650   */\n      dup1\n      dup4\n      gt\n        /* \"#utility.yul\":6631:6667   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":6663:6664   */\n      0x00\n        /* \"#utility.yul\":6660:6661   */\n      dup1\n        /* \"#utility.yul\":6653:6665   */\n      revert\n        /* \"#utility.yul\":6631:6667   */\n    tag_339:\n        /* \"#utility.yul\":6686:6749   */\n      tag_340\n        /* \"#utility.yul\":6741:6748   */\n      dup11\n        /* \"#utility.yul\":6730:6738   */\n      dup5\n        /* \"#utility.yul\":6719:6728   */\n      dup12\n        /* \"#utility.yul\":6715:6739   */\n      add\n        /* \"#utility.yul\":6686:6749   */\n      tag_269\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":6676:6749   */\n      swap5\n      pop\n        /* \"#utility.yul\":6802:6805   */\n      0x80\n        /* \"#utility.yul\":6791:6800   */\n      dup10\n        /* \"#utility.yul\":6787:6806   */\n      add\n        /* \"#utility.yul\":6774:6807   */\n      calldataload\n        /* \"#utility.yul\":6758:6807   */\n      swap3\n      pop\n        /* \"#utility.yul\":6832:6834   */\n      dup1\n        /* \"#utility.yul\":6822:6830   */\n      dup4\n        /* \"#utility.yul\":6819:6835   */\n      gt\n        /* \"#utility.yul\":6816:6852   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":6848:6849   */\n      0x00\n        /* \"#utility.yul\":6845:6846   */\n      dup1\n        /* \"#utility.yul\":6838:6850   */\n      revert\n        /* \"#utility.yul\":6816:6852   */\n    tag_341:\n      pop\n      pop\n        /* \"#utility.yul\":6871:6932   */\n      tag_342\n        /* \"#utility.yul\":6924:6931   */\n      dup9\n        /* \"#utility.yul\":6913:6921   */\n      dup3\n        /* \"#utility.yul\":6902:6911   */\n      dup10\n        /* \"#utility.yul\":6898:6922   */\n      add\n        /* \"#utility.yul\":6871:6932   */\n      tag_270\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":6861:6932   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5219:6938   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7358:7606   */\n    tag_77:\n        /* \"#utility.yul\":7426:7432   */\n      0x00\n        /* \"#utility.yul\":7434:7440   */\n      dup1\n        /* \"#utility.yul\":7487:7489   */\n      0x40\n        /* \"#utility.yul\":7475:7484   */\n      dup4\n        /* \"#utility.yul\":7466:7473   */\n      dup6\n        /* \"#utility.yul\":7462:7485   */\n      sub\n        /* \"#utility.yul\":7458:7490   */\n      slt\n        /* \"#utility.yul\":7455:7507   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":7503:7504   */\n      0x00\n        /* \"#utility.yul\":7500:7501   */\n      dup1\n        /* \"#utility.yul\":7493:7505   */\n      revert\n        /* \"#utility.yul\":7455:7507   */\n    tag_346:\n      pop\n      pop\n        /* \"#utility.yul\":7526:7549   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":7596:7598   */\n      0x20\n        /* \"#utility.yul\":7581:7599   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":7568:7600   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":7358:7606   */\n      jump\t// out\n        /* \"#utility.yul\":7808:8302   */\n    tag_93:\n        /* \"#utility.yul\":7988:7990   */\n      0x40\n        /* \"#utility.yul\":7973:7991   */\n      dup2\n      add\n        /* \"#utility.yul\":7977:7986   */\n      dup2\n        /* \"#utility.yul\":8068:8074   */\n      dup4\n        /* \"#utility.yul\":7946:7950   */\n      0x00\n        /* \"#utility.yul\":8102:8296   */\n    tag_349:\n        /* \"#utility.yul\":8116:8120   */\n      0x02\n        /* \"#utility.yul\":8113:8114   */\n      dup2\n        /* \"#utility.yul\":8110:8121   */\n      lt\n        /* \"#utility.yul\":8102:8296   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":8175:8188   */\n      dup2\n      mload\n        /* \"#utility.yul\":8163:8189   */\n      dup4\n      mstore\n        /* \"#utility.yul\":8212:8216   */\n      0x20\n        /* \"#utility.yul\":8236:8248   */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"#utility.yul\":8271:8286   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":8136:8137   */\n      0x01\n        /* \"#utility.yul\":8129:8138   */\n      add\n        /* \"#utility.yul\":8102:8296   */\n      jump(tag_349)\n    tag_351:\n        /* \"#utility.yul\":8106:8109   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7808:8302   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8307:9378   */\n    tag_99:\n        /* \"#utility.yul\":8461:8467   */\n      0x00\n        /* \"#utility.yul\":8469:8475   */\n      dup1\n        /* \"#utility.yul\":8477:8483   */\n      0x00\n        /* \"#utility.yul\":8485:8491   */\n      dup1\n        /* \"#utility.yul\":8493:8499   */\n      0x00\n        /* \"#utility.yul\":8546:8549   */\n      0xa0\n        /* \"#utility.yul\":8534:8543   */\n      dup7\n        /* \"#utility.yul\":8525:8532   */\n      dup9\n        /* \"#utility.yul\":8521:8544   */\n      sub\n        /* \"#utility.yul\":8517:8550   */\n      slt\n        /* \"#utility.yul\":8514:8567   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":8563:8564   */\n      0x00\n        /* \"#utility.yul\":8560:8561   */\n      dup1\n        /* \"#utility.yul\":8553:8565   */\n      revert\n        /* \"#utility.yul\":8514:8567   */\n    tag_353:\n        /* \"#utility.yul\":8602:8611   */\n      dup6\n        /* \"#utility.yul\":8589:8612   */\n      calldataload\n        /* \"#utility.yul\":8621:8652   */\n      tag_354\n        /* \"#utility.yul\":8646:8651   */\n      dup2\n        /* \"#utility.yul\":8621:8652   */\n      tag_264\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":8671:8676   */\n      swap5\n      pop\n        /* \"#utility.yul\":8728:8730   */\n      0x20\n        /* \"#utility.yul\":8713:8731   */\n      dup7\n      add\n        /* \"#utility.yul\":8700:8732   */\n      calldataload\n        /* \"#utility.yul\":8741:8774   */\n      tag_355\n        /* \"#utility.yul\":8700:8732   */\n      dup2\n        /* \"#utility.yul\":8741:8774   */\n      tag_264\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":8793:8800   */\n      swap4\n      pop\n        /* \"#utility.yul\":8851:8853   */\n      0x40\n        /* \"#utility.yul\":8836:8854   */\n      dup7\n      add\n        /* \"#utility.yul\":8823:8855   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":8904:8918   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":8901:8935   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":8931:8932   */\n      0x00\n        /* \"#utility.yul\":8928:8929   */\n      dup1\n        /* \"#utility.yul\":8921:8933   */\n      revert\n        /* \"#utility.yul\":8901:8935   */\n    tag_356:\n        /* \"#utility.yul\":8954:9015   */\n      tag_357\n        /* \"#utility.yul\":9007:9014   */\n      dup10\n        /* \"#utility.yul\":8998:9004   */\n      dup4\n        /* \"#utility.yul\":8987:8996   */\n      dup11\n        /* \"#utility.yul\":8983:9005   */\n      add\n        /* \"#utility.yul\":8954:9015   */\n      tag_269\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":8944:9015   */\n      swap5\n      pop\n        /* \"#utility.yul\":9068:9070   */\n      0x60\n        /* \"#utility.yul\":9057:9066   */\n      dup9\n        /* \"#utility.yul\":9053:9071   */\n      add\n        /* \"#utility.yul\":9040:9072   */\n      calldataload\n        /* \"#utility.yul\":9024:9072   */\n      swap2\n      pop\n        /* \"#utility.yul\":9097:9099   */\n      dup1\n        /* \"#utility.yul\":9087:9095   */\n      dup3\n        /* \"#utility.yul\":9084:9100   */\n      gt\n        /* \"#utility.yul\":9081:9117   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":9113:9114   */\n      0x00\n        /* \"#utility.yul\":9110:9111   */\n      dup1\n        /* \"#utility.yul\":9103:9115   */\n      revert\n        /* \"#utility.yul\":9081:9117   */\n    tag_358:\n        /* \"#utility.yul\":9136:9199   */\n      tag_359\n        /* \"#utility.yul\":9191:9198   */\n      dup10\n        /* \"#utility.yul\":9180:9188   */\n      dup4\n        /* \"#utility.yul\":9169:9178   */\n      dup11\n        /* \"#utility.yul\":9165:9189   */\n      add\n        /* \"#utility.yul\":9136:9199   */\n      tag_269\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":9126:9199   */\n      swap4\n      pop\n        /* \"#utility.yul\":9252:9255   */\n      0x80\n        /* \"#utility.yul\":9241:9250   */\n      dup9\n        /* \"#utility.yul\":9237:9256   */\n      add\n        /* \"#utility.yul\":9224:9257   */\n      calldataload\n        /* \"#utility.yul\":9208:9257   */\n      swap2\n      pop\n        /* \"#utility.yul\":9282:9284   */\n      dup1\n        /* \"#utility.yul\":9272:9280   */\n      dup3\n        /* \"#utility.yul\":9269:9285   */\n      gt\n        /* \"#utility.yul\":9266:9302   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":9298:9299   */\n      0x00\n        /* \"#utility.yul\":9295:9296   */\n      dup1\n        /* \"#utility.yul\":9288:9300   */\n      revert\n        /* \"#utility.yul\":9266:9302   */\n    tag_360:\n      pop\n        /* \"#utility.yul\":9321:9372   */\n      tag_342\n        /* \"#utility.yul\":9364:9371   */\n      dup9\n        /* \"#utility.yul\":9353:9361   */\n      dup3\n        /* \"#utility.yul\":9342:9351   */\n      dup10\n        /* \"#utility.yul\":9338:9362   */\n      add\n        /* \"#utility.yul\":9321:9372   */\n      tag_267\n      jump\t// in\n        /* \"#utility.yul\":9383:9510   */\n    tag_200:\n        /* \"#utility.yul\":9444:9454   */\n      0x4e487b71\n        /* \"#utility.yul\":9439:9442   */\n      0xe0\n        /* \"#utility.yul\":9435:9455   */\n      shl\n        /* \"#utility.yul\":9432:9433   */\n      0x00\n        /* \"#utility.yul\":9425:9456   */\n      mstore\n        /* \"#utility.yul\":9475:9479   */\n      0x21\n        /* \"#utility.yul\":9472:9473   */\n      0x04\n        /* \"#utility.yul\":9465:9480   */\n      mstore\n        /* \"#utility.yul\":9499:9503   */\n      0x24\n        /* \"#utility.yul\":9496:9497   */\n      0x00\n        /* \"#utility.yul\":9489:9504   */\n      revert\n        /* \"#utility.yul\":9690:11021   */\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10228:10260   */\n      dup15\n      dup2\n      and\n        /* \"#utility.yul\":10210:10261   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10297:10329   */\n      dup14\n      dup2\n      and\n        /* \"#utility.yul\":10292:10294   */\n      0x20\n        /* \"#utility.yul\":10277:10295   */\n      dup4\n      add\n        /* \"#utility.yul\":10270:10330   */\n      mstore\n        /* \"#utility.yul\":10366:10398   */\n      dup13\n      and\n        /* \"#utility.yul\":10361:10363   */\n      0x40\n        /* \"#utility.yul\":10346:10364   */\n      dup3\n      add\n        /* \"#utility.yul\":10339:10399   */\n      mstore\n        /* \"#utility.yul\":10197:10200   */\n      0x01a0\n        /* \"#utility.yul\":10182:10201   */\n      dup2\n      add\n        /* \"#utility.yul\":10429:10430   */\n      0x05\n        /* \"#utility.yul\":10418:10431   */\n      dup13\n      lt\n        /* \"#utility.yul\":10408:10552   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":10474:10484   */\n      0x4e487b71\n        /* \"#utility.yul\":10469:10472   */\n      0xe0\n        /* \"#utility.yul\":10465:10485   */\n      shl\n        /* \"#utility.yul\":10462:10463   */\n      0x00\n        /* \"#utility.yul\":10455:10486   */\n      mstore\n        /* \"#utility.yul\":10509:10513   */\n      0x21\n        /* \"#utility.yul\":10506:10507   */\n      0x04\n        /* \"#utility.yul\":10499:10514   */\n      mstore\n        /* \"#utility.yul\":10537:10541   */\n      0x24\n        /* \"#utility.yul\":10534:10535   */\n      0x00\n        /* \"#utility.yul\":10527:10542   */\n      revert\n        /* \"#utility.yul\":10408:10552   */\n    tag_366:\n        /* \"#utility.yul\":10588:10594   */\n      dup12\n        /* \"#utility.yul\":10583:10585   */\n      0x60\n        /* \"#utility.yul\":10572:10581   */\n      dup4\n        /* \"#utility.yul\":10568:10586   */\n      add\n        /* \"#utility.yul\":10561:10595   */\n      mstore\n        /* \"#utility.yul\":10632:10638   */\n      dup11\n        /* \"#utility.yul\":10626:10629   */\n      0x80\n        /* \"#utility.yul\":10615:10624   */\n      dup4\n        /* \"#utility.yul\":10611:10630   */\n      add\n        /* \"#utility.yul\":10604:10639   */\n      mstore\n        /* \"#utility.yul\":10676:10682   */\n      dup10\n        /* \"#utility.yul\":10670:10673   */\n      0xa0\n        /* \"#utility.yul\":10659:10668   */\n      dup4\n        /* \"#utility.yul\":10655:10674   */\n      add\n        /* \"#utility.yul\":10648:10683   */\n      mstore\n        /* \"#utility.yul\":10720:10726   */\n      dup9\n        /* \"#utility.yul\":10714:10717   */\n      0xc0\n        /* \"#utility.yul\":10703:10712   */\n      dup4\n        /* \"#utility.yul\":10699:10718   */\n      add\n        /* \"#utility.yul\":10692:10727   */\n      mstore\n        /* \"#utility.yul\":10764:10770   */\n      dup8\n        /* \"#utility.yul\":10758:10761   */\n      0xe0\n        /* \"#utility.yul\":10747:10756   */\n      dup4\n        /* \"#utility.yul\":10743:10762   */\n      add\n        /* \"#utility.yul\":10736:10771   */\n      mstore\n        /* \"#utility.yul\":10808:10814   */\n      dup7\n        /* \"#utility.yul\":10802:10805   */\n      0x0100\n        /* \"#utility.yul\":10791:10800   */\n      dup4\n        /* \"#utility.yul\":10787:10806   */\n      add\n        /* \"#utility.yul\":10780:10815   */\n      mstore\n        /* \"#utility.yul\":10852:10858   */\n      dup6\n        /* \"#utility.yul\":10846:10849   */\n      0x0120\n        /* \"#utility.yul\":10835:10844   */\n      dup4\n        /* \"#utility.yul\":10831:10850   */\n      add\n        /* \"#utility.yul\":10824:10859   */\n      mstore\n        /* \"#utility.yul\":10896:10903   */\n      dup5\n        /* \"#utility.yul\":10890:10893   */\n      0x0140\n        /* \"#utility.yul\":10879:10888   */\n      dup4\n        /* \"#utility.yul\":10875:10894   */\n      add\n        /* \"#utility.yul\":10868:10904   */\n      mstore\n        /* \"#utility.yul\":10913:10960   */\n      tag_367\n        /* \"#utility.yul\":10955:10958   */\n      0x0160\n        /* \"#utility.yul\":10944:10953   */\n      dup4\n        /* \"#utility.yul\":10940:10959   */\n      add\n        /* \"#utility.yul\":10931:10938   */\n      dup6\n        /* \"#utility.yul\":9591:9597   */\n      0xffff\n        /* \"#utility.yul\":9580:9598   */\n      and\n        /* \"#utility.yul\":9568:9599   */\n      swap1\n      mstore\n        /* \"#utility.yul\":9515:9605   */\n      jump\n        /* \"#utility.yul\":10913:10960   */\n    tag_367:\n        /* \"#utility.yul\":9677:9681   */\n      0xff\n        /* \"#utility.yul\":9666:9682   */\n      dup4\n      and\n        /* \"#utility.yul\":11010:11013   */\n      0x0180\n        /* \"#utility.yul\":10995:11014   */\n      dup4\n      add\n        /* \"#utility.yul\":9654:9683   */\n      mstore\n        /* \"#utility.yul\":9690:11021   */\n      swap15\n      swap14\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11026:11760   */\n    tag_113:\n        /* \"#utility.yul\":11130:11136   */\n      0x00\n        /* \"#utility.yul\":11138:11144   */\n      dup1\n        /* \"#utility.yul\":11146:11152   */\n      0x00\n        /* \"#utility.yul\":11154:11160   */\n      dup1\n        /* \"#utility.yul\":11162:11168   */\n      0x00\n        /* \"#utility.yul\":11215:11218   */\n      0xa0\n        /* \"#utility.yul\":11203:11212   */\n      dup7\n        /* \"#utility.yul\":11194:11201   */\n      dup9\n        /* \"#utility.yul\":11190:11213   */\n      sub\n        /* \"#utility.yul\":11186:11219   */\n      slt\n        /* \"#utility.yul\":11183:11236   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":11232:11233   */\n      0x00\n        /* \"#utility.yul\":11229:11230   */\n      dup1\n        /* \"#utility.yul\":11222:11234   */\n      revert\n        /* \"#utility.yul\":11183:11236   */\n    tag_370:\n        /* \"#utility.yul\":11271:11280   */\n      dup6\n        /* \"#utility.yul\":11258:11281   */\n      calldataload\n        /* \"#utility.yul\":11290:11321   */\n      tag_371\n        /* \"#utility.yul\":11315:11320   */\n      dup2\n        /* \"#utility.yul\":11290:11321   */\n      tag_264\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":11340:11345   */\n      swap5\n      pop\n        /* \"#utility.yul\":11397:11399   */\n      0x20\n        /* \"#utility.yul\":11382:11400   */\n      dup7\n      add\n        /* \"#utility.yul\":11369:11401   */\n      calldataload\n        /* \"#utility.yul\":11410:11443   */\n      tag_372\n        /* \"#utility.yul\":11369:11401   */\n      dup2\n        /* \"#utility.yul\":11410:11443   */\n      tag_264\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":11462:11469   */\n      swap4\n      pop\n        /* \"#utility.yul\":11516:11518   */\n      0x40\n        /* \"#utility.yul\":11501:11519   */\n      dup7\n      add\n        /* \"#utility.yul\":11488:11520   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":11567:11569   */\n      0x60\n        /* \"#utility.yul\":11552:11570   */\n      dup7\n      add\n        /* \"#utility.yul\":11539:11571   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":11622:11625   */\n      0x80\n        /* \"#utility.yul\":11607:11626   */\n      dup7\n      add\n        /* \"#utility.yul\":11594:11627   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":11639:11669   */\n      dup2\n      gt\n        /* \"#utility.yul\":11636:11686   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":11682:11683   */\n      0x00\n        /* \"#utility.yul\":11679:11680   */\n      dup1\n        /* \"#utility.yul\":11672:11684   */\n      revert\n        /* \"#utility.yul\":11636:11686   */\n    tag_373:\n        /* \"#utility.yul\":11705:11754   */\n      tag_342\n        /* \"#utility.yul\":11746:11753   */\n      dup9\n        /* \"#utility.yul\":11737:11743   */\n      dup3\n        /* \"#utility.yul\":11726:11735   */\n      dup10\n        /* \"#utility.yul\":11722:11744   */\n      add\n        /* \"#utility.yul\":11705:11754   */\n      tag_267\n      jump\t// in\n        /* \"#utility.yul\":11765:12012   */\n    tag_118:\n        /* \"#utility.yul\":11824:11830   */\n      0x00\n        /* \"#utility.yul\":11877:11879   */\n      0x20\n        /* \"#utility.yul\":11865:11874   */\n      dup3\n        /* \"#utility.yul\":11856:11863   */\n      dup5\n        /* \"#utility.yul\":11852:11875   */\n      sub\n        /* \"#utility.yul\":11848:11880   */\n      slt\n        /* \"#utility.yul\":11845:11897   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":11893:11894   */\n      0x00\n        /* \"#utility.yul\":11890:11891   */\n      dup1\n        /* \"#utility.yul\":11883:11895   */\n      revert\n        /* \"#utility.yul\":11845:11897   */\n    tag_376:\n        /* \"#utility.yul\":11932:11941   */\n      dup2\n        /* \"#utility.yul\":11919:11942   */\n      calldataload\n        /* \"#utility.yul\":11951:11982   */\n      tag_263\n        /* \"#utility.yul\":11976:11981   */\n      dup2\n        /* \"#utility.yul\":11951:11982   */\n      tag_264\n      jump\t// in\n        /* \"#utility.yul\":12017:12400   */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12283:12298   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":12265:12299   */\n      dup2\n      mstore\n        /* \"#utility.yul\":12335:12350   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":12330:12332   */\n      0x20\n        /* \"#utility.yul\":12315:12333   */\n      dup3\n      add\n        /* \"#utility.yul\":12308:12351   */\n      mstore\n        /* \"#utility.yul\":12382:12384   */\n      0x40\n        /* \"#utility.yul\":12367:12385   */\n      dup2\n      add\n        /* \"#utility.yul\":12360:12394   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":12215:12217   */\n      0x60\n        /* \"#utility.yul\":12200:12218   */\n      add\n      swap1\n        /* \"#utility.yul\":12017:12400   */\n      jump\t// out\n        /* \"#utility.yul\":12405:12682   */\n    tag_132:\n        /* \"#utility.yul\":12472:12478   */\n      0x00\n        /* \"#utility.yul\":12525:12527   */\n      0x20\n        /* \"#utility.yul\":12513:12522   */\n      dup3\n        /* \"#utility.yul\":12504:12511   */\n      dup5\n        /* \"#utility.yul\":12500:12523   */\n      sub\n        /* \"#utility.yul\":12496:12528   */\n      slt\n        /* \"#utility.yul\":12493:12545   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":12541:12542   */\n      0x00\n        /* \"#utility.yul\":12538:12539   */\n      dup1\n        /* \"#utility.yul\":12531:12543   */\n      revert\n        /* \"#utility.yul\":12493:12545   */\n    tag_380:\n        /* \"#utility.yul\":12573:12582   */\n      dup2\n        /* \"#utility.yul\":12567:12583   */\n      mload\n        /* \"#utility.yul\":12626:12631   */\n      dup1\n        /* \"#utility.yul\":12619:12632   */\n      iszero\n        /* \"#utility.yul\":12612:12633   */\n      iszero\n        /* \"#utility.yul\":12605:12610   */\n      dup2\n        /* \"#utility.yul\":12602:12634   */\n      eq\n        /* \"#utility.yul\":12592:12652   */\n      tag_263\n      jumpi\n        /* \"#utility.yul\":12648:12649   */\n      0x00\n        /* \"#utility.yul\":12645:12646   */\n      dup1\n        /* \"#utility.yul\":12638:12650   */\n      revert\n        /* \"#utility.yul\":15002:15129   */\n    tag_165:\n        /* \"#utility.yul\":15063:15073   */\n      0x4e487b71\n        /* \"#utility.yul\":15058:15061   */\n      0xe0\n        /* \"#utility.yul\":15054:15074   */\n      shl\n        /* \"#utility.yul\":15051:15052   */\n      0x00\n        /* \"#utility.yul\":15044:15075   */\n      mstore\n        /* \"#utility.yul\":15094:15098   */\n      0x32\n        /* \"#utility.yul\":15091:15092   */\n      0x04\n        /* \"#utility.yul\":15084:15099   */\n      mstore\n        /* \"#utility.yul\":15118:15122   */\n      0x24\n        /* \"#utility.yul\":15115:15116   */\n      0x00\n        /* \"#utility.yul\":15108:15123   */\n      revert\n        /* \"#utility.yul\":15818:15945   */\n    tag_273:\n        /* \"#utility.yul\":15879:15889   */\n      0x4e487b71\n        /* \"#utility.yul\":15874:15877   */\n      0xe0\n        /* \"#utility.yul\":15870:15890   */\n      shl\n        /* \"#utility.yul\":15867:15868   */\n      0x00\n        /* \"#utility.yul\":15860:15891   */\n      mstore\n        /* \"#utility.yul\":15910:15914   */\n      0x11\n        /* \"#utility.yul\":15907:15908   */\n      0x04\n        /* \"#utility.yul\":15900:15915   */\n      mstore\n        /* \"#utility.yul\":15934:15938   */\n      0x24\n        /* \"#utility.yul\":15931:15932   */\n      0x00\n        /* \"#utility.yul\":15924:15939   */\n      revert\n        /* \"#utility.yul\":15950:16085   */\n    tag_186:\n        /* \"#utility.yul\":15989:15992   */\n      0x00\n        /* \"#utility.yul\":16010:16027   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":16007:16050   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":16030:16048   */\n      tag_393\n      tag_273\n      jump\t// in\n    tag_393:\n      pop\n        /* \"#utility.yul\":16077:16078   */\n      0x01\n        /* \"#utility.yul\":16066:16079   */\n      add\n      swap1\n        /* \"#utility.yul\":15950:16085   */\n      jump\t// out\n        /* \"#utility.yul\":16090:16446   */\n    tag_193:\n        /* \"#utility.yul\":16292:16294   */\n      0x20\n        /* \"#utility.yul\":16274:16295   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16311:16329   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":16304:16334   */\n      mstore\n        /* \"#utility.yul\":16370:16404   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":16365:16367   */\n      0x40\n        /* \"#utility.yul\":16350:16368   */\n      dup3\n      add\n        /* \"#utility.yul\":16343:16405   */\n      mstore\n        /* \"#utility.yul\":16437:16439   */\n      0x60\n        /* \"#utility.yul\":16422:16440   */\n      add\n      swap1\n        /* \"#utility.yul\":16090:16446   */\n      jump\t// out\n        /* \"#utility.yul\":16806:17023   */\n    tag_208:\n        /* \"#utility.yul\":16846:16847   */\n      0x00\n        /* \"#utility.yul\":16872:16873   */\n      dup3\n        /* \"#utility.yul\":16862:16994   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":16916:16926   */\n      0x4e487b71\n        /* \"#utility.yul\":16911:16914   */\n      0xe0\n        /* \"#utility.yul\":16907:16927   */\n      shl\n        /* \"#utility.yul\":16904:16905   */\n      0x00\n        /* \"#utility.yul\":16897:16928   */\n      mstore\n        /* \"#utility.yul\":16951:16955   */\n      0x12\n        /* \"#utility.yul\":16948:16949   */\n      0x04\n        /* \"#utility.yul\":16941:16956   */\n      mstore\n        /* \"#utility.yul\":16979:16983   */\n      0x24\n        /* \"#utility.yul\":16976:16977   */\n      0x00\n        /* \"#utility.yul\":16969:16984   */\n      revert\n        /* \"#utility.yul\":16862:16994   */\n    tag_397:\n      pop\n        /* \"#utility.yul\":17008:17017   */\n      div\n      swap1\n        /* \"#utility.yul\":16806:17023   */\n      jump\t// out\n        /* \"#utility.yul\":17028:17196   */\n    tag_210:\n        /* \"#utility.yul\":17068:17075   */\n      0x00\n        /* \"#utility.yul\":17134:17135   */\n      dup2\n        /* \"#utility.yul\":17130:17131   */\n      0x00\n        /* \"#utility.yul\":17126:17132   */\n      not\n        /* \"#utility.yul\":17122:17136   */\n      div\n        /* \"#utility.yul\":17119:17120   */\n      dup4\n        /* \"#utility.yul\":17116:17137   */\n      gt\n        /* \"#utility.yul\":17111:17112   */\n      dup3\n        /* \"#utility.yul\":17104:17113   */\n      iszero\n        /* \"#utility.yul\":17097:17114   */\n      iszero\n        /* \"#utility.yul\":17093:17138   */\n      and\n        /* \"#utility.yul\":17090:17161   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":17141:17159   */\n      tag_400\n      tag_273\n      jump\t// in\n    tag_400:\n      pop\n        /* \"#utility.yul\":17181:17190   */\n      mul\n      swap1\n        /* \"#utility.yul\":17028:17196   */\n      jump\t// out\n        /* \"#utility.yul\":17895:18023   */\n    tag_245:\n        /* \"#utility.yul\":17935:17938   */\n      0x00\n        /* \"#utility.yul\":17966:17967   */\n      dup3\n        /* \"#utility.yul\":17962:17968   */\n      not\n        /* \"#utility.yul\":17959:17960   */\n      dup3\n        /* \"#utility.yul\":17956:17969   */\n      gt\n        /* \"#utility.yul\":17953:17992   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":17972:17990   */\n      tag_405\n      tag_273\n      jump\t// in\n    tag_405:\n      pop\n        /* \"#utility.yul\":18008:18017   */\n      add\n      swap1\n        /* \"#utility.yul\":17895:18023   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220886a12006cfb609ffb5d934d60c66ab1c2b6dd904d4fa03fbd313959eb9928b264736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_603": {
									"entryPoint": null,
									"id": 603,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 67,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526001600455603c600555601460065560286007556008805463ffffffff1916606417905534801561003457600080fd5b5061003e33610043565b610093565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611425806100a26000396000f3fe608060405234801561001057600080fd5b506004361061011d5760003560e01c806301ffc9a71461012257806313c75b5b1461014a578063150b7a021461017557806324c93fe5146101ac5780632e3f4a5d146101d557806338daa789146101ea578063407299d7146101fd5780636fb49d7314610210578063715018a614610227578063756db7561461022f57806375af65d1146102425780637c3a00fd14610255578063877155881461025e5780638ca83f07146102715780638da5cb5b146102965780638f8292751461029e5780639e1d7a1e146102a7578063af640d0f146102c7578063bc197c81146102d0578063e1ec3c68146102ef578063e70c74461461038f578063f23a6e61146103a2578063f2fde38b146103c1575b600080fd5b610135610130366004610cd0565b6103d4565b60405190151581526020015b60405180910390f35b60015461015d906001600160a01b031681565b6040516001600160a01b039091168152602001610141565b610193610183366004610dc4565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610141565b61015d6101ba366004610e2f565b600a602052600090815260409020546001600160a01b031681565b6101e86101e3366004610e48565b61040b565b005b60025461015d906001600160a01b031681565b6101e861020b366004610f9c565b6106c1565b61021960055481565b604051908152602001610141565b6101e86108d8565b61015d61023d366004610e2f565b610913565b60035461015d906001600160a01b031681565b61021960065481565b6101e861026c3660046110a9565b6109aa565b6008546102819063ffffffff1681565b60405163ffffffff9091168152602001610141565b61015d610a04565b61021960075481565b6102ba6102b5366004610e2f565b610a13565b60405161014191906110cb565b61021960045481565b6101936102de3660046110fc565b63bc197c8160e01b95945050505050565b6103766102fd366004610e2f565b60096020526000908152604090206001810154600282015460038301546005840154600685015460078601546008870154600b880154600c890154600d8a0154600e909a01546001600160a01b03998a169a988a169988169860ff600160a01b909904891698909161ffff81169162010000909104168d565b6040516101419d9c9b9a999897969594939291906111b2565b61013561039d366004610e2f565b610a5f565b6101936103b0366004611251565b63f23a6e6160e01b95945050505050565b6101e86103cf3660046112b9565b610baa565b60006001600160e01b03198216630271189760e51b148061040557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6001600160a01b038316156105c3576040516323b872dd60e01b81526001600160a01b038416906323b872dd9061044a908890889087906004016112d6565b6020604051808303816000875af1158015610469573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048d91906112fa565b6104ec5760405162461bcd60e51b815260206004820152602560248201527f5472616e73666572206f6620746f6b656e7320746f2072656365697665722066604482015264185a5b195960da1b60648201526084015b60405180910390fd5b826001600160a01b03166323b872dd86610504610a04565b846040518463ffffffff1660e01b8152600401610523939291906112d6565b6020604051808303816000875af1158015610542573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056691906112fa565b6105be5760405162461bcd60e51b815260206004820152602360248201527f5472616e73666572206f6620746f6b656e7320746f20537461746572206661696044820152621b195960ea1b60648201526084016104e3565b6106ba565b6040516001600160a01b0385169083156108fc029084906000818181858888f1935050505061063f5760405162461bcd60e51b815260206004820152602260248201527f5472616e73666572206f662045544820746f207265636569766572206661696c604482015261195960f21b60648201526084016104e3565b610647610a04565b6001600160a01b03166108fc829081150290604051600060405180830381858888f193505050506106ba5760405162461bcd60e51b815260206004820181905260248201527f5472616e73666572206f662045544820746f20537461746572206661696c656460448201526064016104e3565b5050505050565b82518251811480156106d35750808251145b61071f5760405162461bcd60e51b815260206004820181905260248201527f546f6b656e20696e666f732070726f76696465642061726520696e76616c696460448201526064016104e3565b60005b818110156108cf5782818151811061073c5761073c61131c565b602002602001015160ff166000036107e7578481815181106107605761076061131c565b60200260200101516001600160a01b03166342842e0e888887858151811061078a5761078a61131c565b60200260200101516040518463ffffffff1660e01b81526004016107b0939291906112d6565b600060405180830381600087803b1580156107ca57600080fd5b505af11580156107de573d6000803e3d6000fd5b505050506108bf565b8481815181106107f9576107f961131c565b60200260200101516001600160a01b031663f242432a88888785815181106108235761082361131c565b602002602001015160016040518563ffffffff1660e01b815260040161088c94939291906001600160a01b0394851681529290931660208301526040820152606081019190915260a060808201819052600490820152630307830360e41b60c082015260e00190565b600060405180830381600087803b1580156108a657600080fd5b505af11580156108ba573d6000803e3d6000fd5b505050505b6108c881611348565b9050610722565b50505050505050565b336108e1610a04565b6001600160a01b0316146109075760405162461bcd60e51b81526004016104e390611361565b6109116000610c4a565b565b60006001600083815260096020526040902060030154600160a01b900460ff1660048111156109445761094461119c565b1461098e5760405162461bcd60e51b815260206004820152601a602482015279131bd85b881a5cc81b9bc81b1bdb99d95c88185c1c1c9bdd995960321b60448201526064016104e3565b506000908152600a60205260409020546001600160a01b031690565b6005546109b8606483611396565b6109c291906113b8565b821115610a005760405162461bcd60e51b815260206004820152600c60248201526b098a8ac40e8dede40d0d2ced60a31b60448201526064016104e3565b5050565b6000546001600160a01b031690565b610a1b610cb2565b6000828152600960208190526040918290208251808401938490529291019060029082845b815481526020019060010190808311610a405750505050509050919050565b60006001600083815260096020526040902060030154600160a01b900460ff166004811115610a9057610a9061119c565b1480610ac857506002600083815260096020526040902060030154600160a01b900460ff166004811115610ac657610ac661119c565b145b610b0f5760405162461bcd60e51b8152602060048201526018602482015277131bd85b881a5cc81b9bdd081e595d08185c1c1c9bdd995960421b60448201526064016104e3565b6000828152600960205260409020600a0154610b2c904290610c9a565b60008381526009602052604090206005810154600e90910154610b58919062010000900460ff166113b8565b60008481526009602052604090206005810154600690910154610b7b91906113b8565b60008581526009602081905260408220010154610b9891906113d7565b610ba291906113d7565b111592915050565b33610bb3610a04565b6001600160a01b031614610bd95760405162461bcd60e51b81526004016104e390611361565b6001600160a01b038116610c3e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104e3565b610c4781610c4a565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000818310610ca95781610cab565b825b9392505050565b60405180604001604052806002906020820280368337509192915050565b600060208284031215610ce257600080fd5b81356001600160e01b031981168114610cab57600080fd5b6001600160a01b0381168114610c4757600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715610d4d57610d4d610d0f565b604052919050565b600082601f830112610d6657600080fd5b81356001600160401b03811115610d7f57610d7f610d0f565b610d92601f8201601f1916602001610d25565b818152846020838601011115610da757600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215610dda57600080fd5b8435610de581610cfa565b93506020850135610df581610cfa565b92506040850135915060608501356001600160401b03811115610e1757600080fd5b610e2387828801610d55565b91505092959194509250565b600060208284031215610e4157600080fd5b5035919050565b600080600080600060a08688031215610e6057600080fd5b8535610e6b81610cfa565b94506020860135610e7b81610cfa565b93506040860135610e8b81610cfa565b94979396509394606081013594506080013592915050565b60006001600160401b03821115610ebc57610ebc610d0f565b5060051b60200190565b600082601f830112610ed757600080fd5b81356020610eec610ee783610ea3565b610d25565b82815260059290921b84018101918181019086841115610f0b57600080fd5b8286015b84811015610f265780358352918301918301610f0f565b509695505050505050565b600082601f830112610f4257600080fd5b81356020610f52610ee783610ea3565b82815260059290921b84018101918181019086841115610f7157600080fd5b8286015b84811015610f2657803560ff81168114610f8f5760008081fd5b8352918301918301610f75565b600080600080600060a08688031215610fb457600080fd5b8535610fbf81610cfa565b9450602086810135610fd081610cfa565b945060408701356001600160401b0380821115610fec57600080fd5b818901915089601f83011261100057600080fd5b813561100e610ee782610ea3565b81815260059190911b8301840190848101908c83111561102d57600080fd5b938501935b8285101561105457843561104581610cfa565b82529385019390850190611032565b97505050606089013592508083111561106c57600080fd5b6110788a848b01610ec6565b9450608089013592508083111561108e57600080fd5b505061109c88828901610f31565b9150509295509295909350565b600080604083850312156110bc57600080fd5b50508035926020909101359150565b60408101818360005b60028110156110f35781518352602092830192909101906001016110d4565b50505092915050565b600080600080600060a0868803121561111457600080fd5b853561111f81610cfa565b9450602086013561112f81610cfa565b935060408601356001600160401b038082111561114b57600080fd5b61115789838a01610ec6565b9450606088013591508082111561116d57600080fd5b61117989838a01610ec6565b9350608088013591508082111561118f57600080fd5b5061109c88828901610d55565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b038e811682528d811660208301528c1660408201526101a0810160058c106111f157634e487b7160e01b600052602160045260246000fd5b8b60608301528a60808301528960a08301528860c08301528760e083015286610100830152856101208301528461014083015261123561016083018561ffff169052565b60ff83166101808301529e9d5050505050505050505050505050565b600080600080600060a0868803121561126957600080fd5b853561127481610cfa565b9450602086013561128481610cfa565b9350604086013592506060860135915060808601356001600160401b038111156112ad57600080fd5b61109c88828901610d55565b6000602082840312156112cb57600080fd5b8135610cab81610cfa565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561130c57600080fd5b81518015158114610cab57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161135a5761135a611332565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000826113b357634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156113d2576113d2611332565b500290565b600082198211156113ea576113ea611332565b50019056fea2646970667358221220886a12006cfb609ffb5d934d60c66ab1c2b6dd904d4fa03fbd313959eb9928b264736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x4 SSTORE PUSH1 0x3C PUSH1 0x5 SSTORE PUSH1 0x14 PUSH1 0x6 SSTORE PUSH1 0x28 PUSH1 0x7 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH1 0x64 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E CALLER PUSH2 0x43 JUMP JUMPDEST PUSH2 0x93 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1425 DUP1 PUSH2 0xA2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x13C75B5B EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x24C93FE5 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x2E3F4A5D EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x38DAA789 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x407299D7 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x6FB49D73 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x756DB756 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x75AF65D1 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x7C3A00FD EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x87715588 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x8CA83F07 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x8F829275 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x9E1D7A1E EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xAF640D0F EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xE1EC3C68 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xE70C7446 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x15D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x141 JUMP JUMPDEST PUSH2 0x193 PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC4 JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x141 JUMP JUMPDEST PUSH2 0x15D PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0xE48 JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x15D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x6C1 JUMP JUMPDEST PUSH2 0x219 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x141 JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x8D8 JUMP JUMPDEST PUSH2 0x15D PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x913 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x15D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x219 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x281 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x141 JUMP JUMPDEST PUSH2 0x15D PUSH2 0xA04 JUMP JUMPDEST PUSH2 0x219 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2BA PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH2 0x219 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x193 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x10FC JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x376 PUSH2 0x2FD CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0x8 DUP8 ADD SLOAD PUSH1 0xB DUP9 ADD SLOAD PUSH1 0xC DUP10 ADD SLOAD PUSH1 0xD DUP11 ADD SLOAD PUSH1 0xE SWAP1 SWAP11 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP10 DUP11 AND SWAP11 SWAP9 DUP11 AND SWAP10 DUP9 AND SWAP9 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP10 DIV DUP10 AND SWAP9 SWAP1 SWAP2 PUSH2 0xFFFF DUP2 AND SWAP2 PUSH3 0x10000 SWAP1 SWAP2 DIV AND DUP14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11B2 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x39D CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0xA5F JUMP JUMPDEST PUSH2 0x193 PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1251 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x3CF CALLDATASIZE PUSH1 0x4 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0xBAA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0x405 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x44A SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x469 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x4EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206F6620746F6B656E7320746F2072656365697665722066 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x185A5B1959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD DUP7 PUSH2 0x504 PUSH2 0xA04 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x542 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x566 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206F6620746F6B656E7320746F2053746174657220666169 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1B1959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206F662045544820746F207265636569766572206661696C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x647 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP PUSH2 0x6BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206F662045544820746F20537461746572206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E3 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP3 MLOAD DUP3 MLOAD DUP2 EQ DUP1 ISZERO PUSH2 0x6D3 JUMPI POP DUP1 DUP3 MLOAD EQ JUMPDEST PUSH2 0x71F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20696E666F732070726F76696465642061726520696E76616C6964 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8CF JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x73C JUMPI PUSH2 0x73C PUSH2 0x131C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND PUSH1 0x0 SUB PUSH2 0x7E7 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x760 JUMPI PUSH2 0x760 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x42842E0E DUP9 DUP9 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x78A JUMPI PUSH2 0x78A PUSH2 0x131C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x8BF JUMP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7F9 JUMPI PUSH2 0x7F9 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF242432A DUP9 DUP9 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x823 JUMPI PUSH2 0x823 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x3078303 PUSH1 0xE4 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x8C8 DUP2 PUSH2 0x1348 JUMP JUMPDEST SWAP1 POP PUSH2 0x722 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x8E1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x907 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E3 SWAP1 PUSH2 0x1361 JUMP JUMPDEST PUSH2 0x911 PUSH1 0x0 PUSH2 0xC4A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x944 JUMPI PUSH2 0x944 PUSH2 0x119C JUMP JUMPDEST EQ PUSH2 0x98E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x131BD85B881A5CC81B9BC81B1BDB99D95C88185C1C1C9BDD9959 PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E3 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x9B8 PUSH1 0x64 DUP4 PUSH2 0x1396 JUMP JUMPDEST PUSH2 0x9C2 SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0xA00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x98A8AC40E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xA1B PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP4 DUP5 SWAP1 MSTORE SWAP3 SWAP2 ADD SWAP1 PUSH1 0x2 SWAP1 DUP3 DUP5 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xA40 JUMPI POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA90 JUMPI PUSH2 0xA90 PUSH2 0x119C JUMP JUMPDEST EQ DUP1 PUSH2 0xAC8 JUMPI POP PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xAC6 JUMPI PUSH2 0xAC6 PUSH2 0x119C JUMP JUMPDEST EQ JUMPDEST PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x131BD85B881A5CC81B9BDD081E595D08185C1C1C9BDD9959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH2 0xB2C SWAP1 TIMESTAMP SWAP1 PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xE SWAP1 SWAP2 ADD SLOAD PUSH2 0xB58 SWAP2 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SLOAD PUSH2 0xB7B SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD ADD SLOAD PUSH2 0xB98 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0xBA2 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST GT ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH2 0xBB3 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E3 SWAP1 PUSH2 0x1361 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0xC47 DUP2 PUSH2 0xC4A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xCA9 JUMPI DUP2 PUSH2 0xCAB JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xCAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xD4D JUMPI PUSH2 0xD4D PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xD7F JUMPI PUSH2 0xD7F PUSH2 0xD0F JUMP JUMPDEST PUSH2 0xD92 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xD25 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xDA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xDDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0xDE5 DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0xDF5 DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xE17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE23 DUP8 DUP3 DUP9 ADD PUSH2 0xD55 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0xE6B DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0xE7B DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0xE8B DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0xEBC JUMPI PUSH2 0xEBC PUSH2 0xD0F JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xED7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEEC PUSH2 0xEE7 DUP4 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0xD25 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xF0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xF26 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xF0F JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF52 PUSH2 0xEE7 DUP4 PUSH2 0xEA3 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xF71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xF26 JUMPI DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xF8F JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xFB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0xFBF DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 DUP2 ADD CALLDATALOAD PUSH2 0xFD0 DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xFEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP10 ADD SWAP2 POP DUP10 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x100E PUSH2 0xEE7 DUP3 PUSH2 0xEA3 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP13 DUP4 GT ISZERO PUSH2 0x102D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x1054 JUMPI DUP5 CALLDATALOAD PUSH2 0x1045 DUP2 PUSH2 0xCFA JUMP JUMPDEST DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x1032 JUMP JUMPDEST SWAP8 POP POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x106C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1078 DUP11 DUP5 DUP12 ADD PUSH2 0xEC6 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x108E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x109C DUP9 DUP3 DUP10 ADD PUSH2 0xF31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD DUP2 DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x10F3 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x10D4 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x111F DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x112F DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x114B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1157 DUP10 DUP4 DUP11 ADD PUSH2 0xEC6 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x116D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1179 DUP10 DUP4 DUP11 ADD PUSH2 0xEC6 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x118F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109C DUP9 DUP3 DUP10 ADD PUSH2 0xD55 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP3 MSTORE DUP14 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP13 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1A0 DUP2 ADD PUSH1 0x5 DUP13 LT PUSH2 0x11F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP12 PUSH1 0x60 DUP4 ADD MSTORE DUP11 PUSH1 0x80 DUP4 ADD MSTORE DUP10 PUSH1 0xA0 DUP4 ADD MSTORE DUP9 PUSH1 0xC0 DUP4 ADD MSTORE DUP8 PUSH1 0xE0 DUP4 ADD MSTORE DUP7 PUSH2 0x100 DUP4 ADD MSTORE DUP6 PUSH2 0x120 DUP4 ADD MSTORE DUP5 PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x1235 PUSH2 0x160 DUP4 ADD DUP6 PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xFF DUP4 AND PUSH2 0x180 DUP4 ADD MSTORE SWAP15 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1274 DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1284 DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x12AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109C DUP9 DUP3 DUP10 ADD PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCAB DUP2 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x135A JUMPI PUSH2 0x135A PUSH2 0x1332 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x13B3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x13D2 JUMPI PUSH2 0x13D2 PUSH2 0x1332 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x13EA JUMPI PUSH2 0x13EA PUSH2 0x1332 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 PUSH11 0x12006CFB609FFB5D934D60 0xC6 PUSH11 0xB1C2B6DD904D4FA03FBD31 CODECOPY MSIZE 0xEB SWAP10 0x28 0xB2 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "140:5907:12:-:0;;;2199:1;2179:21;;2242:2;2221:23;;2287:2;2257:32;;2333:2;2295:40;;2341:29;;;-1:-1:-1;;2341:29:12;2367:3;2341:29;;;140:5907;;;;;;;;;-1:-1:-1;921:32:0;719:10:9;921:18:0;:32::i;:::-;140:5907:12;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;140:5907:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_603": {
									"entryPoint": null,
									"id": 603,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 3146,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@canBeTerminated_886": {
									"entryPoint": 2655,
									"id": 886,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@checkLtv_905": {
									"entryPoint": 2474,
									"id": 905,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@discounts_733": {
									"entryPoint": null,
									"id": 733,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getLoanStartEnd_937": {
									"entryPoint": 2579,
									"id": 937,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPromissoryPermission_960": {
									"entryPoint": 2323,
									"id": 960,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@id_736": {
									"entryPoint": null,
									"id": 736,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@interestRateToStater_745": {
									"entryPoint": null,
									"id": 745,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@interestRate_742": {
									"entryPoint": null,
									"id": 742,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lenderFee_748": {
									"entryPoint": null,
									"id": 748,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lendingMethodsAddress_730": {
									"entryPoint": null,
									"id": 730,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@loans_804": {
									"entryPoint": null,
									"id": 804,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ltv_739": {
									"entryPoint": null,
									"id": 739,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@min_922": {
									"entryPoint": 3226,
									"id": 922,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@onERC1155BatchReceived_317": {
									"entryPoint": null,
									"id": 317,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_294": {
									"entryPoint": null,
									"id": 294,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC721Received_590": {
									"entryPoint": null,
									"id": 590,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 2564,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@promissoryNoteAddress_728": {
									"entryPoint": null,
									"id": 728,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@promissoryPermissions_808": {
									"entryPoint": null,
									"id": 808,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_60": {
									"entryPoint": 2264,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_351": {
									"entryPoint": 980,
									"id": 351,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_636": {
									"entryPoint": null,
									"id": 636,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferItems_1123": {
									"entryPoint": 1729,
									"id": 1123,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 2986,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferTokens_1043": {
									"entryPoint": 1035,
									"id": 1043,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_array_uint8_dyn": {
									"entryPoint": 3889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_payablet_addresst_uint256t_uint256": {
									"entryPoint": 3656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint8_$dyn_memory_ptr": {
									"entryPoint": 3996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 4348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 4689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_address_payable_t_address_t_enum$_Status_$754_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint16_t_uint8__to_t_address_payable_t_address_payable_t_address_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint16_t_uint8__fromStack_reversed": {
									"entryPoint": 4530,
									"id": null,
									"parameterSlots": 14,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4822,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$2_memory_ptr__to_t_array$_t_uint256_$2_memory_ptr__fromStack_reversed": {
									"entryPoint": 4299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IStaterDiscounts_$1143__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_478142894a73e4367ad0a4b08d8222ee9ec2723a3f3302630cc67da6a7df39bb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6f0de68062a842abb84ef157303850435e43264a8047bfb78c61550e10af3f4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_99b928c8ec253dbe3fbead0f2af119c82bf50b31635c5a6a3b55a7d61063f1b1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_uint16": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_uint8": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"allocate_memory": {
									"entryPoint": 3365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 3747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4914,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 4508,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4892,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3343,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 3322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18432:15",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:217:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:15"
															},
															"nodeType": "YulIf",
															"src": "93:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "234:3:15",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "239:10:15",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:51:15"
															},
															"nodeType": "YulIf",
															"src": "199:71:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:15",
														"type": ""
													}
												],
												"src": "14:286:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:15",
														"type": ""
													}
												],
												"src": "305:187:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "598:102:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "608:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "620:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "631:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "616:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "608:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "650:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "665:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "681:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "686:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "677:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "677:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "690:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "673:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "673:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "661:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "661:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "643:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "643:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "567:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "578:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "589:4:15",
														"type": ""
													}
												],
												"src": "497:203:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "750:86:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "814:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "823:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "826:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "816:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "816:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "816:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "773:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "784:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "799:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "804:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "795:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "795:11:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "808:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "791:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "791:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "780:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "780:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "770:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "763:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:50:15"
															},
															"nodeType": "YulIf",
															"src": "760:70:15"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "739:5:15",
														"type": ""
													}
												],
												"src": "705:131:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "873:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "890:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "897:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "902:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "893:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "893:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "883:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "883:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "883:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "930:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "933:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "923:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "923:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "923:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "957:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "947:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "947:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "947:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "841:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1018:230:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1028:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1044:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1038:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1038:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1028:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1056:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1078:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "1094:4:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1100:2:15",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1090:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1090:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1109:2:15",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1105:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1105:7:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1086:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1086:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1074:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1074:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1060:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1189:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1191:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1191:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1191:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1132:10:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1152:2:15",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1156:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1148:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1148:10:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1160:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1144:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1144:18:15"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1129:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1129:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1168:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1180:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1165:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1165:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1126:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1126:62:15"
															},
															"nodeType": "YulIf",
															"src": "1123:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1227:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1231:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1220:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1220:22:15"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "998:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1007:6:15",
														"type": ""
													}
												],
												"src": "973:275:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1305:478:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1354:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1363:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1366:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1356:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1356:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1356:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1333:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1341:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1329:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1329:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1348:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1325:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1325:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1318:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1318:35:15"
															},
															"nodeType": "YulIf",
															"src": "1315:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1402:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1389:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:20:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1448:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1450:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1450:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1450:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1424:2:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1436:2:15",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1440:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1432:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1432:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1444:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1428:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1428:18:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1421:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1421:26:15"
															},
															"nodeType": "YulIf",
															"src": "1418:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1479:70:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1522:2:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1526:4:15",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1518:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1518:13:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1537:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1533:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1533:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1514:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1514:27:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1543:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1510:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1510:38:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1494:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:55:15"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "1483:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "1565:7:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1574:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1558:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1558:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1558:19:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1625:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1634:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1637:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1627:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1627:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1627:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1600:6:15"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1608:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1596:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1596:15:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1613:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1592:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1592:26:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1620:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1589:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:35:15"
															},
															"nodeType": "YulIf",
															"src": "1586:55:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "1667:7:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1676:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1663:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1663:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1687:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1695:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1683:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1683:17:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1702:2:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1650:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:55:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1650:55:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "1729:7:15"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1738:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1725:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1725:16:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1743:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1721:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1721:27:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1750:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1714:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1714:38:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1714:38:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1761:16:15",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "1770:7:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1761:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1279:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1287:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1295:5:15",
														"type": ""
													}
												],
												"src": "1253:530:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1918:535:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1965:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1974:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1977:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1967:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1967:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1967:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1939:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1948:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1935:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1935:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1960:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1931:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1931:33:15"
															},
															"nodeType": "YulIf",
															"src": "1928:53:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1990:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2016:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2003:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2003:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1994:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2060:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2035:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2035:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2035:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2075:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2085:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2075:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2099:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2131:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2127:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2127:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2114:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2114:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2103:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2180:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2155:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2155:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2155:33:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2197:17:15",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2207:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2197:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2223:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2250:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2261:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2246:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2246:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2233:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2233:32:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2223:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2274:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2305:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2316:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2301:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2301:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2288:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2288:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2278:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2363:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2372:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2365:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2365:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2365:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2335:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2351:2:15",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2355:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2347:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2347:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2359:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2343:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2343:18:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2332:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2332:30:15"
															},
															"nodeType": "YulIf",
															"src": "2329:50:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2388:59:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2419:9:15"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2430:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2415:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2415:22:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2439:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2398:16:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2398:49:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2388:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1860:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1871:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1891:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1899:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1907:6:15",
														"type": ""
													}
												],
												"src": "1788:665:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2557:103:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2567:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2579:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2590:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2575:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2567:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2609:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2624:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2636:3:15",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2641:10:15",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2632:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2632:20:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2620:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2620:33:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2602:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2602:52:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2602:52:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2526:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2537:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2548:4:15",
														"type": ""
													}
												],
												"src": "2458:202:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2735:110:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2781:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2790:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2793:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2783:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2783:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2783:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2756:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2765:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2752:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2752:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2777:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2748:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2748:32:15"
															},
															"nodeType": "YulIf",
															"src": "2745:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2806:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2829:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2816:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2816:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2806:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2701:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2712:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2724:6:15",
														"type": ""
													}
												],
												"src": "2665:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2996:529:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3017:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3026:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3013:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3013:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3038:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3009:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3009:33:15"
															},
															"nodeType": "YulIf",
															"src": "3006:53:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3068:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3094:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3081:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3081:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3072:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3138:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3113:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3113:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3113:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3153:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3163:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3153:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3177:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3209:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3220:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3205:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3205:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3192:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3192:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3181:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3258:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3233:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3233:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3233:33:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3275:17:15",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3285:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3275:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3301:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3333:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3344:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3329:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3329:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3316:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3316:32:15"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "3305:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "3382:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3357:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3357:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3357:33:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3399:17:15",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "3409:7:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3425:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3452:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3463:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3448:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3448:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3435:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3435:32:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3425:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3476:43:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3503:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3514:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:19:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3486:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3486:33:15"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3476:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_payablet_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2930:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2941:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2953:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2961:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2969:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2977:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2985:6:15",
														"type": ""
													}
												],
												"src": "2850:675:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3599:114:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3643:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3645:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3645:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3645:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3615:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3631:2:15",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3635:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3627:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3627:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3639:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3623:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3623:18:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3612:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3612:30:15"
															},
															"nodeType": "YulIf",
															"src": "3609:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3674:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3690:1:15",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3693:6:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3686:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:14:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3702:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3682:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3682:25:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3674:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3579:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3590:4:15",
														"type": ""
													}
												],
												"src": "3530:183:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3782:598:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3831:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3840:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3843:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3833:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3833:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3833:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3810:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3818:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3806:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3806:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3825:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3802:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3802:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3795:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3795:35:15"
															},
															"nodeType": "YulIf",
															"src": "3792:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3856:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3879:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3866:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3866:20:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3860:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3895:14:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3905:4:15",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3899:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3918:71:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3985:2:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "3945:39:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3945:43:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3929:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3929:60:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3922:3:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3998:16:15",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "4011:3:15"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "4002:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4030:3:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4035:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4023:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4023:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4023:15:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4047:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4058:3:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4063:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4054:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4054:12:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4047:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4075:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4097:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4109:1:15",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4112:2:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "4105:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4105:10:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4093:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4093:23:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4118:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4089:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4089:32:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "4079:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4149:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4158:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4161:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4151:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4151:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4151:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4136:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4144:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4133:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4133:15:15"
															},
															"nodeType": "YulIf",
															"src": "4130:35:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4174:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4189:6:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4197:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4185:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4185:15:15"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4178:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4265:86:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4286:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "4304:3:15"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "4291:12:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4291:17:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4279:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4279:30:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4279:30:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4322:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4333:3:15"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4338:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4329:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4329:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4322:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4220:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4225:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4217:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4217:15:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4233:23:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4235:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4246:3:15"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4251:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4242:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4242:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4235:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4213:3:15",
																"statements": []
															},
															"src": "4209:142:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4360:14:15",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "4369:5:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4360:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3756:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3764:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3772:5:15",
														"type": ""
													}
												],
												"src": "3718:662:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4447:767:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4496:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4505:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4508:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4498:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4498:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4498:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4475:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4483:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4471:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4471:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4490:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4467:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4467:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4460:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4460:35:15"
															},
															"nodeType": "YulIf",
															"src": "4457:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4521:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4544:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4531:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4531:20:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4525:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4560:14:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4570:4:15",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4564:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4583:71:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4650:2:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "4610:39:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4610:43:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4594:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4594:60:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4587:3:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4663:16:15",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "4676:3:15"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "4667:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4695:3:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4700:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4688:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4688:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4688:15:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4712:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4723:3:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4728:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4719:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4719:12:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4712:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4740:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4762:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4774:1:15",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4777:2:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "4770:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4770:10:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4758:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4758:23:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4783:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4754:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:32:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "4744:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4814:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4823:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4826:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4816:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4816:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4816:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4801:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4809:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4798:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4798:15:15"
															},
															"nodeType": "YulIf",
															"src": "4795:35:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4839:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4854:6:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4862:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4850:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4850:15:15"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4843:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4930:255:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4944:30:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4970:3:15"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "4957:12:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4957:17:15"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "4948:5:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5038:74:15",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "5056:11:15",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5066:1:15",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_3",
																							"nodeType": "YulTypedName",
																							"src": "5060:2:15",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "5091:2:15"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "5095:2:15"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "5084:6:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5084:14:15"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5084:14:15"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "5000:5:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5011:5:15"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5018:4:15",
																									"type": "",
																									"value": "0xff"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "5007:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5007:16:15"
																						}
																					],
																					"functionName": {
																						"name": "eq",
																						"nodeType": "YulIdentifier",
																						"src": "4997:2:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4997:27:15"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "4990:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4990:35:15"
																		},
																		"nodeType": "YulIf",
																		"src": "4987:125:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5132:3:15"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "5137:5:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5125:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5125:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5125:18:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5156:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5167:3:15"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "5172:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5163:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5163:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5156:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4885:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4890:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4882:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4882:15:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4898:23:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4900:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4911:3:15"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4916:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4907:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4907:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4900:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4878:3:15",
																"statements": []
															},
															"src": "4874:311:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5194:14:15",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "5203:5:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5194:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint8_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4421:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4429:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4437:5:15",
														"type": ""
													}
												],
												"src": "4385:829:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5430:1508:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5477:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5486:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5489:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5479:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5479:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5479:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5451:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5460:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5447:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5447:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5472:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5443:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5443:33:15"
															},
															"nodeType": "YulIf",
															"src": "5440:53:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5502:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5528:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5515:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5515:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5506:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5572:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5547:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5547:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5547:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5587:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5597:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5587:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5611:12:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5621:2:15",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5615:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5632:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5664:9:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5675:2:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5660:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5660:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5647:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5647:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "5636:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "5713:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5688:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5688:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5688:33:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5730:17:15",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "5740:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5730:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5756:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5787:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5798:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5783:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5783:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5770:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5770:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5760:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5811:28:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5829:2:15",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5833:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5825:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5825:10:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5837:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5821:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5821:18:15"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5815:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5866:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5875:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5878:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5868:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5868:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5868:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5854:6:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5862:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5851:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5851:14:15"
															},
															"nodeType": "YulIf",
															"src": "5848:34:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5891:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5905:9:15"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5916:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5901:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5901:22:15"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5895:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5971:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5980:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5983:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5973:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5973:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5973:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5950:2:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5954:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5946:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5946:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5961:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5942:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5942:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5935:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5935:35:15"
															},
															"nodeType": "YulIf",
															"src": "5932:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5996:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6019:2:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6006:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6006:16:15"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "6000:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6031:71:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "6098:2:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "6058:39:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6058:43:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6042:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6042:60:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6035:3:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6111:16:15",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "6124:3:15"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "6115:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6143:3:15"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6148:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6136:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6136:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6136:15:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6160:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6171:3:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6176:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6167:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6167:12:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6160:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6188:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "6210:2:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6218:1:15",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "6221:2:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "6214:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6214:10:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6206:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6206:19:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6227:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6202:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6202:28:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6192:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6262:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6271:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6274:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6264:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6264:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6264:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6245:6:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6253:7:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6242:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6242:19:15"
															},
															"nodeType": "YulIf",
															"src": "6239:39:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6287:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6302:2:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6306:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6298:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6298:11:15"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "6291:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6374:167:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6388:32:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6416:3:15"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "6403:12:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6403:17:15"
																		},
																		"variables": [
																			{
																				"name": "value_2",
																				"nodeType": "YulTypedName",
																				"src": "6392:7:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value_2",
																					"nodeType": "YulIdentifier",
																					"src": "6458:7:15"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nodeType": "YulIdentifier",
																				"src": "6433:24:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6433:33:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6433:33:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6486:3:15"
																				},
																				{
																					"name": "value_2",
																					"nodeType": "YulIdentifier",
																					"src": "6491:7:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6479:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6479:20:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6479:20:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6512:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6523:3:15"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6528:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6519:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6519:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6512:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6329:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6334:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6326:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6326:15:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6342:23:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6344:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6355:3:15"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6360:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6351:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6351:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6344:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6322:3:15",
																"statements": []
															},
															"src": "6318:223:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6550:15:15",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "6560:5:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "6550:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6574:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6607:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6618:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6603:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6603:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6590:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6590:32:15"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "6578:8:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6651:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6660:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6663:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6653:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6653:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6653:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "6637:8:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6647:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6634:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6634:16:15"
															},
															"nodeType": "YulIf",
															"src": "6631:36:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6676:73:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6719:9:15"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6730:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6715:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6715:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6741:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6686:28:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6686:63:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "6676:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6758:49:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6791:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6802:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6787:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6787:19:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6774:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6774:33:15"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "6762:8:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6836:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6845:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6848:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6838:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6838:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6838:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "6822:8:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6832:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6819:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6819:16:15"
															},
															"nodeType": "YulIf",
															"src": "6816:36:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6861:71:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6902:9:15"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "6913:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6898:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6898:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6924:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint8_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6871:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6871:61:15"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "6861:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint8_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5364:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5375:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5387:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5395:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5403:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5411:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5419:6:15",
														"type": ""
													}
												],
												"src": "5219:1719:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7044:76:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7054:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7066:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7077:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7062:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7062:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7054:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7096:9:15"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7107:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7089:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7089:25:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7089:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7013:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7024:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7035:4:15",
														"type": ""
													}
												],
												"src": "6943:177:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7251:102:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7261:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7273:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7284:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7269:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7269:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7261:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7303:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7318:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7334:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7339:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7330:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7330:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7343:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7326:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7326:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7314:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7314:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7296:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7296:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7296:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IStaterDiscounts_$1143__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7220:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7231:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7242:4:15",
														"type": ""
													}
												],
												"src": "7125:228:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7445:161:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7491:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7500:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7503:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7493:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7493:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7493:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7466:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7475:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7462:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7462:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7487:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7458:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7458:32:15"
															},
															"nodeType": "YulIf",
															"src": "7455:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7516:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7539:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7526:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7526:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7516:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7558:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7585:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7596:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7581:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7581:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7568:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7568:32:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7558:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7403:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7414:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7426:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7434:6:15",
														"type": ""
													}
												],
												"src": "7358:248:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7710:93:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7720:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7732:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7743:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7728:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7728:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7720:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7762:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7777:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7785:10:15",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7773:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7773:23:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7755:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7755:42:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7755:42:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7679:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7690:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7701:4:15",
														"type": ""
													}
												],
												"src": "7611:192:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7955:347:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7965:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7977:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7988:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7973:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7973:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7965:4:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8000:20:15",
															"value": {
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "8011:9:15"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "8004:3:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8029:16:15",
															"value": {
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "8036:9:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8029:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8054:20:15",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "8068:6:15"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "8058:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8083:10:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8092:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8087:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8149:147:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8170:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "8181:6:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8175:5:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8175:13:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8163:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8163:26:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8163:26:15"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8202:14:15",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8212:4:15",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "8206:2:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8229:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8240:3:15"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8245:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8236:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8236:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8229:3:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8261:25:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "8275:6:15"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8283:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8271:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8271:15:15"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8261:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8113:1:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8116:4:15",
																		"type": "",
																		"value": "0x02"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8110:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8110:11:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8122:18:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8124:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8133:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8136:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8129:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8129:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8124:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8106:3:15",
																"statements": []
															},
															"src": "8102:194:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$2_memory_ptr__to_t_array$_t_uint256_$2_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7924:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7935:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7946:4:15",
														"type": ""
													}
												],
												"src": "7808:494:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8504:874:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8551:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8560:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8563:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8553:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8553:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8553:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8525:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8534:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8521:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8521:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8546:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8517:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8517:33:15"
															},
															"nodeType": "YulIf",
															"src": "8514:53:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8576:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8602:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8589:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8589:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "8580:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8646:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "8621:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8621:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8621:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8661:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8671:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8661:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8685:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8717:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8728:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8713:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8713:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8700:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8700:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "8689:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "8766:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "8741:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8741:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8741:33:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8783:17:15",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "8793:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8783:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8809:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8840:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8851:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8836:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8836:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8823:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8823:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8813:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8864:28:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8882:2:15",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8886:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8878:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8878:10:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8890:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8874:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8874:18:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8868:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8919:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8928:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8931:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8921:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8921:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8921:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8907:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8915:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8904:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8904:14:15"
															},
															"nodeType": "YulIf",
															"src": "8901:34:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8944:71:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8987:9:15"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8998:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8983:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8983:22:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9007:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8954:28:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8954:61:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8944:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9024:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9057:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9068:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9053:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9053:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9040:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9040:32:15"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "9028:8:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9101:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9110:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9113:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9103:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9103:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9103:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "9087:8:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9097:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9084:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9084:16:15"
															},
															"nodeType": "YulIf",
															"src": "9081:36:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9126:73:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9169:9:15"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "9180:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9165:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9165:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9191:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "9136:28:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9136:63:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "9126:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9208:49:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9241:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9252:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9237:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9237:19:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9224:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9224:33:15"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "9212:8:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9286:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9295:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9298:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9288:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9288:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9288:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "9272:8:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9282:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9269:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9269:16:15"
															},
															"nodeType": "YulIf",
															"src": "9266:36:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9311:61:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9342:9:15"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "9353:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9338:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9338:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9364:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "9321:16:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9321:51:15"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "9311:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8438:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8449:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8461:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8469:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8477:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8485:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8493:6:15",
														"type": ""
													}
												],
												"src": "8307:1071:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9415:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9432:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9439:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9444:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9435:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9435:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9425:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9425:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9425:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9472:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9475:4:15",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9465:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9465:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9465:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9496:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9499:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9489:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9489:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9489:15:15"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "9383:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9558:47:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9575:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9584:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9591:6:15",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9580:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9580:18:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9568:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9568:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9568:31:15"
														}
													]
												},
												"name": "abi_encode_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9542:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9549:3:15",
														"type": ""
													}
												],
												"src": "9515:90:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9652:33:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9661:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9670:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9677:4:15",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9666:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9666:16:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9654:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9654:29:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9654:29:15"
														}
													]
												},
												"name": "abi_encode_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9636:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9643:3:15",
														"type": ""
													}
												],
												"src": "9610:75:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10164:857:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10174:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10186:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10197:3:15",
																		"type": "",
																		"value": "416"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10182:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10182:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10174:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10217:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10232:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10248:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10253:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "10244:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10244:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10257:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10240:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10240:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10228:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10228:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10210:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10210:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10210:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10281:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10292:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10277:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10277:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10301:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10317:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10322:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "10313:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10313:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10326:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10309:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10309:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10297:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10297:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10270:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10270:60:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10270:60:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10350:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10361:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10346:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10346:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "10370:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10386:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10391:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "10382:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10382:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10395:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10378:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10378:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10366:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10366:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10339:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10339:60:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10339:60:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10441:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10462:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10469:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10474:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "10465:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10465:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10455:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10455:31:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10455:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10506:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10509:4:15",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10499:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10499:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10499:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10534:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10537:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10527:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10527:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10527:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "10421:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10429:1:15",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10418:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10418:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10411:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10411:21:15"
															},
															"nodeType": "YulIf",
															"src": "10408:144:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10572:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10583:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10568:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10568:18:15"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10588:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10561:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10561:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10561:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10615:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10626:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10611:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10611:19:15"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "10632:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10604:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10604:35:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10604:35:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10659:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10670:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10655:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10655:19:15"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "10676:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10648:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10648:35:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10648:35:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10703:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10714:3:15",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10699:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10699:19:15"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "10720:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10692:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10692:35:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10692:35:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10747:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10758:3:15",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10743:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10743:19:15"
																	},
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "10764:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10736:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10736:35:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10736:35:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10791:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10802:3:15",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10787:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10787:19:15"
																	},
																	{
																		"name": "value8",
																		"nodeType": "YulIdentifier",
																		"src": "10808:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10780:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10780:35:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10780:35:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10835:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10846:3:15",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10831:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10831:19:15"
																	},
																	{
																		"name": "value9",
																		"nodeType": "YulIdentifier",
																		"src": "10852:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10824:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10824:35:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10824:35:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10879:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10890:3:15",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10875:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10875:19:15"
																	},
																	{
																		"name": "value10",
																		"nodeType": "YulIdentifier",
																		"src": "10896:7:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10868:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10868:36:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10868:36:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value11",
																		"nodeType": "YulIdentifier",
																		"src": "10931:7:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10944:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10955:3:15",
																				"type": "",
																				"value": "352"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10940:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10940:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "10913:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10913:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10913:47:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value12",
																		"nodeType": "YulIdentifier",
																		"src": "10986:7:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10999:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11010:3:15",
																				"type": "",
																				"value": "384"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10995:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10995:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "10969:16:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10969:46:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10969:46:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_address_payable_t_address_t_enum$_Status_$754_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint16_t_uint8__to_t_address_payable_t_address_payable_t_address_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint16_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10034:9:15",
														"type": ""
													},
													{
														"name": "value12",
														"nodeType": "YulTypedName",
														"src": "10045:7:15",
														"type": ""
													},
													{
														"name": "value11",
														"nodeType": "YulTypedName",
														"src": "10054:7:15",
														"type": ""
													},
													{
														"name": "value10",
														"nodeType": "YulTypedName",
														"src": "10063:7:15",
														"type": ""
													},
													{
														"name": "value9",
														"nodeType": "YulTypedName",
														"src": "10072:6:15",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "10080:6:15",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "10088:6:15",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "10096:6:15",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "10104:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "10112:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10120:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10128:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10136:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10144:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10155:4:15",
														"type": ""
													}
												],
												"src": "9690:1331:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11173:587:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11220:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11229:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11232:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11222:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11222:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11222:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11194:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11203:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11190:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11190:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11215:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11186:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11186:33:15"
															},
															"nodeType": "YulIf",
															"src": "11183:53:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11245:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11271:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11258:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11258:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "11249:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11315:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "11290:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11290:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11290:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11330:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11340:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11330:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11354:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11386:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11397:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11382:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11382:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11369:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11369:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "11358:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "11435:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "11410:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11410:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11410:33:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11452:17:15",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "11462:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "11452:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11478:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11505:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11516:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11501:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11501:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11488:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11488:32:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "11478:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11529:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11556:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11567:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11552:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11552:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11539:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11539:32:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "11529:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11580:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11611:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11622:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11607:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11607:19:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11594:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11594:33:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "11584:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11670:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11679:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11682:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11672:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11672:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11672:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11642:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11658:2:15",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11662:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "11654:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11654:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11666:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11650:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11650:18:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11639:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11639:30:15"
															},
															"nodeType": "YulIf",
															"src": "11636:50:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11695:59:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11726:9:15"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11737:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11722:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11722:22:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "11746:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "11705:16:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11705:49:15"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "11695:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11107:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11118:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11130:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11138:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11146:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11154:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "11162:6:15",
														"type": ""
													}
												],
												"src": "11026:734:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11835:177:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11881:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11890:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11893:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11883:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11883:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11883:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11856:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11865:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11852:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11852:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11877:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11848:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11848:32:15"
															},
															"nodeType": "YulIf",
															"src": "11845:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11906:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11932:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11919:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11919:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "11910:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11976:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "11951:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11951:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11951:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11991:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12001:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11991:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11801:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11812:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11824:6:15",
														"type": ""
													}
												],
												"src": "11765:247:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12182:218:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12192:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12204:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12215:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12200:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12200:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12192:4:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12227:29:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12245:3:15",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12250:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12241:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12241:11:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12254:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12237:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12237:19:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12231:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12272:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12287:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12295:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12283:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12283:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12265:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12265:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12265:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12319:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12330:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12315:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12315:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12339:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12347:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12335:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12335:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12308:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12308:43:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12308:43:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12371:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12382:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12367:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12367:18:15"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12387:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12360:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12360:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12360:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12135:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12146:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12154:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12162:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12173:4:15",
														"type": ""
													}
												],
												"src": "12017:383:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12483:199:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12529:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12538:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12541:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12531:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12531:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12531:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12504:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12513:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12500:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12500:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12525:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12496:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12496:32:15"
															},
															"nodeType": "YulIf",
															"src": "12493:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12554:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12573:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12567:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12567:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "12558:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12636:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12645:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12648:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12638:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12638:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12638:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12605:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "12626:5:15"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "12619:6:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12619:13:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12612:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12612:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12602:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12602:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12595:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12595:40:15"
															},
															"nodeType": "YulIf",
															"src": "12592:60:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12661:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12671:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12661:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12449:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12460:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12472:6:15",
														"type": ""
													}
												],
												"src": "12405:277:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12861:227:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12878:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12889:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12871:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12871:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12871:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12912:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12923:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12908:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12908:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12928:2:15",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12901:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12901:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12901:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12951:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12962:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12947:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12947:18:15"
																	},
																	{
																		"hexValue": "5472616e73666572206f6620746f6b656e7320746f2072656365697665722066",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12967:34:15",
																		"type": "",
																		"value": "Transfer of tokens to receiver f"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12940:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12940:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12940:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13022:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13033:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13018:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13018:18:15"
																	},
																	{
																		"hexValue": "61696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13038:7:15",
																		"type": "",
																		"value": "ailed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13011:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13011:35:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13011:35:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13055:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13067:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13078:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13063:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13063:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13055:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12838:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12852:4:15",
														"type": ""
													}
												],
												"src": "12687:401:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13250:218:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13260:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13272:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13283:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13268:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13268:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13260:4:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13295:29:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13313:3:15",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13318:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13309:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13309:11:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13322:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13305:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13305:19:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13299:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13340:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13355:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13363:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13351:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13351:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13333:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13333:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13333:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13387:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13398:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13383:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13383:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13407:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13415:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13403:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13403:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13376:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13376:43:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13376:43:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13439:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13450:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13435:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13435:18:15"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13455:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13428:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13428:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13428:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13203:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13214:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13222:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13230:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13241:4:15",
														"type": ""
													}
												],
												"src": "13093:375:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13647:225:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13664:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13675:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13657:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13657:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13657:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13698:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13709:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13694:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13694:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13714:2:15",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13687:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13687:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13687:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13737:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13748:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13733:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13733:18:15"
																	},
																	{
																		"hexValue": "5472616e73666572206f6620746f6b656e7320746f2053746174657220666169",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13753:34:15",
																		"type": "",
																		"value": "Transfer of tokens to Stater fai"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13726:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13726:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13726:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13808:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13819:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13804:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13804:18:15"
																	},
																	{
																		"hexValue": "6c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13824:5:15",
																		"type": "",
																		"value": "led"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13797:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13797:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13797:33:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13839:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13851:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13862:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13847:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13847:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13839:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13624:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13638:4:15",
														"type": ""
													}
												],
												"src": "13473:399:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14051:224:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14068:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14079:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14061:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14061:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14061:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14102:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14113:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14098:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14098:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14118:2:15",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14091:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14091:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14091:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14141:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14152:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14137:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14137:18:15"
																	},
																	{
																		"hexValue": "5472616e73666572206f662045544820746f207265636569766572206661696c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14157:34:15",
																		"type": "",
																		"value": "Transfer of ETH to receiver fail"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14130:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14130:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14130:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14212:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14223:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14208:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14208:18:15"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14228:4:15",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14201:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14201:32:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14201:32:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14242:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14254:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14265:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14250:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14250:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14242:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14028:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14042:4:15",
														"type": ""
													}
												],
												"src": "13877:398:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14454:182:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14471:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14482:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14464:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14464:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14464:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14505:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14516:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14501:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14501:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14521:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14494:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14494:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14494:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14544:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14555:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14540:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14540:18:15"
																	},
																	{
																		"hexValue": "5472616e73666572206f662045544820746f20537461746572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14560:34:15",
																		"type": "",
																		"value": "Transfer of ETH to Stater failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14533:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14533:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14533:62:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14604:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14616:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14627:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14612:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14612:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14604:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14431:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14445:4:15",
														"type": ""
													}
												],
												"src": "14280:356:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14815:182:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14832:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14843:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14825:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14825:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14825:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14866:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14877:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14862:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14862:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14882:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14855:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14855:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14855:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14905:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14916:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14901:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14901:18:15"
																	},
																	{
																		"hexValue": "546f6b656e20696e666f732070726f76696465642061726520696e76616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14921:34:15",
																		"type": "",
																		"value": "Token infos provided are invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14894:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14894:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14894:62:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14965:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14977:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14988:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14973:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14973:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14965:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14792:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14806:4:15",
														"type": ""
													}
												],
												"src": "14641:356:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15034:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15051:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15058:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15063:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15054:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15054:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15044:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15044:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15044:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15091:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15094:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15084:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15084:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15084:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15115:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15118:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15108:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15108:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15108:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15002:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15427:386:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15437:29:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15455:3:15",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15460:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15451:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15451:11:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15464:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15447:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15447:19:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15441:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15482:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15497:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15505:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15493:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15493:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15475:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15475:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15475:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15529:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15540:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15525:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15525:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "15549:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15557:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15545:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15545:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15518:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15518:43:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15518:43:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15581:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15592:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15577:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15577:18:15"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15597:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15570:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15570:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15570:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15624:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15635:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15620:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15620:18:15"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15640:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15613:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15613:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15613:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15667:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15678:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15663:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15663:19:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15684:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15656:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15656:32:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15656:32:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15708:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15719:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15704:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15704:19:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15725:1:15",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15697:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15697:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15697:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15747:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15758:3:15",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15743:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15743:19:15"
																	},
																	{
																		"hexValue": "30783030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15764:6:15",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15736:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15736:35:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15736:35:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15780:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15792:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15803:3:15",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15788:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15788:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15780:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15372:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15383:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15391:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15399:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15407:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15418:4:15",
														"type": ""
													}
												],
												"src": "15134:679:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15850:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15867:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15874:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15879:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15870:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15870:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15860:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15860:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15860:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15907:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15910:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15900:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15900:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15900:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15931:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15934:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15924:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15924:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15924:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "15818:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15997:88:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16028:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16030:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16030:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16030:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16013:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16024:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16020:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16020:6:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "16010:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16010:17:15"
															},
															"nodeType": "YulIf",
															"src": "16007:43:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16059:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16070:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16077:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16066:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16066:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16059:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15979:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15989:3:15",
														"type": ""
													}
												],
												"src": "15950:135:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16264:182:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16281:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16292:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16274:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16274:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16274:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16315:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16326:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16311:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16311:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16331:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16304:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16304:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16304:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16354:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16365:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16350:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16350:18:15"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16370:34:15",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16343:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16343:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16343:62:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16414:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16426:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16437:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16422:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16422:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16414:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16241:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16255:4:15",
														"type": ""
													}
												],
												"src": "16090:356:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16625:176:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16642:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16653:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16635:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16635:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16635:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16676:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16687:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16672:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16672:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16692:2:15",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16665:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16665:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16665:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16715:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16726:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16711:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16711:18:15"
																	},
																	{
																		"hexValue": "4c6f616e206973206e6f206c6f6e67657220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16731:28:15",
																		"type": "",
																		"value": "Loan is no longer approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16704:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16704:56:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16704:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16769:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16781:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16792:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16777:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16777:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16769:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_99b928c8ec253dbe3fbead0f2af119c82bf50b31635c5a6a3b55a7d61063f1b1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16602:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16616:4:15",
														"type": ""
													}
												],
												"src": "16451:350:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16852:171:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16883:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16904:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "16911:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "16916:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "16907:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16907:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16897:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16897:31:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16897:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16948:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16951:4:15",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16941:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16941:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16941:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16976:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16979:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16969:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16969:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16969:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16872:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16865:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16865:9:15"
															},
															"nodeType": "YulIf",
															"src": "16862:132:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17003:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17012:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17015:1:15"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "17008:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17008:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "17003:1:15"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16837:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16840:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "16846:1:15",
														"type": ""
													}
												],
												"src": "16806:217:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17080:116:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17139:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17141:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17141:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17141:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "17111:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "17104:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17104:9:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "17097:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17097:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "17119:1:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "17130:1:15",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "17126:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17126:6:15"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "17134:1:15"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "17122:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17122:14:15"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17116:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17116:21:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17093:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17093:45:15"
															},
															"nodeType": "YulIf",
															"src": "17090:71:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17170:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17185:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17188:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "17181:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17181:9:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "17170:7:15"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17059:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17062:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "17068:7:15",
														"type": ""
													}
												],
												"src": "17028:168:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17375:162:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17392:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17403:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17385:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17385:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17385:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17426:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17437:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17422:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17422:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17442:2:15",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17415:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17415:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17415:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17465:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17476:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17461:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17461:18:15"
																	},
																	{
																		"hexValue": "4c545620746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17481:14:15",
																		"type": "",
																		"value": "LTV too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17454:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17454:42:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17454:42:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17505:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17517:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17528:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17513:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17513:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17505:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6f0de68062a842abb84ef157303850435e43264a8047bfb78c61550e10af3f4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17352:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17366:4:15",
														"type": ""
													}
												],
												"src": "17201:336:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17716:174:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17733:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17744:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17726:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17726:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17726:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17767:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17778:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17763:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17763:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17783:2:15",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17756:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17756:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17756:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17806:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17817:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17802:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17802:18:15"
																	},
																	{
																		"hexValue": "4c6f616e206973206e6f742079657420617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17822:26:15",
																		"type": "",
																		"value": "Loan is not yet approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17795:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17795:54:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17795:54:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17858:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17870:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17881:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17866:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17866:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17858:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_478142894a73e4367ad0a4b08d8222ee9ec2723a3f3302630cc67da6a7df39bb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17693:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17707:4:15",
														"type": ""
													}
												],
												"src": "17542:348:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17943:80:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17970:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17972:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17972:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17972:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17959:1:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "17966:1:15"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "17962:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17962:6:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17956:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17956:13:15"
															},
															"nodeType": "YulIf",
															"src": "17953:39:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18001:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18012:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18015:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18008:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18008:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "18001:3:15"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17926:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17929:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "17935:3:15",
														"type": ""
													}
												],
												"src": "17895:128:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18202:228:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18219:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18230:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18212:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18212:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18212:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18253:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18264:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18249:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18249:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18269:2:15",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18242:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18242:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18242:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18292:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18303:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18288:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18288:18:15"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18308:34:15",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18281:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18281:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18281:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18363:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18374:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18359:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18359:18:15"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18379:8:15",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18352:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18352:36:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18352:36:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18397:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18409:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18420:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18405:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18405:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18397:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18179:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18193:4:15",
														"type": ""
													}
												],
												"src": "18028:402:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address_payablet_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_uint8_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := calldataload(src)\n            if iszero(eq(value, and(value, 0xff)))\n            {\n                let _3 := 0\n                revert(_3, _3)\n            }\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint8_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _1 := 32\n        let value_1 := calldataload(add(headStart, _1))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, shl(5, _4)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let value_2 := calldataload(src)\n            validator_revert_address(value_2)\n            mstore(dst, value_2)\n            dst := add(dst, _1)\n        }\n        value2 := dst_1\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _2) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _2) { revert(0, 0) }\n        value4 := abi_decode_array_uint8_dyn(add(headStart, offset_2), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IStaterDiscounts_$1143__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$2_memory_ptr__to_t_array$_t_uint256_$2_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let pos := headStart\n        pos := headStart\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, 0x02) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            let _1 := 0x20\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_uint16(value, pos)\n    {\n        mstore(pos, and(value, 0xffff))\n    }\n    function abi_encode_uint8(value, pos)\n    { mstore(pos, and(value, 0xff)) }\n    function abi_encode_tuple_t_address_payable_t_address_payable_t_address_t_enum$_Status_$754_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint16_t_uint8__to_t_address_payable_t_address_payable_t_address_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint16_t_uint8__fromStack_reversed(headStart, value12, value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 416)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        if iszero(lt(value3, 5))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), value9)\n        mstore(add(headStart, 320), value10)\n        abi_encode_uint16(value11, add(headStart, 352))\n        abi_encode_uint8(value12, add(headStart, 384))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Transfer of tokens to receiver f\")\n        mstore(add(headStart, 96), \"ailed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Transfer of tokens to Stater fai\")\n        mstore(add(headStart, 96), \"led\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Transfer of ETH to receiver fail\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Transfer of ETH to Stater failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Token infos provided are invalid\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        mstore(add(headStart, 160), 4)\n        mstore(add(headStart, 192), \"0x00\")\n        tail := add(headStart, 224)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_99b928c8ec253dbe3fbead0f2af119c82bf50b31635c5a6a3b55a7d61063f1b1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Loan is no longer approved\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_6f0de68062a842abb84ef157303850435e43264a8047bfb78c61550e10af3f4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"LTV too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_478142894a73e4367ad0a4b08d8222ee9ec2723a3f3302630cc67da6a7df39bb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Loan is not yet approved\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x13C75B5B EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x24C93FE5 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x2E3F4A5D EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x38DAA789 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x407299D7 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x6FB49D73 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x756DB756 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x75AF65D1 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x7C3A00FD EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x87715588 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x8CA83F07 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x8F829275 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x9E1D7A1E EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xAF640D0F EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xE1EC3C68 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xE70C7446 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x15D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x141 JUMP JUMPDEST PUSH2 0x193 PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC4 JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x141 JUMP JUMPDEST PUSH2 0x15D PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0xE48 JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x15D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x6C1 JUMP JUMPDEST PUSH2 0x219 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x141 JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x8D8 JUMP JUMPDEST PUSH2 0x15D PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x913 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x15D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x219 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x281 SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x141 JUMP JUMPDEST PUSH2 0x15D PUSH2 0xA04 JUMP JUMPDEST PUSH2 0x219 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2BA PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH2 0x219 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x193 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x10FC JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x376 PUSH2 0x2FD CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0x8 DUP8 ADD SLOAD PUSH1 0xB DUP9 ADD SLOAD PUSH1 0xC DUP10 ADD SLOAD PUSH1 0xD DUP11 ADD SLOAD PUSH1 0xE SWAP1 SWAP11 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP10 DUP11 AND SWAP11 SWAP9 DUP11 AND SWAP10 DUP9 AND SWAP9 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP10 DIV DUP10 AND SWAP9 SWAP1 SWAP2 PUSH2 0xFFFF DUP2 AND SWAP2 PUSH3 0x10000 SWAP1 SWAP2 DIV AND DUP14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11B2 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x39D CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0xA5F JUMP JUMPDEST PUSH2 0x193 PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1251 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x3CF CALLDATASIZE PUSH1 0x4 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0xBAA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0x405 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x44A SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x469 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x4EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206F6620746F6B656E7320746F2072656365697665722066 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x185A5B1959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD DUP7 PUSH2 0x504 PUSH2 0xA04 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x542 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x566 SWAP2 SWAP1 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206F6620746F6B656E7320746F2053746174657220666169 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1B1959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206F662045544820746F207265636569766572206661696C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x647 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP PUSH2 0x6BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206F662045544820746F20537461746572206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E3 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP3 MLOAD DUP3 MLOAD DUP2 EQ DUP1 ISZERO PUSH2 0x6D3 JUMPI POP DUP1 DUP3 MLOAD EQ JUMPDEST PUSH2 0x71F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20696E666F732070726F76696465642061726520696E76616C6964 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8CF JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x73C JUMPI PUSH2 0x73C PUSH2 0x131C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND PUSH1 0x0 SUB PUSH2 0x7E7 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x760 JUMPI PUSH2 0x760 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x42842E0E DUP9 DUP9 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x78A JUMPI PUSH2 0x78A PUSH2 0x131C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x8BF JUMP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7F9 JUMPI PUSH2 0x7F9 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF242432A DUP9 DUP9 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x823 JUMPI PUSH2 0x823 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x3078303 PUSH1 0xE4 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x8C8 DUP2 PUSH2 0x1348 JUMP JUMPDEST SWAP1 POP PUSH2 0x722 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x8E1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x907 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E3 SWAP1 PUSH2 0x1361 JUMP JUMPDEST PUSH2 0x911 PUSH1 0x0 PUSH2 0xC4A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x944 JUMPI PUSH2 0x944 PUSH2 0x119C JUMP JUMPDEST EQ PUSH2 0x98E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x131BD85B881A5CC81B9BC81B1BDB99D95C88185C1C1C9BDD9959 PUSH1 0x32 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E3 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x9B8 PUSH1 0x64 DUP4 PUSH2 0x1396 JUMP JUMPDEST PUSH2 0x9C2 SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0xA00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x98A8AC40E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xA1B PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP4 DUP5 SWAP1 MSTORE SWAP3 SWAP2 ADD SWAP1 PUSH1 0x2 SWAP1 DUP3 DUP5 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xA40 JUMPI POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA90 JUMPI PUSH2 0xA90 PUSH2 0x119C JUMP JUMPDEST EQ DUP1 PUSH2 0xAC8 JUMPI POP PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xAC6 JUMPI PUSH2 0xAC6 PUSH2 0x119C JUMP JUMPDEST EQ JUMPDEST PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x131BD85B881A5CC81B9BDD081E595D08185C1C1C9BDD9959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD PUSH2 0xB2C SWAP1 TIMESTAMP SWAP1 PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xE SWAP1 SWAP2 ADD SLOAD PUSH2 0xB58 SWAP2 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SLOAD PUSH2 0xB7B SWAP2 SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD ADD SLOAD PUSH2 0xB98 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0xBA2 SWAP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST GT ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH2 0xBB3 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E3 SWAP1 PUSH2 0x1361 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0xC47 DUP2 PUSH2 0xC4A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xCA9 JUMPI DUP2 PUSH2 0xCAB JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xCAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xD4D JUMPI PUSH2 0xD4D PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xD7F JUMPI PUSH2 0xD7F PUSH2 0xD0F JUMP JUMPDEST PUSH2 0xD92 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xD25 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xDA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xDDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0xDE5 DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0xDF5 DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xE17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE23 DUP8 DUP3 DUP9 ADD PUSH2 0xD55 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0xE6B DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0xE7B DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0xE8B DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0xEBC JUMPI PUSH2 0xEBC PUSH2 0xD0F JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xED7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEEC PUSH2 0xEE7 DUP4 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0xD25 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xF0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xF26 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xF0F JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF52 PUSH2 0xEE7 DUP4 PUSH2 0xEA3 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xF71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xF26 JUMPI DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xF8F JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xFB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0xFBF DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 DUP2 ADD CALLDATALOAD PUSH2 0xFD0 DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xFEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP10 ADD SWAP2 POP DUP10 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x100E PUSH2 0xEE7 DUP3 PUSH2 0xEA3 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP13 DUP4 GT ISZERO PUSH2 0x102D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x1054 JUMPI DUP5 CALLDATALOAD PUSH2 0x1045 DUP2 PUSH2 0xCFA JUMP JUMPDEST DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x1032 JUMP JUMPDEST SWAP8 POP POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x106C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1078 DUP11 DUP5 DUP12 ADD PUSH2 0xEC6 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x108E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x109C DUP9 DUP3 DUP10 ADD PUSH2 0xF31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD DUP2 DUP4 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x10F3 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x10D4 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x111F DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x112F DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x114B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1157 DUP10 DUP4 DUP11 ADD PUSH2 0xEC6 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x116D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1179 DUP10 DUP4 DUP11 ADD PUSH2 0xEC6 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x118F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109C DUP9 DUP3 DUP10 ADD PUSH2 0xD55 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP3 MSTORE DUP14 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP13 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1A0 DUP2 ADD PUSH1 0x5 DUP13 LT PUSH2 0x11F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP12 PUSH1 0x60 DUP4 ADD MSTORE DUP11 PUSH1 0x80 DUP4 ADD MSTORE DUP10 PUSH1 0xA0 DUP4 ADD MSTORE DUP9 PUSH1 0xC0 DUP4 ADD MSTORE DUP8 PUSH1 0xE0 DUP4 ADD MSTORE DUP7 PUSH2 0x100 DUP4 ADD MSTORE DUP6 PUSH2 0x120 DUP4 ADD MSTORE DUP5 PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x1235 PUSH2 0x160 DUP4 ADD DUP6 PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xFF DUP4 AND PUSH2 0x180 DUP4 ADD MSTORE SWAP15 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1274 DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1284 DUP2 PUSH2 0xCFA JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x12AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109C DUP9 DUP3 DUP10 ADD PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCAB DUP2 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x135A JUMPI PUSH2 0x135A PUSH2 0x1332 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x13B3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x13D2 JUMPI PUSH2 0x13D2 PUSH2 0x1332 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x13EA JUMPI PUSH2 0x13EA PUSH2 0x1332 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 PUSH11 0x12006CFB609FFB5D934D60 0xC6 PUSH11 0xB1C2B6DD904D4FA03FBD31 CODECOPY MSIZE 0xEB SWAP10 0x28 0xB2 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "140:5907:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:4;;;;;;:::i;:::-;;:::i;:::-;;;470:14:15;;463:22;445:41;;433:2;418:18;387:221:4;;;;;;;;2056:36:12;;;;;-1:-1:-1;;;;;2056:36:12;;;;;;-1:-1:-1;;;;;661:32:15;;;643:51;;631:2;616:18;2056:36:12;497:203:15;588:200:8;;;;;;:::i;:::-;-1:-1:-1;;;588:200:8;;;;;;;;;;-1:-1:-1;;;;;;2620:33:15;;;2602:52;;2590:2;2575:18;588:200:8;2458:202:15;4294:56:12;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;4294:56:12;;;625:705:13;;;;;;:::i;:::-;;:::i;:::-;;2098:36:12;;;;;-1:-1:-1;;;;;2098:36:12;;;1427:887:13;;;;;;:::i;:::-;;:::i;2221:23:12:-;;;;;;;;;7089:25:15;;;7077:2;7062:18;2221:23:12;6943:177:15;1668:101:0;;;:::i;5823:221:12:-;;;;;;:::i;:::-;;:::i;2140:33::-;;;;;-1:-1:-1;;;;;2140:33:12;;;2257:32;;;;;;5425:148;;;;;;:::i;:::-;;:::i;2341:29::-;;;;;;;;;;;;7785:10:15;7773:23;;;7755:42;;7743:2;7728:18;2341:29:12;7611:192:15;1036:85:0;;;:::i;2295:40:12:-;;;;;;5689:128;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2179:21::-;;;;;;724:247:3;;;;;;:::i;:::-;-1:-1:-1;;;724:247:3;;;;;;;;4131:37:12;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4131:37:12;;;;;;;;;;;;-1:-1:-1;;;4131:37:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4845:536::-;;;;;;:::i;:::-;;:::i;499:219:3:-;;;;;;:::i;:::-;-1:-1:-1;;;499:219:3;;;;;;;;1918:198:0;;;;;;:::i;:::-;;:::i;387:221:4:-;489:4;-1:-1:-1;;;;;;512:49:4;;-1:-1:-1;;;512:49:4;;:89;;-1:-1:-1;;;;;;;;;;937:40:10;;;565:36:4;505:96;387:221;-1:-1:-1;;387:221:4:o;625:705:13:-;-1:-1:-1;;;;;795:22:13;;;790:534;;839:100;;-1:-1:-1;;;839:100:13;;-1:-1:-1;;;;;839:29:13;;;;;:100;;884:4;;904:2;;923:4;;839:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;831:150;;;;-1:-1:-1;;;831:150:13;;12889:2:15;831:150:13;;;12871:21:15;12928:2;12908:18;;;12901:30;12967:34;12947:18;;;12940:62;-1:-1:-1;;;13018:18:15;;;13011:35;13063:19;;831:150:13;;;;;;;;;1008:8;-1:-1:-1;;;;;1001:29:13;;1046:4;1066:7;:5;:7::i;:::-;1090:4;1001:105;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;993:153;;;;-1:-1:-1;;;993:153:13;;13675:2:15;993:153:13;;;13657:21:15;13714:2;13694:18;;;13687:30;13753:34;13733:18;;;13726:62;-1:-1:-1;;;13804:18:15;;;13797:33;13847:19;;993:153:13;13473:399:15;993:153:13;790:534;;;1179:13;;-1:-1:-1;;;;;1179:7:13;;;:13;;;;;1187:4;;1179:13;;;;1187:4;1179:7;:13;;;;;;;1171:60;;;;-1:-1:-1;;;1171:60:13;;14079:2:15;1171:60:13;;;14061:21:15;14118:2;14098:18;;;14091:30;14157:34;14137:18;;;14130:62;-1:-1:-1;;;14208:18:15;;;14201:32;14250:19;;1171:60:13;13877:398:15;1171:60:13;1259:7;:5;:7::i;:::-;-1:-1:-1;;;;;1251:21:13;:27;1273:4;1251:27;;;;;;;;;;;;;;;;;;;;;;;1243:72;;;;-1:-1:-1;;;1243:72:13;;14482:2:15;1243:72:13;;;14464:21:15;;;14501:18;;;14494:30;14560:34;14540:18;;;14533:62;14612:18;;1243:72:13;14280:356:15;1243:72:13;625:705;;;;;:::o;1427:887::-;1661:22;;1711;;1701:32;;:70;;;;;1765:6;1737:17;:24;:34;1701:70;1693:115;;;;-1:-1:-1;;;1693:115:13;;14843:2:15;1693:115:13;;;14825:21:15;;;14862:18;;;14855:30;14921:34;14901:18;;;14894:62;14973:18;;1693:115:13;14641:356:15;1693:115:13;1822:9;1818:489;1841:6;1837:1;:10;1818:489;;;1872:17;1890:1;1872:20;;;;;;;;:::i;:::-;;;;;;;:25;;1896:1;1872:25;1867:440;;1924:15;1940:1;1924:18;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1916:44:13;;1982:4;2008:2;2032:15;2048:1;2032:18;;;;;;;;:::i;:::-;;;;;;;1916:152;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1867:440;;;2112:15;2128:1;2112:18;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2103:45:13;;2170:4;2196:2;2220:15;2236:1;2220:18;;;;;;;;:::i;:::-;;;;;;;2260:1;2103:204;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15493:15:15;;;15475:34;;15545:15;;;;15540:2;15525:18;;15518:43;15592:2;15577:18;;15570:34;15635:2;15620:18;;15613:34;;;;15455:3;15678;15663:19;;15656:32;;;15725:1;15704:19;;;15697:30;-1:-1:-1;;;15758:3:15;15743:19;;15736:35;15803:3;15788:19;;15134:679;2103:204:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1867:440;1849:3;;;:::i;:::-;;;1818:489;;;;1634:680;1427:887;;;;;:::o;1668:101:0:-;719:10:9;1248:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;5823:221:12:-;5894:7;5945:15;5921:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;5921:20:12;;;;:39;;;;;;;;:::i;:::-;;5913:78;;;;-1:-1:-1;;;5913:78:12;;16653:2:15;5913:78:12;;;16635:21:15;16692:2;16672:18;;;16665:30;-1:-1:-1;;;16711:18:15;;;16704:56;16777:18;;5913:78:12;16451:350:15;5913:78:12;-1:-1:-1;6008:29:12;;;;:21;:29;;;;;;-1:-1:-1;;;;;6008:29:12;;5823:221::o;5425:148::-;5546:3;;5526:17;5540:3;5526:11;:17;:::i;:::-;:23;;;;:::i;:::-;5513:9;:36;;5505:61;;;;-1:-1:-1;;;5505:61:12;;17403:2:15;5505:61:12;;;17385:21:15;17442:2;17422:18;;;17415:30;-1:-1:-1;;;17461:18:15;;;17454:42;17513:18;;5505:61:12;17201:336:15;5505:61:12;5425:148;;:::o;1036:85:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;;1036:85::o;5689:128:12:-;5752:17;;:::i;:::-;5788:13;;;;:5;:13;;;;;;;;;5781:29;;;;;;;;;;5788:22;;;5781:29;;5788:22;5781:29;;;;;;;;;;;;;;;;;;;;;;;;5689:128;;;:::o;4845:536::-;4906:4;4954:15;4930:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4930:20:12;;;;:39;;;;;;;;:::i;:::-;;:84;;;-1:-1:-1;4997:17:12;4973:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4973:20:12;;;;:41;;;;;;;;:::i;:::-;;4930:84;4922:121;;;;-1:-1:-1;;;4922:121:12;;17744:2:15;4922:121:12;;;17726:21:15;17783:2;17763:18;;;17756:30;-1:-1:-1;;;17802:18:15;;;17795:54;17866:18;;4922:121:12;17542:348:15;4922:121:12;5348:13;;;;:5;:13;;;;;:25;;;5328:46;;5332:15;;5328:3;:46::i;:::-;5295:13;;;;:5;:13;;;;;:29;;;;5263;;;;;:61;;5295:29;5263;;;;;:61;:::i;:::-;5229:13;;;;:5;:13;;;;;:29;;;;5200:26;;;;;:58;;5229:29;5200:58;:::i;:::-;5172:13;;;;:5;:13;;;;;;;:22;:25;;:86;;;;:::i;:::-;5170:154;;;;:::i;:::-;:204;;;4845:536;-1:-1:-1;;4845:536:12:o;1918:198:0:-;719:10:9;1248:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;18230:2:15;1998:73:0::1;::::0;::::1;18212:21:15::0;18269:2;18249:18;;;18242:30;18308:34;18288:18;;;18281:62;-1:-1:-1;;;18359:18:15;;;18352:36;18405:19;;1998:73:0::1;18028:402:15::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;5580:103:12:-;5637:7;5667:1;5663;:5;:13;;5675:1;5663:13;;;5671:1;5663:13;5656:20;5580:103;-1:-1:-1;;;5580:103:12:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:15:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:15;;209:43;;199:71;;266:1;263;256:12;705:131;-1:-1:-1;;;;;780:31:15;;770:42;;760:70;;826:1;823;816:12;841:127;902:10;897:3;893:20;890:1;883:31;933:4;930:1;923:15;957:4;954:1;947:15;973:275;1044:2;1038:9;1109:2;1090:13;;-1:-1:-1;;1086:27:15;1074:40;;-1:-1:-1;;;;;1129:34:15;;1165:22;;;1126:62;1123:88;;;1191:18;;:::i;:::-;1227:2;1220:22;973:275;;-1:-1:-1;973:275:15:o;1253:530::-;1295:5;1348:3;1341:4;1333:6;1329:17;1325:27;1315:55;;1366:1;1363;1356:12;1315:55;1389:20;;-1:-1:-1;;;;;1421:26:15;;1418:52;;;1450:18;;:::i;:::-;1494:55;1537:2;1518:13;;-1:-1:-1;;1514:27:15;1543:4;1510:38;1494:55;:::i;:::-;1574:2;1565:7;1558:19;1620:3;1613:4;1608:2;1600:6;1596:15;1592:26;1589:35;1586:55;;;1637:1;1634;1627:12;1586:55;1702:2;1695:4;1687:6;1683:17;1676:4;1667:7;1663:18;1650:55;1750:1;1725:16;;;1743:4;1721:27;1714:38;;;;1729:7;1253:530;-1:-1:-1;;;1253:530:15:o;1788:665::-;1883:6;1891;1899;1907;1960:3;1948:9;1939:7;1935:23;1931:33;1928:53;;;1977:1;1974;1967:12;1928:53;2016:9;2003:23;2035:31;2060:5;2035:31;:::i;:::-;2085:5;-1:-1:-1;2142:2:15;2127:18;;2114:32;2155:33;2114:32;2155:33;:::i;:::-;2207:7;-1:-1:-1;2261:2:15;2246:18;;2233:32;;-1:-1:-1;2316:2:15;2301:18;;2288:32;-1:-1:-1;;;;;2332:30:15;;2329:50;;;2375:1;2372;2365:12;2329:50;2398:49;2439:7;2430:6;2419:9;2415:22;2398:49;:::i;:::-;2388:59;;;1788:665;;;;;;;:::o;2665:180::-;2724:6;2777:2;2765:9;2756:7;2752:23;2748:32;2745:52;;;2793:1;2790;2783:12;2745:52;-1:-1:-1;2816:23:15;;2665:180;-1:-1:-1;2665:180:15:o;2850:675::-;2953:6;2961;2969;2977;2985;3038:3;3026:9;3017:7;3013:23;3009:33;3006:53;;;3055:1;3052;3045:12;3006:53;3094:9;3081:23;3113:31;3138:5;3113:31;:::i;:::-;3163:5;-1:-1:-1;3220:2:15;3205:18;;3192:32;3233:33;3192:32;3233:33;:::i;:::-;3285:7;-1:-1:-1;3344:2:15;3329:18;;3316:32;3357:33;3316:32;3357:33;:::i;:::-;2850:675;;;;-1:-1:-1;3409:7:15;;3463:2;3448:18;;3435:32;;-1:-1:-1;3514:3:15;3499:19;3486:33;;2850:675;-1:-1:-1;;2850:675:15:o;3530:183::-;3590:4;-1:-1:-1;;;;;3612:30:15;;3609:56;;;3645:18;;:::i;:::-;-1:-1:-1;3690:1:15;3686:14;3702:4;3682:25;;3530:183::o;3718:662::-;3772:5;3825:3;3818:4;3810:6;3806:17;3802:27;3792:55;;3843:1;3840;3833:12;3792:55;3879:6;3866:20;3905:4;3929:60;3945:43;3985:2;3945:43;:::i;:::-;3929:60;:::i;:::-;4023:15;;;4109:1;4105:10;;;;4093:23;;4089:32;;;4054:12;;;;4133:15;;;4130:35;;;4161:1;4158;4151:12;4130:35;4197:2;4189:6;4185:15;4209:142;4225:6;4220:3;4217:15;4209:142;;;4291:17;;4279:30;;4329:12;;;;4242;;4209:142;;;-1:-1:-1;4369:5:15;3718:662;-1:-1:-1;;;;;;3718:662:15:o;4385:829::-;4437:5;4490:3;4483:4;4475:6;4471:17;4467:27;4457:55;;4508:1;4505;4498:12;4457:55;4544:6;4531:20;4570:4;4594:60;4610:43;4650:2;4610:43;:::i;4594:60::-;4688:15;;;4774:1;4770:10;;;;4758:23;;4754:32;;;4719:12;;;;4798:15;;;4795:35;;;4826:1;4823;4816:12;4795:35;4862:2;4854:6;4850:15;4874:311;4890:6;4885:3;4882:15;4874:311;;;4970:3;4957:17;5018:4;5011:5;5007:16;5000:5;4997:27;4987:125;;5066:1;5095:2;5091;5084:14;4987:125;5125:18;;5163:12;;;;4907;;4874:311;;5219:1719;5387:6;5395;5403;5411;5419;5472:3;5460:9;5451:7;5447:23;5443:33;5440:53;;;5489:1;5486;5479:12;5440:53;5528:9;5515:23;5547:31;5572:5;5547:31;:::i;:::-;5597:5;-1:-1:-1;5621:2:15;5660:18;;;5647:32;5688:33;5647:32;5688:33;:::i;:::-;5740:7;-1:-1:-1;5798:2:15;5783:18;;5770:32;-1:-1:-1;;;;;5851:14:15;;;5848:34;;;5878:1;5875;5868:12;5848:34;5916:6;5905:9;5901:22;5891:32;;5961:7;5954:4;5950:2;5946:13;5942:27;5932:55;;5983:1;5980;5973:12;5932:55;6019:2;6006:16;6042:60;6058:43;6098:2;6058:43;:::i;6042:60::-;6136:15;;;6218:1;6214:10;;;;6206:19;;6202:28;;;6167:12;;;;6242:19;;;6239:39;;;6274:1;6271;6264:12;6239:39;6298:11;;;;6318:223;6334:6;6329:3;6326:15;6318:223;;;6416:3;6403:17;6433:33;6458:7;6433:33;:::i;:::-;6479:20;;6351:12;;;;6519;;;;6318:223;;;6560:5;-1:-1:-1;;;6618:2:15;6603:18;;6590:32;;-1:-1:-1;6634:16:15;;;6631:36;;;6663:1;6660;6653:12;6631:36;6686:63;6741:7;6730:8;6719:9;6715:24;6686:63;:::i;:::-;6676:73;;6802:3;6791:9;6787:19;6774:33;6758:49;;6832:2;6822:8;6819:16;6816:36;;;6848:1;6845;6838:12;6816:36;;;6871:61;6924:7;6913:8;6902:9;6898:24;6871:61;:::i;:::-;6861:71;;;5219:1719;;;;;;;;:::o;7358:248::-;7426:6;7434;7487:2;7475:9;7466:7;7462:23;7458:32;7455:52;;;7503:1;7500;7493:12;7455:52;-1:-1:-1;;7526:23:15;;;7596:2;7581:18;;;7568:32;;-1:-1:-1;7358:248:15:o;7808:494::-;7988:2;7973:18;;7977:9;8068:6;7946:4;8102:194;8116:4;8113:1;8110:11;8102:194;;;8175:13;;8163:26;;8212:4;8236:12;;;;8271:15;;;;8136:1;8129:9;8102:194;;;8106:3;;;7808:494;;;;:::o;8307:1071::-;8461:6;8469;8477;8485;8493;8546:3;8534:9;8525:7;8521:23;8517:33;8514:53;;;8563:1;8560;8553:12;8514:53;8602:9;8589:23;8621:31;8646:5;8621:31;:::i;:::-;8671:5;-1:-1:-1;8728:2:15;8713:18;;8700:32;8741:33;8700:32;8741:33;:::i;:::-;8793:7;-1:-1:-1;8851:2:15;8836:18;;8823:32;-1:-1:-1;;;;;8904:14:15;;;8901:34;;;8931:1;8928;8921:12;8901:34;8954:61;9007:7;8998:6;8987:9;8983:22;8954:61;:::i;:::-;8944:71;;9068:2;9057:9;9053:18;9040:32;9024:48;;9097:2;9087:8;9084:16;9081:36;;;9113:1;9110;9103:12;9081:36;9136:63;9191:7;9180:8;9169:9;9165:24;9136:63;:::i;:::-;9126:73;;9252:3;9241:9;9237:19;9224:33;9208:49;;9282:2;9272:8;9269:16;9266:36;;;9298:1;9295;9288:12;9266:36;;9321:51;9364:7;9353:8;9342:9;9338:24;9321:51;:::i;9383:127::-;9444:10;9439:3;9435:20;9432:1;9425:31;9475:4;9472:1;9465:15;9499:4;9496:1;9489:15;9690:1331;-1:-1:-1;;;;;10228:32:15;;;10210:51;;10297:32;;;10292:2;10277:18;;10270:60;10366:32;;10361:2;10346:18;;10339:60;10197:3;10182:19;;10429:1;10418:13;;10408:144;;10474:10;10469:3;10465:20;10462:1;10455:31;10509:4;10506:1;10499:15;10537:4;10534:1;10527:15;10408:144;10588:6;10583:2;10572:9;10568:18;10561:34;10632:6;10626:3;10615:9;10611:19;10604:35;10676:6;10670:3;10659:9;10655:19;10648:35;10720:6;10714:3;10703:9;10699:19;10692:35;10764:6;10758:3;10747:9;10743:19;10736:35;10808:6;10802:3;10791:9;10787:19;10780:35;10852:6;10846:3;10835:9;10831:19;10824:35;10896:7;10890:3;10879:9;10875:19;10868:36;10913:47;10955:3;10944:9;10940:19;10931:7;9591:6;9580:18;9568:31;;9515:90;10913:47;9677:4;9666:16;;11010:3;10995:19;;9654:29;9690:1331;;;;;;;;;;;;;;;;:::o;11026:734::-;11130:6;11138;11146;11154;11162;11215:3;11203:9;11194:7;11190:23;11186:33;11183:53;;;11232:1;11229;11222:12;11183:53;11271:9;11258:23;11290:31;11315:5;11290:31;:::i;:::-;11340:5;-1:-1:-1;11397:2:15;11382:18;;11369:32;11410:33;11369:32;11410:33;:::i;:::-;11462:7;-1:-1:-1;11516:2:15;11501:18;;11488:32;;-1:-1:-1;11567:2:15;11552:18;;11539:32;;-1:-1:-1;11622:3:15;11607:19;;11594:33;-1:-1:-1;;;;;11639:30:15;;11636:50;;;11682:1;11679;11672:12;11636:50;11705:49;11746:7;11737:6;11726:9;11722:22;11705:49;:::i;11765:247::-;11824:6;11877:2;11865:9;11856:7;11852:23;11848:32;11845:52;;;11893:1;11890;11883:12;11845:52;11932:9;11919:23;11951:31;11976:5;11951:31;:::i;12017:383::-;-1:-1:-1;;;;;12283:15:15;;;12265:34;;12335:15;;;;12330:2;12315:18;;12308:43;12382:2;12367:18;;12360:34;;;;12215:2;12200:18;;12017:383::o;12405:277::-;12472:6;12525:2;12513:9;12504:7;12500:23;12496:32;12493:52;;;12541:1;12538;12531:12;12493:52;12573:9;12567:16;12626:5;12619:13;12612:21;12605:5;12602:32;12592:60;;12648:1;12645;12638:12;15002:127;15063:10;15058:3;15054:20;15051:1;15044:31;15094:4;15091:1;15084:15;15118:4;15115:1;15108:15;15818:127;15879:10;15874:3;15870:20;15867:1;15860:31;15910:4;15907:1;15900:15;15934:4;15931:1;15924:15;15950:135;15989:3;16010:17;;;16007:43;;16030:18;;:::i;:::-;-1:-1:-1;16077:1:15;16066:13;;15950:135::o;16090:356::-;16292:2;16274:21;;;16311:18;;;16304:30;16370:34;16365:2;16350:18;;16343:62;16437:2;16422:18;;16090:356::o;16806:217::-;16846:1;16872;16862:132;;16916:10;16911:3;16907:20;16904:1;16897:31;16951:4;16948:1;16941:15;16979:4;16976:1;16969:15;16862:132;-1:-1:-1;17008:9:15;;16806:217::o;17028:168::-;17068:7;17134:1;17130;17126:6;17122:14;17119:1;17116:21;17111:1;17104:9;17097:17;17093:45;17090:71;;;17141:18;;:::i;:::-;-1:-1:-1;17181:9:15;;17028:168::o;17895:128::-;17935:3;17966:1;17962:6;17959:1;17956:13;17953:39;;;17972:18;;:::i;:::-;-1:-1:-1;18008:9:15;;17895:128::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1031400",
								"executionCost": "139563",
								"totalCost": "1170963"
							},
							"external": {
								"canBeTerminated(uint256)": "infinite",
								"checkLtv(uint256,uint256)": "2877",
								"discounts()": "2535",
								"getLoanStartEnd(uint256)": "infinite",
								"getPromissoryPermission(uint256)": "4914",
								"id()": "2647",
								"interestRate()": "2515",
								"interestRateToStater()": "2603",
								"lenderFee()": "2577",
								"lendingMethodsAddress()": "2425",
								"loans(uint256)": "24438",
								"ltv()": "2427",
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "2632",
								"promissoryNoteAddress()": "2337",
								"promissoryPermissions(uint256)": "2521",
								"renounceOwnership()": "28313",
								"supportsInterface(bytes4)": "404",
								"transferItems(address,address,address[],uint256[],uint8[])": "infinite",
								"transferOwnership(address)": "infinite",
								"transferTokens(address,address,address,uint256,uint256)": "infinite"
							},
							"internal": {
								"min(uint256,uint256)": "61"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 140,
									"end": 6047,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2199,
									"end": 2200,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2179,
									"end": 2200,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 2179,
									"end": 2200,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2242,
									"end": 2244,
									"name": "PUSH",
									"source": 12,
									"value": "3C"
								},
								{
									"begin": 2221,
									"end": 2244,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 2221,
									"end": 2244,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2287,
									"end": 2289,
									"name": "PUSH",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 2257,
									"end": 2289,
									"name": "PUSH",
									"source": 12,
									"value": "6"
								},
								{
									"begin": 2257,
									"end": 2289,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2333,
									"end": 2335,
									"name": "PUSH",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 2295,
									"end": 2335,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 2295,
									"end": 2335,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2341,
									"end": 2370,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 2341,
									"end": 2370,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2341,
									"end": 2370,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFFFFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2341,
									"end": 2370,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2367,
									"end": 2370,
									"name": "PUSH",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 2341,
									"end": 2370,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2341,
									"end": 2370,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2341,
									"end": 2370,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 6047,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220886a12006cfb609ffb5d934d60c66ab1c2b6dd904d4fa03fbd313959eb9928b264736f6c634300080e0033",
									".code": [
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "13C75B5B"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "150B7A02"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "24C93FE5"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "2E3F4A5D"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "38DAA789"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "407299D7"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "6FB49D73"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "756DB756"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "75AF65D1"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "7C3A00FD"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "87715588"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "8CA83F07"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "8F829275"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "9E1D7A1E"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "AF640D0F"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "BC197C81"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "E1EC3C68"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "E70C7446"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "F23A6E61"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 140,
											"end": 6047,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2092,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2056,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2056,
											"end": 2092,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2056,
											"end": 2092,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2056,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 2056,
											"end": 2092,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2056,
											"end": 2092,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2056,
											"end": 2092,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2056,
											"end": 2092,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2056,
											"end": 2092,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 2056,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2056,
											"end": 2092,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2092,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 661,
											"end": 693,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 661,
											"end": 693,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 661,
											"end": 693,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 643,
											"end": 694,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 643,
											"end": 694,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2056,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2620,
											"end": 2653,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2620,
											"end": 2653,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2620,
											"end": 2653,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2602,
											"end": 2654,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2602,
											"end": 2654,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2590,
											"end": 2592,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2458,
											"end": 2660,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4294,
											"end": 4350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4294,
											"end": 4350,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 625,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 625,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2098,
											"end": 2134,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 2098,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2134,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 2098,
											"end": 2134,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 2098,
											"end": 2134,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2134,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2134,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2134,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1427,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1427,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2221,
											"end": 2244,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 2221,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2221,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 2221,
											"end": 2244,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2221,
											"end": 2244,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2221,
											"end": 2244,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2221,
											"end": 2244,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2221,
											"end": 2244,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 2221,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2221,
											"end": 2244,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2221,
											"end": 2244,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7089,
											"end": 7114,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7089,
											"end": 7114,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7089,
											"end": 7114,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7077,
											"end": 7079,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7062,
											"end": 7080,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2221,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 6943,
											"end": 7120,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5823,
											"end": 6044,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 5823,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5823,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 5823,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 5823,
											"end": 6044,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5823,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5823,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5823,
											"end": 6044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5823,
											"end": 6044,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 5823,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5823,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 5823,
											"end": 6044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2257,
											"end": 2289,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 2257,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2257,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 2257,
											"end": 2289,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 2257,
											"end": 2289,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2257,
											"end": 2289,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2257,
											"end": 2289,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5425,
											"end": 5573,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 5425,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5425,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 5425,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 5425,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5425,
											"end": 5573,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5425,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 5425,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5425,
											"end": 5573,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 5425,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5425,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 5425,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7785,
											"end": 7795,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7773,
											"end": 7796,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7773,
											"end": 7796,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7773,
											"end": 7796,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7755,
											"end": 7797,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7755,
											"end": 7797,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7743,
											"end": 7745,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7728,
											"end": 7746,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2341,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 7611,
											"end": 7803,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1036,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2335,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 2295,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2295,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 2295,
											"end": 2335,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2295,
											"end": 2335,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2295,
											"end": 2335,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2295,
											"end": 2335,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5689,
											"end": 5817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 5689,
											"end": 5817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 5689,
											"end": 5817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2179,
											"end": 2200,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2179,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2179,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 2179,
											"end": 2200,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2179,
											"end": 2200,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2179,
											"end": 2200,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2179,
											"end": 2200,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4131,
											"end": 4168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP11",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP11",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "10000"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP14",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP13",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP12",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP11",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 4131,
											"end": 4168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 5381,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 4845,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 4845,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 4845,
											"end": 5381,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 5381,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4845,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4845,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 5381,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 4845,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 4845,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 512,
											"end": 561,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2711897"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 512,
											"end": 561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 795,
											"end": 817,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 795,
											"end": 817,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 795,
											"end": 817,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 790,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 790,
											"end": 1324,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 839,
											"end": 868,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 839,
											"end": 868,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 839,
											"end": 868,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 839,
											"end": 868,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 839,
											"end": 868,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 884,
											"end": 888,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 884,
											"end": 888,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 904,
											"end": 906,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 904,
											"end": 906,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 923,
											"end": 927,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 923,
											"end": 927,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 839,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 839,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 831,
											"end": 981,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12889,
											"end": 12891,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12871,
											"end": 12892,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12928,
											"end": 12930,
											"name": "PUSH",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 12908,
											"end": 12926,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12908,
											"end": 12926,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12908,
											"end": 12926,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12901,
											"end": 12931,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12967,
											"end": 13001,
											"name": "PUSH",
											"source": 15,
											"value": "5472616E73666572206F6620746F6B656E7320746F2072656365697665722066"
										},
										{
											"begin": 12947,
											"end": 12965,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 12947,
											"end": 12965,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12947,
											"end": 12965,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12940,
											"end": 13002,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13018,
											"end": 13036,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 13018,
											"end": 13036,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13018,
											"end": 13036,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13011,
											"end": 13046,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13063,
											"end": 13082,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 13063,
											"end": 13082,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 831,
											"end": 981,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1008,
											"end": 1016,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1001,
											"end": 1030,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1030,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 1046,
											"end": 1050,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1066,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 1066,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1066,
											"end": 1073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1066,
											"end": 1073,
											"name": "tag",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 1066,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1090,
											"end": 1094,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 1001,
											"end": 1106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 1001,
											"end": 1106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13675,
											"end": 13677,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13657,
											"end": 13678,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13714,
											"end": 13716,
											"name": "PUSH",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 13694,
											"end": 13712,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 13694,
											"end": 13712,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13694,
											"end": 13712,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13687,
											"end": 13717,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13753,
											"end": 13787,
											"name": "PUSH",
											"source": 15,
											"value": "5472616E73666572206F6620746F6B656E7320746F2053746174657220666169"
										},
										{
											"begin": 13733,
											"end": 13751,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 13733,
											"end": 13751,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13733,
											"end": 13751,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13726,
											"end": 13788,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13804,
											"end": 13822,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 13804,
											"end": 13822,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13804,
											"end": 13822,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13797,
											"end": 13830,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13847,
											"end": 13866,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 13847,
											"end": 13866,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 13473,
											"end": 13872,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 790,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 790,
											"end": 1324,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 790,
											"end": 1324,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 790,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1179,
											"end": 1186,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1186,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1186,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "PUSH",
											"source": 13,
											"value": "8FC"
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1191,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1191,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1191,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1186,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14079,
											"end": 14081,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14061,
											"end": 14082,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14118,
											"end": 14120,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 14098,
											"end": 14116,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 14098,
											"end": 14116,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14098,
											"end": 14116,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14091,
											"end": 14121,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14157,
											"end": 14191,
											"name": "PUSH",
											"source": 15,
											"value": "5472616E73666572206F662045544820746F207265636569766572206661696C"
										},
										{
											"begin": 14137,
											"end": 14155,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 14137,
											"end": 14155,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14137,
											"end": 14155,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14130,
											"end": 14192,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14208,
											"end": 14226,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 14208,
											"end": 14226,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14208,
											"end": 14226,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14201,
											"end": 14233,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14250,
											"end": 14269,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 14250,
											"end": 14269,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 13877,
											"end": 14275,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1259,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 1259,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1259,
											"end": 1266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1259,
											"end": 1266,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 1259,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1251,
											"end": 1272,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "PUSH",
											"source": 13,
											"value": "8FC"
										},
										{
											"begin": 1273,
											"end": 1277,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14482,
											"end": 14484,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14464,
											"end": 14485,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14464,
											"end": 14485,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14464,
											"end": 14485,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14501,
											"end": 14519,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 14501,
											"end": 14519,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14501,
											"end": 14519,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14494,
											"end": 14524,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14560,
											"end": 14594,
											"name": "PUSH",
											"source": 15,
											"value": "5472616E73666572206F662045544820746F20537461746572206661696C6564"
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14540,
											"end": 14558,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14533,
											"end": 14595,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14612,
											"end": 14630,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 14612,
											"end": 14630,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 14280,
											"end": 14636,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1683,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1683,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1711,
											"end": 1733,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1711,
											"end": 1733,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1701,
											"end": 1733,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1701,
											"end": 1733,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1771,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1737,
											"end": 1754,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1737,
											"end": 1761,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1737,
											"end": 1771,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14843,
											"end": 14845,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14825,
											"end": 14846,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14825,
											"end": 14846,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14825,
											"end": 14846,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14862,
											"end": 14880,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 14862,
											"end": 14880,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14862,
											"end": 14880,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14855,
											"end": 14885,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14921,
											"end": 14955,
											"name": "PUSH",
											"source": 15,
											"value": "546F6B656E20696E666F732070726F76696465642061726520696E76616C6964"
										},
										{
											"begin": 14901,
											"end": 14919,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 14901,
											"end": 14919,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14901,
											"end": 14919,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14894,
											"end": 14956,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14973,
											"end": 14991,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 14973,
											"end": 14991,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 14641,
											"end": 14997,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1822,
											"end": 1831,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1841,
											"end": 1847,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1837,
											"end": 1838,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1837,
											"end": 1847,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1889,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1890,
											"end": 1891,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 1872,
											"end": 1892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1939,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 1924,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1916,
											"end": 1960,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 1960,
											"name": "PUSH",
											"source": 13,
											"value": "42842E0E"
										},
										{
											"begin": 1982,
											"end": 1986,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2008,
											"end": 2010,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2048,
											"end": 2049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 2032,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 1916,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2127,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 2112,
											"end": 2130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "PUSH",
											"source": 13,
											"value": "F242432A"
										},
										{
											"begin": 2170,
											"end": 2174,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2196,
											"end": 2198,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 2220,
											"end": 2238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2260,
											"end": 2261,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15493,
											"end": 15508,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 15493,
											"end": 15508,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15493,
											"end": 15508,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 15475,
											"end": 15509,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15475,
											"end": 15509,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15545,
											"end": 15560,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15545,
											"end": 15560,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15545,
											"end": 15560,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 15545,
											"end": 15560,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 15540,
											"end": 15542,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15525,
											"end": 15543,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15525,
											"end": 15543,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15518,
											"end": 15561,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15592,
											"end": 15594,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 15577,
											"end": 15595,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15577,
											"end": 15595,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15570,
											"end": 15604,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15635,
											"end": 15637,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 15620,
											"end": 15638,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15620,
											"end": 15638,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15613,
											"end": 15647,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15613,
											"end": 15647,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15613,
											"end": 15647,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15613,
											"end": 15647,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15455,
											"end": 15458,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 15678,
											"end": 15681,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 15663,
											"end": 15682,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15663,
											"end": 15682,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15656,
											"end": 15688,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15656,
											"end": 15688,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15656,
											"end": 15688,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15725,
											"end": 15726,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 15704,
											"end": 15723,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15704,
											"end": 15723,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15704,
											"end": 15723,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15697,
											"end": 15727,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3078303"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15758,
											"end": 15761,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 15743,
											"end": 15762,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15743,
											"end": 15762,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15736,
											"end": 15771,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15803,
											"end": 15806,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 15788,
											"end": 15807,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15788,
											"end": 15807,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15134,
											"end": 15813,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 1849,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1634,
											"end": 2314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1759,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1732,
											"end": 1762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5823,
											"end": 6044,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 5823,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5894,
											"end": 5901,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5945,
											"end": 5960,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5921,
											"end": 5934,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5921,
											"end": 5934,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5921,
											"end": 5934,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5921,
											"end": 5934,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5921,
											"end": 5926,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 5921,
											"end": 5934,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5921,
											"end": 5934,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5921,
											"end": 5934,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5921,
											"end": 5934,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5921,
											"end": 5934,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5921,
											"end": 5960,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5921,
											"end": 5960,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5921,
											"end": 5960,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5921,
											"end": 5960,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5921,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 5921,
											"end": 5960,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5921,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 5921,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 5921,
											"end": 5960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5921,
											"end": 5960,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 5921,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5921,
											"end": 5960,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5913,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 5913,
											"end": 5991,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5913,
											"end": 5991,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5913,
											"end": 5991,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5913,
											"end": 5991,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5913,
											"end": 5991,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16653,
											"end": 16655,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5913,
											"end": 5991,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5913,
											"end": 5991,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5913,
											"end": 5991,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16635,
											"end": 16656,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16692,
											"end": 16694,
											"name": "PUSH",
											"source": 15,
											"value": "1A"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16665,
											"end": 16695,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "131BD85B881A5CC81B9BC81B1BDB99D95C88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16711,
											"end": 16729,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 16711,
											"end": 16729,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16711,
											"end": 16729,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16777,
											"end": 16795,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 16777,
											"end": 16795,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5913,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 16451,
											"end": 16801,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5913,
											"end": 5991,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 5913,
											"end": 5991,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6008,
											"end": 6037,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6037,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6037,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6029,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 6008,
											"end": 6037,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6008,
											"end": 6037,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6037,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6008,
											"end": 6037,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6037,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6037,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6037,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6037,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5823,
											"end": 6044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5425,
											"end": 5573,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 5425,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5549,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 5546,
											"end": 5549,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5526,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 5540,
											"end": 5543,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5526,
											"end": 5537,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5526,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 5526,
											"end": 5543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5526,
											"end": 5543,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 5526,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5526,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 5526,
											"end": 5549,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5526,
											"end": 5549,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5526,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 5526,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5526,
											"end": 5549,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 5526,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5513,
											"end": 5549,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5513,
											"end": 5549,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 5505,
											"end": 5566,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5566,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5505,
											"end": 5566,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5505,
											"end": 5566,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5566,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17403,
											"end": 17405,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5505,
											"end": 5566,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5505,
											"end": 5566,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5566,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17385,
											"end": 17406,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17442,
											"end": 17444,
											"name": "PUSH",
											"source": 15,
											"value": "C"
										},
										{
											"begin": 17422,
											"end": 17440,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 17422,
											"end": 17440,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17422,
											"end": 17440,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17415,
											"end": 17445,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98A8AC40E8DEDE40D0D2CED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17461,
											"end": 17479,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 17461,
											"end": 17479,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17461,
											"end": 17479,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17454,
											"end": 17496,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17513,
											"end": 17531,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 17513,
											"end": 17531,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5505,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 17201,
											"end": 17537,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5505,
											"end": 5566,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 5505,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5425,
											"end": 5573,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5425,
											"end": 5573,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5425,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5752,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 5752,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 5752,
											"end": 5769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5752,
											"end": 5769,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 5752,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5788,
											"end": 5801,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 5801,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5788,
											"end": 5801,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5788,
											"end": 5801,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5788,
											"end": 5793,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 5788,
											"end": 5801,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5788,
											"end": 5801,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5788,
											"end": 5801,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5788,
											"end": 5801,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5788,
											"end": 5801,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5788,
											"end": 5801,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5788,
											"end": 5801,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5788,
											"end": 5801,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5788,
											"end": 5801,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5788,
											"end": 5810,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5788,
											"end": 5810,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5788,
											"end": 5810,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5788,
											"end": 5810,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5810,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5689,
											"end": 5817,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5689,
											"end": 5817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 5381,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 4845,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4906,
											"end": 4910,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4954,
											"end": 4969,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4930,
											"end": 4943,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4930,
											"end": 4943,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4943,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4943,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4935,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 4930,
											"end": 4943,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4930,
											"end": 4943,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4943,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4930,
											"end": 4943,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4943,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4950,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 4930,
											"end": 4950,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4950,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4930,
											"end": 4950,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4950,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4950,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4930,
											"end": 4950,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4969,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4930,
											"end": 4969,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4969,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4969,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 4930,
											"end": 4969,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 4930,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 4930,
											"end": 4969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4969,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 4930,
											"end": 4969,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 4969,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 5014,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 4930,
											"end": 5014,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4997,
											"end": 5014,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4973,
											"end": 4986,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4973,
											"end": 4986,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 4986,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 4986,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 4978,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 4973,
											"end": 4986,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4973,
											"end": 4986,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 4986,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4973,
											"end": 4986,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 4986,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 4993,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 4973,
											"end": 4993,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 4993,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4973,
											"end": 4993,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 4993,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 4993,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4973,
											"end": 4993,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 5014,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4973,
											"end": 5014,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 5014,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 5014,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 4973,
											"end": 5014,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 4973,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 4973,
											"end": 5014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 5014,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 4973,
											"end": 5014,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 5014,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4930,
											"end": 5014,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 4930,
											"end": 5014,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4922,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 4922,
											"end": 5043,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4922,
											"end": 5043,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4922,
											"end": 5043,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4922,
											"end": 5043,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4922,
											"end": 5043,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17744,
											"end": 17746,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4922,
											"end": 5043,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4922,
											"end": 5043,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4922,
											"end": 5043,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17726,
											"end": 17747,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17783,
											"end": 17785,
											"name": "PUSH",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 17763,
											"end": 17781,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 17763,
											"end": 17781,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17763,
											"end": 17781,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17756,
											"end": 17786,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "131BD85B881A5CC81B9BDD081E595D08185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17802,
											"end": 17820,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 17802,
											"end": 17820,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17802,
											"end": 17820,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17795,
											"end": 17849,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17866,
											"end": 17884,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 17866,
											"end": 17884,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4922,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 17542,
											"end": 17890,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4922,
											"end": 5043,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 4922,
											"end": 5043,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5348,
											"end": 5361,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5348,
											"end": 5361,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5348,
											"end": 5361,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5348,
											"end": 5361,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5348,
											"end": 5353,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 5348,
											"end": 5361,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5348,
											"end": 5361,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5348,
											"end": 5361,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5348,
											"end": 5361,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5348,
											"end": 5361,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5348,
											"end": 5373,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 5348,
											"end": 5373,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5348,
											"end": 5373,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5328,
											"end": 5374,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 5328,
											"end": 5374,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5332,
											"end": 5347,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 5332,
											"end": 5347,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5328,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 5328,
											"end": 5374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5328,
											"end": 5374,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 5328,
											"end": 5374,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5295,
											"end": 5308,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5295,
											"end": 5308,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5295,
											"end": 5308,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5295,
											"end": 5308,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5295,
											"end": 5300,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 5295,
											"end": 5308,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5295,
											"end": 5308,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5295,
											"end": 5308,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5295,
											"end": 5308,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5295,
											"end": 5308,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5295,
											"end": 5324,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 5295,
											"end": 5324,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5295,
											"end": 5324,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5295,
											"end": 5324,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5292,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 5263,
											"end": 5292,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5292,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5292,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5292,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 5263,
											"end": 5324,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5295,
											"end": 5324,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5292,
											"name": "PUSH",
											"source": 12,
											"value": "10000"
										},
										{
											"begin": 5263,
											"end": 5292,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5292,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5292,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 5263,
											"end": 5292,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 5263,
											"end": 5324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5263,
											"end": 5324,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 5263,
											"end": 5324,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5242,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5229,
											"end": 5242,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5242,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5242,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5234,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 5229,
											"end": 5242,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5229,
											"end": 5242,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5242,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5229,
											"end": 5242,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5242,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5258,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 5229,
											"end": 5258,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5258,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5258,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5200,
											"end": 5226,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 5200,
											"end": 5226,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5200,
											"end": 5226,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5200,
											"end": 5226,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5200,
											"end": 5226,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5200,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 5200,
											"end": 5258,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5258,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5200,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 5200,
											"end": 5258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5200,
											"end": 5258,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 5200,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5172,
											"end": 5185,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5185,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5172,
											"end": 5185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5172,
											"end": 5185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5172,
											"end": 5177,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 5172,
											"end": 5185,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5172,
											"end": 5185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5172,
											"end": 5185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5172,
											"end": 5185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5172,
											"end": 5185,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5172,
											"end": 5185,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5172,
											"end": 5185,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5172,
											"end": 5194,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5172,
											"end": 5197,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5172,
											"end": 5197,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5172,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 5172,
											"end": 5258,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5172,
											"end": 5258,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5172,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 5172,
											"end": 5258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5172,
											"end": 5258,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 5172,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5170,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 5170,
											"end": 5324,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5170,
											"end": 5324,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5170,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 5170,
											"end": 5324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5170,
											"end": 5324,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 5170,
											"end": 5324,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5170,
											"end": 5374,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5170,
											"end": 5374,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5170,
											"end": 5374,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 5381,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4845,
											"end": 5381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18230,
											"end": 18232,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18212,
											"end": 18233,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18269,
											"end": 18271,
											"name": "PUSH",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 18249,
											"end": 18267,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 18249,
											"end": 18267,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18249,
											"end": 18267,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18242,
											"end": 18272,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18308,
											"end": 18342,
											"name": "PUSH",
											"source": 15,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 18288,
											"end": 18306,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 18288,
											"end": 18306,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18288,
											"end": 18306,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18281,
											"end": 18343,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18359,
											"end": 18377,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 18359,
											"end": 18377,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18359,
											"end": 18377,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18352,
											"end": 18388,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18405,
											"end": 18424,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 18405,
											"end": 18424,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 18028,
											"end": 18430,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2100,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2081,
											"end": 2109,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5683,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 5580,
											"end": 5683,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5637,
											"end": 5644,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5667,
											"end": 5668,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 5664,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 5668,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 5663,
											"end": 5676,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5675,
											"end": 5676,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 5663,
											"end": 5676,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 5676,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 5663,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5671,
											"end": 5672,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 5676,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 5663,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5656,
											"end": 5676,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5580,
											"end": 5683,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5580,
											"end": 5683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "216"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 705,
											"end": 836,
											"name": "tag",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 705,
											"end": 836,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 780,
											"end": 811,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 780,
											"end": 811,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 770,
											"end": 812,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 770,
											"end": 812,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 760,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 760,
											"end": 830,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 826,
											"end": 827,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 824,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 816,
											"end": 828,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 841,
											"end": 968,
											"name": "tag",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 841,
											"end": 968,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 902,
											"end": 912,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 897,
											"end": 900,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 893,
											"end": 913,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 914,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 933,
											"end": 937,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 930,
											"end": 931,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 923,
											"end": 938,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 957,
											"end": 961,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 954,
											"end": 955,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 962,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 973,
											"end": 1248,
											"name": "tag",
											"source": 15,
											"value": "266"
										},
										{
											"begin": 973,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1047,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1111,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1090,
											"end": 1103,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1090,
											"end": 1103,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1086,
											"end": 1113,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1074,
											"end": 1114,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1074,
											"end": 1114,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1129,
											"end": 1163,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1129,
											"end": 1163,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1165,
											"end": 1187,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1165,
											"end": 1187,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1165,
											"end": 1187,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1126,
											"end": 1188,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 1123,
											"end": 1211,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1123,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 1123,
											"end": 1211,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1191,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 1191,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 1191,
											"end": 1209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1191,
											"end": 1209,
											"name": "tag",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 1191,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1227,
											"end": 1229,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 973,
											"end": 1248,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 973,
											"end": 1248,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 973,
											"end": 1248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1253,
											"end": 1783,
											"name": "tag",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 1253,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1295,
											"end": 1300,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1341,
											"end": 1345,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1333,
											"end": 1339,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1329,
											"end": 1346,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1315,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 1315,
											"end": 1370,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1366,
											"end": 1367,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1363,
											"end": 1364,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1356,
											"end": 1368,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1315,
											"end": 1370,
											"name": "tag",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 1315,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1389,
											"end": 1409,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1389,
											"end": 1409,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1421,
											"end": 1447,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1421,
											"end": 1447,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1418,
											"end": 1470,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1418,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 1418,
											"end": 1470,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1450,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 1450,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 1450,
											"end": 1468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1450,
											"end": 1468,
											"name": "tag",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 1450,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1494,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 1537,
											"end": 1539,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1518,
											"end": 1531,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1531,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1541,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1543,
											"end": 1547,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1494,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "266"
										},
										{
											"begin": 1494,
											"end": 1549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1494,
											"end": 1549,
											"name": "tag",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 1494,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1574,
											"end": 1576,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1565,
											"end": 1572,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1558,
											"end": 1577,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1620,
											"end": 1623,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1613,
											"end": 1617,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1610,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1600,
											"end": 1606,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1596,
											"end": 1611,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1592,
											"end": 1618,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1589,
											"end": 1624,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1586,
											"end": 1641,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1586,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 1586,
											"end": 1641,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1638,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1635,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1627,
											"end": 1639,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1586,
											"end": 1641,
											"name": "tag",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 1586,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1702,
											"end": 1704,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1695,
											"end": 1699,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1683,
											"end": 1700,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1676,
											"end": 1680,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1667,
											"end": 1674,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1663,
											"end": 1681,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1650,
											"end": 1705,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1741,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 1741,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 1741,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1743,
											"end": 1747,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1714,
											"end": 1752,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1714,
											"end": 1752,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1714,
											"end": 1752,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1714,
											"end": 1752,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1729,
											"end": 1736,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1253,
											"end": 1783,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1253,
											"end": 1783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1788,
											"end": 2453,
											"name": "tag",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 1788,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1883,
											"end": 1889,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1897,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 1905,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1913,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1960,
											"end": 1963,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 1948,
											"end": 1957,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1939,
											"end": 1946,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1935,
											"end": 1958,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 1964,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1928,
											"end": 1981,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1928,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 1928,
											"end": 1981,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1977,
											"end": 1978,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1975,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1967,
											"end": 1979,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1928,
											"end": 1981,
											"name": "tag",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 1928,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2016,
											"end": 2025,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2003,
											"end": 2026,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2035,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 2060,
											"end": 2065,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2035,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 2035,
											"end": 2066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2035,
											"end": 2066,
											"name": "tag",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 2035,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2085,
											"end": 2090,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2114,
											"end": 2146,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2155,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 2114,
											"end": 2146,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2155,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 2155,
											"end": 2188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2155,
											"end": 2188,
											"name": "tag",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 2155,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2207,
											"end": 2214,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2261,
											"end": 2263,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2246,
											"end": 2264,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2246,
											"end": 2264,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2265,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2265,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2316,
											"end": 2318,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2288,
											"end": 2320,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2329,
											"end": 2379,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2329,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 2329,
											"end": 2379,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2373,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2365,
											"end": 2377,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2329,
											"end": 2379,
											"name": "tag",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 2329,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2398,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 2439,
											"end": 2446,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2419,
											"end": 2428,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 2415,
											"end": 2437,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2398,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 2398,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2398,
											"end": 2447,
											"name": "tag",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 2398,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2388,
											"end": 2447,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2388,
											"end": 2447,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2388,
											"end": 2447,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1788,
											"end": 2453,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1788,
											"end": 2453,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 1788,
											"end": 2453,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1788,
											"end": 2453,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 1788,
											"end": 2453,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1788,
											"end": 2453,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1788,
											"end": 2453,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1788,
											"end": 2453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2665,
											"end": 2845,
											"name": "tag",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 2665,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2724,
											"end": 2730,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2777,
											"end": 2779,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2765,
											"end": 2774,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2756,
											"end": 2763,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2752,
											"end": 2775,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2748,
											"end": 2780,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2745,
											"end": 2797,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2745,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 2745,
											"end": 2797,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2793,
											"end": 2794,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2783,
											"end": 2795,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2745,
											"end": 2797,
											"name": "tag",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 2745,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2816,
											"end": 2839,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2816,
											"end": 2839,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2665,
											"end": 2845,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2665,
											"end": 2845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2850,
											"end": 3525,
											"name": "tag",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 2850,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2953,
											"end": 2959,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2967,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2969,
											"end": 2975,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2977,
											"end": 2983,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3041,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 3026,
											"end": 3035,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3017,
											"end": 3024,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 3013,
											"end": 3036,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3009,
											"end": 3042,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3006,
											"end": 3059,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3006,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 3006,
											"end": 3059,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3006,
											"end": 3059,
											"name": "tag",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 3006,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3094,
											"end": 3103,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3081,
											"end": 3104,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3113,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 3138,
											"end": 3143,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3113,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 3113,
											"end": 3144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3113,
											"end": 3144,
											"name": "tag",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 3113,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3163,
											"end": 3168,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3220,
											"end": 3222,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3192,
											"end": 3224,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3233,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 3192,
											"end": 3224,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3233,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 3233,
											"end": 3266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3233,
											"end": 3266,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 3233,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3285,
											"end": 3292,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3344,
											"end": 3346,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3329,
											"end": 3347,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3329,
											"end": 3347,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3357,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3357,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 3357,
											"end": 3390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3357,
											"end": 3390,
											"name": "tag",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 3357,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2850,
											"end": 3525,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2850,
											"end": 3525,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 2850,
											"end": 3525,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2850,
											"end": 3525,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3409,
											"end": 3416,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3409,
											"end": 3416,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3463,
											"end": 3465,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3448,
											"end": 3466,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3448,
											"end": 3466,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3435,
											"end": 3467,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3435,
											"end": 3467,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3514,
											"end": 3517,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3499,
											"end": 3518,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3486,
											"end": 3519,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3486,
											"end": 3519,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2850,
											"end": 3525,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2850,
											"end": 3525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3530,
											"end": 3713,
											"name": "tag",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 3530,
											"end": 3713,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3590,
											"end": 3594,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3609,
											"end": 3665,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3609,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 3609,
											"end": 3665,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3645,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 3645,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 3645,
											"end": 3663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3645,
											"end": 3663,
											"name": "tag",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 3645,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3690,
											"end": 3691,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 3686,
											"end": 3700,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 3702,
											"end": 3706,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3682,
											"end": 3707,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3530,
											"end": 3713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3718,
											"end": 4380,
											"name": "tag",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 3718,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3772,
											"end": 3777,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3825,
											"end": 3828,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3818,
											"end": 3822,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3810,
											"end": 3816,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3806,
											"end": 3823,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3802,
											"end": 3829,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3792,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 3792,
											"end": 3847,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3843,
											"end": 3844,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3792,
											"end": 3847,
											"name": "tag",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 3792,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3879,
											"end": 3885,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 3886,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3905,
											"end": 3909,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3929,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 3945,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 3985,
											"end": 3987,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3945,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 3945,
											"end": 3988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3945,
											"end": 3988,
											"name": "tag",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 3945,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3929,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "266"
										},
										{
											"begin": 3929,
											"end": 3989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3929,
											"end": 3989,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 3929,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4023,
											"end": 4038,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4023,
											"end": 4038,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4023,
											"end": 4038,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4109,
											"end": 4110,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 4105,
											"end": 4115,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4105,
											"end": 4115,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4105,
											"end": 4115,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4105,
											"end": 4115,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 4093,
											"end": 4116,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4093,
											"end": 4116,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4089,
											"end": 4121,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4089,
											"end": 4121,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4089,
											"end": 4121,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4054,
											"end": 4066,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4054,
											"end": 4066,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4054,
											"end": 4066,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4054,
											"end": 4066,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4133,
											"end": 4148,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4133,
											"end": 4148,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4133,
											"end": 4148,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4130,
											"end": 4165,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4130,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 4130,
											"end": 4165,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4161,
											"end": 4162,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4159,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4151,
											"end": 4163,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4130,
											"end": 4165,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 4130,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4197,
											"end": 4199,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4189,
											"end": 4195,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4185,
											"end": 4200,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4209,
											"end": 4351,
											"name": "tag",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 4209,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4225,
											"end": 4231,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4220,
											"end": 4223,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4217,
											"end": 4232,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 4209,
											"end": 4351,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4209,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 4209,
											"end": 4351,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4291,
											"end": 4308,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4291,
											"end": 4308,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4279,
											"end": 4309,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4279,
											"end": 4309,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4329,
											"end": 4341,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4329,
											"end": 4341,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4329,
											"end": 4341,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4329,
											"end": 4341,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4242,
											"end": 4254,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4242,
											"end": 4254,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4209,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 4209,
											"end": 4351,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4209,
											"end": 4351,
											"name": "tag",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 4209,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4369,
											"end": 4374,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 3718,
											"end": 4380,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3718,
											"end": 4380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4385,
											"end": 5214,
											"name": "tag",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 4385,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4437,
											"end": 4442,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4490,
											"end": 4493,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4483,
											"end": 4487,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4475,
											"end": 4481,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4471,
											"end": 4488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4467,
											"end": 4494,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4457,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 4457,
											"end": 4512,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4508,
											"end": 4509,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4505,
											"end": 4506,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4498,
											"end": 4510,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4457,
											"end": 4512,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 4457,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4544,
											"end": 4550,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4531,
											"end": 4551,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4570,
											"end": 4574,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4594,
											"end": 4654,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 4610,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 4650,
											"end": 4652,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4610,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 4610,
											"end": 4653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4594,
											"end": 4654,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 4594,
											"end": 4654,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4688,
											"end": 4703,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4688,
											"end": 4703,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4688,
											"end": 4703,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4774,
											"end": 4775,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 4770,
											"end": 4780,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4770,
											"end": 4780,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4770,
											"end": 4780,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4770,
											"end": 4780,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 4758,
											"end": 4781,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4758,
											"end": 4781,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4754,
											"end": 4786,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4754,
											"end": 4786,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4754,
											"end": 4786,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4719,
											"end": 4731,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4719,
											"end": 4731,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4719,
											"end": 4731,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4719,
											"end": 4731,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4798,
											"end": 4813,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4798,
											"end": 4813,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4798,
											"end": 4813,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4795,
											"end": 4830,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4795,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 4795,
											"end": 4830,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4826,
											"end": 4827,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4824,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4795,
											"end": 4830,
											"name": "tag",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 4795,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4862,
											"end": 4864,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4854,
											"end": 4860,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4850,
											"end": 4865,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4874,
											"end": 5185,
											"name": "tag",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 4874,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4890,
											"end": 4896,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4885,
											"end": 4888,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4882,
											"end": 4897,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 4874,
											"end": 5185,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4874,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 4874,
											"end": 5185,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4970,
											"end": 4973,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4957,
											"end": 4974,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5018,
											"end": 5022,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 5011,
											"end": 5016,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5007,
											"end": 5023,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5000,
											"end": 5005,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4997,
											"end": 5024,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 4987,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 4987,
											"end": 5112,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5097,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5091,
											"end": 5093,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5084,
											"end": 5098,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4987,
											"end": 5112,
											"name": "tag",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 4987,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5125,
											"end": 5143,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5125,
											"end": 5143,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5163,
											"end": 5175,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5163,
											"end": 5175,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5163,
											"end": 5175,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5163,
											"end": 5175,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4907,
											"end": 4919,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4907,
											"end": 4919,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4874,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 4874,
											"end": 5185,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5219,
											"end": 6938,
											"name": "tag",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 5219,
											"end": 6938,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5395,
											"end": 5401,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5411,
											"end": 5417,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5419,
											"end": 5425,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5472,
											"end": 5475,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 5460,
											"end": 5469,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5451,
											"end": 5458,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5447,
											"end": 5470,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5443,
											"end": 5476,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5440,
											"end": 5493,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5440,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 5440,
											"end": 5493,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5486,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5479,
											"end": 5491,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5440,
											"end": 5493,
											"name": "tag",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 5440,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5528,
											"end": 5537,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5515,
											"end": 5538,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5547,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 5572,
											"end": 5577,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5547,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 5547,
											"end": 5578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5547,
											"end": 5578,
											"name": "tag",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 5547,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5597,
											"end": 5602,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5621,
											"end": 5623,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5678,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5660,
											"end": 5678,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5660,
											"end": 5678,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5647,
											"end": 5679,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5688,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 5647,
											"end": 5679,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5688,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 5688,
											"end": 5721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5688,
											"end": 5721,
											"name": "tag",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 5688,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5740,
											"end": 5747,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5798,
											"end": 5800,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5783,
											"end": 5801,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5801,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5770,
											"end": 5802,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5851,
											"end": 5865,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5851,
											"end": 5865,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5851,
											"end": 5865,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5848,
											"end": 5882,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5848,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 5848,
											"end": 5882,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5878,
											"end": 5879,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5875,
											"end": 5876,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5868,
											"end": 5880,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5848,
											"end": 5882,
											"name": "tag",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 5848,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5916,
											"end": 5922,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5905,
											"end": 5914,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5901,
											"end": 5923,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5891,
											"end": 5923,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5891,
											"end": 5923,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5961,
											"end": 5968,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5954,
											"end": 5958,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 5950,
											"end": 5952,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5946,
											"end": 5959,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5942,
											"end": 5969,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5932,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 5932,
											"end": 5987,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5983,
											"end": 5984,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5980,
											"end": 5981,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5973,
											"end": 5985,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5932,
											"end": 5987,
											"name": "tag",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 5932,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6019,
											"end": 6021,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6006,
											"end": 6022,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6042,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 6058,
											"end": 6101,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 6098,
											"end": 6100,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6058,
											"end": 6101,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 6058,
											"end": 6101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6042,
											"end": 6102,
											"name": "tag",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 6042,
											"end": 6102,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6136,
											"end": 6151,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6136,
											"end": 6151,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6136,
											"end": 6151,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6218,
											"end": 6219,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 6214,
											"end": 6224,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6214,
											"end": 6224,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6214,
											"end": 6224,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6214,
											"end": 6224,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 6206,
											"end": 6225,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6206,
											"end": 6225,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6202,
											"end": 6230,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6202,
											"end": 6230,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6202,
											"end": 6230,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6167,
											"end": 6179,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6167,
											"end": 6179,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6167,
											"end": 6179,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6167,
											"end": 6179,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6242,
											"end": 6261,
											"name": "DUP13",
											"source": 15
										},
										{
											"begin": 6242,
											"end": 6261,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6242,
											"end": 6261,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6239,
											"end": 6278,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6239,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 6239,
											"end": 6278,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6274,
											"end": 6275,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6271,
											"end": 6272,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6264,
											"end": 6276,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6239,
											"end": 6278,
											"name": "tag",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 6239,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6298,
											"end": 6309,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6298,
											"end": 6309,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6298,
											"end": 6309,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6298,
											"end": 6309,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6318,
											"end": 6541,
											"name": "tag",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 6318,
											"end": 6541,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6334,
											"end": 6340,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6329,
											"end": 6332,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6326,
											"end": 6341,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 6318,
											"end": 6541,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6318,
											"end": 6541,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 6318,
											"end": 6541,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6416,
											"end": 6419,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6403,
											"end": 6420,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6433,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 6458,
											"end": 6465,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6433,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 6433,
											"end": 6466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6433,
											"end": 6466,
											"name": "tag",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 6433,
											"end": 6466,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6479,
											"end": 6499,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6479,
											"end": 6499,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6351,
											"end": 6363,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6351,
											"end": 6363,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6351,
											"end": 6363,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6351,
											"end": 6363,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6519,
											"end": 6531,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6519,
											"end": 6531,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6519,
											"end": 6531,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6519,
											"end": 6531,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6318,
											"end": 6541,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 6318,
											"end": 6541,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6318,
											"end": 6541,
											"name": "tag",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 6318,
											"end": 6541,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6560,
											"end": 6565,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6618,
											"end": 6620,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 6603,
											"end": 6621,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 6603,
											"end": 6621,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6590,
											"end": 6622,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6590,
											"end": 6622,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6634,
											"end": 6650,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6634,
											"end": 6650,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6634,
											"end": 6650,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6631,
											"end": 6667,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6631,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 6631,
											"end": 6667,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6663,
											"end": 6664,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6653,
											"end": 6665,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6631,
											"end": 6667,
											"name": "tag",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 6631,
											"end": 6667,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6686,
											"end": 6749,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 6741,
											"end": 6748,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 6730,
											"end": 6738,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6719,
											"end": 6728,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 6715,
											"end": 6739,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6686,
											"end": 6749,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 6686,
											"end": 6749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6686,
											"end": 6749,
											"name": "tag",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 6686,
											"end": 6749,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6676,
											"end": 6749,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 6676,
											"end": 6749,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6802,
											"end": 6805,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 6791,
											"end": 6800,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 6787,
											"end": 6806,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6774,
											"end": 6807,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6758,
											"end": 6807,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6758,
											"end": 6807,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6832,
											"end": 6834,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6822,
											"end": 6830,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6819,
											"end": 6835,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6816,
											"end": 6852,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6816,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 6816,
											"end": 6852,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6848,
											"end": 6849,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6845,
											"end": 6846,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6838,
											"end": 6850,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6816,
											"end": 6852,
											"name": "tag",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 6816,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6816,
											"end": 6852,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6816,
											"end": 6852,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6871,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "342"
										},
										{
											"begin": 6924,
											"end": 6931,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 6913,
											"end": 6921,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6902,
											"end": 6911,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 6898,
											"end": 6922,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6871,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 6871,
											"end": 6932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6871,
											"end": 6932,
											"name": "tag",
											"source": 15,
											"value": "342"
										},
										{
											"begin": 6871,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6861,
											"end": 6932,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6861,
											"end": 6932,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6861,
											"end": 6932,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5219,
											"end": 6938,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5219,
											"end": 6938,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5219,
											"end": 6938,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5219,
											"end": 6938,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5219,
											"end": 6938,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5219,
											"end": 6938,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5219,
											"end": 6938,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5219,
											"end": 6938,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5219,
											"end": 6938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7358,
											"end": 7606,
											"name": "tag",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 7358,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7426,
											"end": 7432,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7434,
											"end": 7440,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7487,
											"end": 7489,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7475,
											"end": 7484,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7466,
											"end": 7473,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7462,
											"end": 7485,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7458,
											"end": 7490,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 7455,
											"end": 7507,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7455,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 7455,
											"end": 7507,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7503,
											"end": 7504,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7500,
											"end": 7501,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7493,
											"end": 7505,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7455,
											"end": 7507,
											"name": "tag",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 7455,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7526,
											"end": 7549,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7526,
											"end": 7549,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 7526,
											"end": 7549,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7596,
											"end": 7598,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7581,
											"end": 7599,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7581,
											"end": 7599,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7581,
											"end": 7599,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7568,
											"end": 7600,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 7568,
											"end": 7600,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7358,
											"end": 7606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7808,
											"end": 8302,
											"name": "tag",
											"source": 15,
											"value": "93"
										},
										{
											"begin": 7808,
											"end": 8302,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7988,
											"end": 7990,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7973,
											"end": 7991,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7973,
											"end": 7991,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7977,
											"end": 7986,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8068,
											"end": 8074,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7946,
											"end": 7950,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8102,
											"end": 8296,
											"name": "tag",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 8102,
											"end": 8296,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8116,
											"end": 8120,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 8113,
											"end": 8114,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8110,
											"end": 8121,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 8102,
											"end": 8296,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8102,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 8102,
											"end": 8296,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8175,
											"end": 8188,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8175,
											"end": 8188,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8212,
											"end": 8216,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8236,
											"end": 8248,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8236,
											"end": 8248,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8236,
											"end": 8248,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8236,
											"end": 8248,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8271,
											"end": 8286,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8271,
											"end": 8286,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8271,
											"end": 8286,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8271,
											"end": 8286,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8136,
											"end": 8137,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 8129,
											"end": 8138,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8102,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 8102,
											"end": 8296,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8102,
											"end": 8296,
											"name": "tag",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 8102,
											"end": 8296,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8106,
											"end": 8109,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8106,
											"end": 8109,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8106,
											"end": 8109,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7808,
											"end": 8302,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7808,
											"end": 8302,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7808,
											"end": 8302,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7808,
											"end": 8302,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7808,
											"end": 8302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8307,
											"end": 9378,
											"name": "tag",
											"source": 15,
											"value": "99"
										},
										{
											"begin": 8307,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8461,
											"end": 8467,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8469,
											"end": 8475,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8477,
											"end": 8483,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8485,
											"end": 8491,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8493,
											"end": 8499,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8546,
											"end": 8549,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 8534,
											"end": 8543,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8525,
											"end": 8532,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 8521,
											"end": 8544,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8517,
											"end": 8550,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8514,
											"end": 8567,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8514,
											"end": 8567,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 8514,
											"end": 8567,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8563,
											"end": 8564,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8553,
											"end": 8565,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8514,
											"end": 8567,
											"name": "tag",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 8514,
											"end": 8567,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8602,
											"end": 8611,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8589,
											"end": 8612,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8621,
											"end": 8652,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 8646,
											"end": 8651,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8621,
											"end": 8652,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 8621,
											"end": 8652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8621,
											"end": 8652,
											"name": "tag",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 8621,
											"end": 8652,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8671,
											"end": 8676,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8728,
											"end": 8730,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8713,
											"end": 8731,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8713,
											"end": 8731,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8700,
											"end": 8732,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8741,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 8700,
											"end": 8732,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8741,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 8741,
											"end": 8774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8741,
											"end": 8774,
											"name": "tag",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 8741,
											"end": 8774,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8793,
											"end": 8800,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8851,
											"end": 8853,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8836,
											"end": 8854,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8836,
											"end": 8854,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8823,
											"end": 8855,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8904,
											"end": 8918,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8901,
											"end": 8935,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8901,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 8901,
											"end": 8935,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8931,
											"end": 8932,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8928,
											"end": 8929,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8921,
											"end": 8933,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8901,
											"end": 8935,
											"name": "tag",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 8901,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8954,
											"end": 9015,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 9007,
											"end": 9014,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 8998,
											"end": 9004,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8987,
											"end": 8996,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 8983,
											"end": 9005,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8954,
											"end": 9015,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 8954,
											"end": 9015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8954,
											"end": 9015,
											"name": "tag",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 8954,
											"end": 9015,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8944,
											"end": 9015,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 8944,
											"end": 9015,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9068,
											"end": 9070,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 9057,
											"end": 9066,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9040,
											"end": 9072,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9024,
											"end": 9072,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9024,
											"end": 9072,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9097,
											"end": 9099,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9087,
											"end": 9095,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9084,
											"end": 9100,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9081,
											"end": 9117,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9081,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 9081,
											"end": 9117,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9113,
											"end": 9114,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9110,
											"end": 9111,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9103,
											"end": 9115,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9081,
											"end": 9117,
											"name": "tag",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 9081,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9136,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 9191,
											"end": 9198,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 9180,
											"end": 9188,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9169,
											"end": 9178,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 9165,
											"end": 9189,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9136,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 9136,
											"end": 9199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9136,
											"end": 9199,
											"name": "tag",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 9136,
											"end": 9199,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9126,
											"end": 9199,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9126,
											"end": 9199,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9252,
											"end": 9255,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 9241,
											"end": 9250,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9237,
											"end": 9256,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9224,
											"end": 9257,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9208,
											"end": 9257,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9208,
											"end": 9257,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9282,
											"end": 9284,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9272,
											"end": 9280,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9269,
											"end": 9285,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9266,
											"end": 9302,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9266,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 9266,
											"end": 9302,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9298,
											"end": 9299,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9295,
											"end": 9296,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9288,
											"end": 9300,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9266,
											"end": 9302,
											"name": "tag",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 9266,
											"end": 9302,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9266,
											"end": 9302,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9321,
											"end": 9372,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "342"
										},
										{
											"begin": 9364,
											"end": 9371,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9353,
											"end": 9361,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9342,
											"end": 9351,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 9338,
											"end": 9362,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9321,
											"end": 9372,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 9321,
											"end": 9372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9383,
											"end": 9510,
											"name": "tag",
											"source": 15,
											"value": "200"
										},
										{
											"begin": 9383,
											"end": 9510,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9444,
											"end": 9454,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 9439,
											"end": 9442,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 9435,
											"end": 9455,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 9432,
											"end": 9433,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9425,
											"end": 9456,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9475,
											"end": 9479,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 9472,
											"end": 9473,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 9465,
											"end": 9480,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9499,
											"end": 9503,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9496,
											"end": 9497,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9489,
											"end": 9504,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 11021,
											"name": "tag",
											"source": 15,
											"value": "106"
										},
										{
											"begin": 9690,
											"end": 11021,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10228,
											"end": 10260,
											"name": "DUP15",
											"source": 15
										},
										{
											"begin": 10228,
											"end": 10260,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10228,
											"end": 10260,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10210,
											"end": 10261,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10210,
											"end": 10261,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10297,
											"end": 10329,
											"name": "DUP14",
											"source": 15
										},
										{
											"begin": 10297,
											"end": 10329,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10297,
											"end": 10329,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10292,
											"end": 10294,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10277,
											"end": 10295,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10277,
											"end": 10295,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10270,
											"end": 10330,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10366,
											"end": 10398,
											"name": "DUP13",
											"source": 15
										},
										{
											"begin": 10366,
											"end": 10398,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10361,
											"end": 10363,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10339,
											"end": 10399,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10197,
											"end": 10200,
											"name": "PUSH",
											"source": 15,
											"value": "1A0"
										},
										{
											"begin": 10182,
											"end": 10201,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10182,
											"end": 10201,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 10418,
											"end": 10431,
											"name": "DUP13",
											"source": 15
										},
										{
											"begin": 10418,
											"end": 10431,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 10408,
											"end": 10552,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 10408,
											"end": 10552,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10474,
											"end": 10484,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 10469,
											"end": 10472,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 10465,
											"end": 10485,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 10462,
											"end": 10463,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10455,
											"end": 10486,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10509,
											"end": 10513,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 10506,
											"end": 10507,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 10499,
											"end": 10514,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10537,
											"end": 10541,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 10534,
											"end": 10535,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10527,
											"end": 10542,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10408,
											"end": 10552,
											"name": "tag",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 10408,
											"end": 10552,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10588,
											"end": 10594,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 10583,
											"end": 10585,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 10572,
											"end": 10581,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10568,
											"end": 10586,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10561,
											"end": 10595,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10632,
											"end": 10638,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 10626,
											"end": 10629,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 10615,
											"end": 10624,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10611,
											"end": 10630,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10604,
											"end": 10639,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10676,
											"end": 10682,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 10670,
											"end": 10673,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 10659,
											"end": 10668,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10655,
											"end": 10674,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10648,
											"end": 10683,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10720,
											"end": 10726,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 10714,
											"end": 10717,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 10703,
											"end": 10712,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10699,
											"end": 10718,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10692,
											"end": 10727,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10764,
											"end": 10770,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 10758,
											"end": 10761,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 10747,
											"end": 10756,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10743,
											"end": 10762,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10736,
											"end": 10771,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10808,
											"end": 10814,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10802,
											"end": 10805,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 10791,
											"end": 10800,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10787,
											"end": 10806,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10780,
											"end": 10815,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10852,
											"end": 10858,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10846,
											"end": 10849,
											"name": "PUSH",
											"source": 15,
											"value": "120"
										},
										{
											"begin": 10835,
											"end": 10844,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10831,
											"end": 10850,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10824,
											"end": 10859,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10896,
											"end": 10903,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10890,
											"end": 10893,
											"name": "PUSH",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 10879,
											"end": 10888,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10875,
											"end": 10894,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10868,
											"end": 10904,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10913,
											"end": 10960,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 10955,
											"end": 10958,
											"name": "PUSH",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 10944,
											"end": 10953,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10940,
											"end": 10959,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10931,
											"end": 10938,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9591,
											"end": 9597,
											"name": "PUSH",
											"source": 15,
											"value": "FFFF"
										},
										{
											"begin": 9580,
											"end": 9598,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9568,
											"end": 9599,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9568,
											"end": 9599,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9515,
											"end": 9605,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10913,
											"end": 10960,
											"name": "tag",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 10913,
											"end": 10960,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9677,
											"end": 9681,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 9666,
											"end": 9682,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9666,
											"end": 9682,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11010,
											"end": 11013,
											"name": "PUSH",
											"source": 15,
											"value": "180"
										},
										{
											"begin": 10995,
											"end": 11014,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10995,
											"end": 11014,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9654,
											"end": 9683,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 11021,
											"name": "SWAP15",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 11021,
											"name": "SWAP14",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 11021,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 11021,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 11021,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 11021,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 11021,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 11021,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 11021,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 11021,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 11021,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 11021,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 11021,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 11021,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 11021,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 11021,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 11021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11026,
											"end": 11760,
											"name": "tag",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 11026,
											"end": 11760,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11130,
											"end": 11136,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11138,
											"end": 11144,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11146,
											"end": 11152,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11154,
											"end": 11160,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11162,
											"end": 11168,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11215,
											"end": 11218,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 11203,
											"end": 11212,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11194,
											"end": 11201,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11190,
											"end": 11213,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 11186,
											"end": 11219,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 11183,
											"end": 11236,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11183,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 11183,
											"end": 11236,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11232,
											"end": 11233,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11229,
											"end": 11230,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11222,
											"end": 11234,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11183,
											"end": 11236,
											"name": "tag",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 11183,
											"end": 11236,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11271,
											"end": 11280,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11258,
											"end": 11281,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 11290,
											"end": 11321,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 11315,
											"end": 11320,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11290,
											"end": 11321,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 11290,
											"end": 11321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11290,
											"end": 11321,
											"name": "tag",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 11290,
											"end": 11321,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11340,
											"end": 11345,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11397,
											"end": 11399,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11382,
											"end": 11400,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11382,
											"end": 11400,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11369,
											"end": 11401,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 11410,
											"end": 11443,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 11369,
											"end": 11401,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11410,
											"end": 11443,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 11410,
											"end": 11443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11410,
											"end": 11443,
											"name": "tag",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 11410,
											"end": 11443,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11462,
											"end": 11469,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11516,
											"end": 11518,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11501,
											"end": 11519,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11501,
											"end": 11519,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11488,
											"end": 11520,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 11488,
											"end": 11520,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11567,
											"end": 11569,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 11552,
											"end": 11570,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11552,
											"end": 11570,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11539,
											"end": 11571,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 11539,
											"end": 11571,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11622,
											"end": 11625,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 11607,
											"end": 11626,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11607,
											"end": 11626,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11594,
											"end": 11627,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11639,
											"end": 11669,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11639,
											"end": 11669,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 11636,
											"end": 11686,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11636,
											"end": 11686,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 11636,
											"end": 11686,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11682,
											"end": 11683,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11679,
											"end": 11680,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11672,
											"end": 11684,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11636,
											"end": 11686,
											"name": "tag",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 11636,
											"end": 11686,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11705,
											"end": 11754,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "342"
										},
										{
											"begin": 11746,
											"end": 11753,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11737,
											"end": 11743,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11726,
											"end": 11735,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 11722,
											"end": 11744,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11705,
											"end": 11754,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 11705,
											"end": 11754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11765,
											"end": 12012,
											"name": "tag",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 11765,
											"end": 12012,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11824,
											"end": 11830,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11877,
											"end": 11879,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11856,
											"end": 11863,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11852,
											"end": 11875,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 11848,
											"end": 11880,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 11845,
											"end": 11897,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11845,
											"end": 11897,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 11845,
											"end": 11897,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11893,
											"end": 11894,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11890,
											"end": 11891,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11883,
											"end": 11895,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11845,
											"end": 11897,
											"name": "tag",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 11845,
											"end": 11897,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11932,
											"end": 11941,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11919,
											"end": 11942,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 11951,
											"end": 11982,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 11976,
											"end": 11981,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11951,
											"end": 11982,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 11951,
											"end": 11982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12017,
											"end": 12400,
											"name": "tag",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 12017,
											"end": 12400,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12283,
											"end": 12298,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 12283,
											"end": 12298,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12283,
											"end": 12298,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 12265,
											"end": 12299,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12265,
											"end": 12299,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12335,
											"end": 12350,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12335,
											"end": 12350,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12335,
											"end": 12350,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12335,
											"end": 12350,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 12330,
											"end": 12332,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12315,
											"end": 12333,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12315,
											"end": 12333,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12308,
											"end": 12351,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12382,
											"end": 12384,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12367,
											"end": 12385,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12367,
											"end": 12385,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12360,
											"end": 12394,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12360,
											"end": 12394,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12360,
											"end": 12394,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12360,
											"end": 12394,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12215,
											"end": 12217,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 12200,
											"end": 12218,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12200,
											"end": 12218,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12017,
											"end": 12400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12405,
											"end": 12682,
											"name": "tag",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 12405,
											"end": 12682,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12472,
											"end": 12478,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12525,
											"end": 12527,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12513,
											"end": 12522,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12504,
											"end": 12511,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12500,
											"end": 12523,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 12496,
											"end": 12528,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 12493,
											"end": 12545,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12493,
											"end": 12545,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 12493,
											"end": 12545,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12541,
											"end": 12542,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12538,
											"end": 12539,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12531,
											"end": 12543,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 12493,
											"end": 12545,
											"name": "tag",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 12493,
											"end": 12545,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12573,
											"end": 12582,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12567,
											"end": 12583,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 12626,
											"end": 12631,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12619,
											"end": 12632,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12612,
											"end": 12633,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12605,
											"end": 12610,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12602,
											"end": 12634,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 12592,
											"end": 12652,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 12592,
											"end": 12652,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12648,
											"end": 12649,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12645,
											"end": 12646,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12638,
											"end": 12650,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 15002,
											"end": 15129,
											"name": "tag",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 15002,
											"end": 15129,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15063,
											"end": 15073,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 15058,
											"end": 15061,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 15054,
											"end": 15074,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 15051,
											"end": 15052,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15044,
											"end": 15075,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15094,
											"end": 15098,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 15091,
											"end": 15092,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 15084,
											"end": 15099,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15118,
											"end": 15122,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 15115,
											"end": 15116,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15108,
											"end": 15123,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 15818,
											"end": 15945,
											"name": "tag",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 15818,
											"end": 15945,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15879,
											"end": 15889,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 15874,
											"end": 15877,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 15870,
											"end": 15890,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 15867,
											"end": 15868,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15860,
											"end": 15891,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15910,
											"end": 15914,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 15907,
											"end": 15908,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 15900,
											"end": 15915,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15934,
											"end": 15938,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 15931,
											"end": 15932,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15924,
											"end": 15939,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 15950,
											"end": 16085,
											"name": "tag",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 15950,
											"end": 16085,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15989,
											"end": 15992,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16010,
											"end": 16027,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 16010,
											"end": 16027,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16010,
											"end": 16027,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16007,
											"end": 16050,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 16007,
											"end": 16050,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16030,
											"end": 16048,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 16030,
											"end": 16048,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 16030,
											"end": 16048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16030,
											"end": 16048,
											"name": "tag",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 16030,
											"end": 16048,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16077,
											"end": 16078,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 16066,
											"end": 16079,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16066,
											"end": 16079,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15950,
											"end": 16085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16090,
											"end": 16446,
											"name": "tag",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 16090,
											"end": 16446,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16292,
											"end": 16294,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16274,
											"end": 16295,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 16274,
											"end": 16295,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16274,
											"end": 16295,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16311,
											"end": 16329,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16311,
											"end": 16329,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16311,
											"end": 16329,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16304,
											"end": 16334,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16370,
											"end": 16404,
											"name": "PUSH",
											"source": 15,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 16365,
											"end": 16367,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16350,
											"end": 16368,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16350,
											"end": 16368,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16343,
											"end": 16405,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16437,
											"end": 16439,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 16422,
											"end": 16440,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16422,
											"end": 16440,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16090,
											"end": 16446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16806,
											"end": 17023,
											"name": "tag",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 16806,
											"end": 17023,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16846,
											"end": 16847,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16872,
											"end": 16873,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16862,
											"end": 16994,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 16862,
											"end": 16994,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16916,
											"end": 16926,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 16911,
											"end": 16914,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 16907,
											"end": 16927,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 16904,
											"end": 16905,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16897,
											"end": 16928,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16951,
											"end": 16955,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 16948,
											"end": 16949,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 16941,
											"end": 16956,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16979,
											"end": 16983,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 16976,
											"end": 16977,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16969,
											"end": 16984,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 16862,
											"end": 16994,
											"name": "tag",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 16862,
											"end": 16994,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17008,
											"end": 17017,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 17008,
											"end": 17017,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16806,
											"end": 17023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17028,
											"end": 17196,
											"name": "tag",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 17028,
											"end": 17196,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17068,
											"end": 17075,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17134,
											"end": 17135,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17130,
											"end": 17131,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17126,
											"end": 17132,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 17122,
											"end": 17136,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 17119,
											"end": 17120,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17116,
											"end": 17137,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 17111,
											"end": 17112,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17104,
											"end": 17113,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 17097,
											"end": 17114,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 17093,
											"end": 17138,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 17090,
											"end": 17161,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 17090,
											"end": 17161,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 17090,
											"end": 17161,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17141,
											"end": 17159,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 17141,
											"end": 17159,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 17141,
											"end": 17159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17141,
											"end": 17159,
											"name": "tag",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 17141,
											"end": 17159,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17181,
											"end": 17190,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 17181,
											"end": 17190,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17028,
											"end": 17196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17895,
											"end": 18023,
											"name": "tag",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 17895,
											"end": 18023,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17935,
											"end": 17938,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17966,
											"end": 17967,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17962,
											"end": 17968,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 17959,
											"end": 17960,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17956,
											"end": 17969,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 17953,
											"end": 17992,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 17953,
											"end": 17992,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 17953,
											"end": 17992,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17972,
											"end": 17990,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 17972,
											"end": 17990,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 17972,
											"end": 17990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17972,
											"end": 17990,
											"name": "tag",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 17972,
											"end": 17990,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18008,
											"end": 18017,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18008,
											"end": 18017,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17895,
											"end": 18023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/lending/LendingCore.sol",
								"contracts/plugins/StaterTransfers.sol",
								"contracts/workers/IStaterDiscounts.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"canBeTerminated(uint256)": "e70c7446",
							"checkLtv(uint256,uint256)": "87715588",
							"discounts()": "75af65d1",
							"getLoanStartEnd(uint256)": "9e1d7a1e",
							"getPromissoryPermission(uint256)": "756db756",
							"id()": "af640d0f",
							"interestRate()": "7c3a00fd",
							"interestRateToStater()": "8f829275",
							"lenderFee()": "8ca83f07",
							"lendingMethodsAddress()": "38daa789",
							"loans(uint256)": "e1ec3c68",
							"ltv()": "6fb49d73",
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"promissoryNoteAddress()": "13c75b5b",
							"promissoryPermissions(uint256)": "24c93fe5",
							"renounceOwnership()": "715018a6",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferItems(address,address,address[],uint256[],uint8[])": "407299d7",
							"transferOwnership(address)": "f2fde38b",
							"transferTokens(address,address,address,uint256,uint256)": "2e3f4a5d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountDue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"installmentAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assetsValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"frequencyTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"frequencyTimeUnit\",\"type\":\"uint256\"}],\"name\":\"EditLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum LendingCore.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"ItemsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanPaymentEnd\",\"type\":\"uint256\"}],\"name\":\"LoanApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"LoanCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"installmentAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaidAsInstallmentToLender\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interestPerInstallement\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interestToStaterPerInstallement\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum LendingCore.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"LoanPayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"nftAddressArray\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"nftTokenIdArray\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint8[]\",\"name\":\"nftTokenTypeArray\",\"type\":\"uint8[]\"}],\"name\":\"NewLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"canBeTerminated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetsValue\",\"type\":\"uint256\"}],\"name\":\"checkLtv\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"discounts\",\"outputs\":[{\"internalType\":\"contract IStaterDiscounts\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"getLoanStartEnd\",\"outputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"\",\"type\":\"uint256[2]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"getPromissoryPermission\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interestRateToStater\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lenderFee\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lendingMethodsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"enum LendingCore.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"installmentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nrOfPayments\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetsValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"installmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountDue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paidAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"nrOfInstallments\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"defaultingLimit\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ltv\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"promissoryNoteAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"promissoryPermissions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"nftAddressArray\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftTokenIdArray\",\"type\":\"uint256[]\"},{\"internalType\":\"uint8[]\",\"name\":\"nftTokenTypeArray\",\"type\":\"uint8[]\"}],\"name\":\"transferItems\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"qty1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty2\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lending/LendingCore.sol\":\"LendingCore\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/lending/LendingCore.sol\":{\"keccak256\":\"0xa64a12bfcff0bbe5e66df6c1a33a4dad9a0f5c266f83c4f6c80b1f504543662d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1888183d873e92ce8049eb428d7b9b1d04c075ca77be2224292e7455679ae8af\",\"dweb:/ipfs/QmcUEBZHr9jbtTPRj6pyxqBg2zGG6TiGceHkBg3vEvmCc5\"]},\"contracts/plugins/StaterTransfers.sol\":{\"keccak256\":\"0x2b356031f5bffcf643d1d9d1bc4b347876e45b8ab49d7c177e80a1560ce36b5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc748c5f0dd66ee67ab6c95f481b207f647c5454996b9eff96aacff38ba01334\",\"dweb:/ipfs/QmNfpmcpU7iYnMKUkWdpAeeEaDoGEC8VSbf76Mue3QupQj\"]},\"contracts/workers/IStaterDiscounts.sol\":{\"keccak256\":\"0xce08f458990c5b99c72e7ccec9937788a74d8939915cbb3ad8a0d3d46bca46f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://493c73186454b29f4d914c702b500ab69354791889cfa47c3df494a8ad224f1a\",\"dweb:/ipfs/QmWEMNqMVkJpFV7CRXbeyfeftJcGhUWRpc2UAfJ9BtnZF8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/lending/LendingCore.sol:LendingCore",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 728,
								"contract": "contracts/lending/LendingCore.sol:LendingCore",
								"label": "promissoryNoteAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 730,
								"contract": "contracts/lending/LendingCore.sol:LendingCore",
								"label": "lendingMethodsAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 733,
								"contract": "contracts/lending/LendingCore.sol:LendingCore",
								"label": "discounts",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IStaterDiscounts)1143"
							},
							{
								"astId": 736,
								"contract": "contracts/lending/LendingCore.sol:LendingCore",
								"label": "id",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 739,
								"contract": "contracts/lending/LendingCore.sol:LendingCore",
								"label": "ltv",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 742,
								"contract": "contracts/lending/LendingCore.sol:LendingCore",
								"label": "interestRate",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 745,
								"contract": "contracts/lending/LendingCore.sol:LendingCore",
								"label": "interestRateToStater",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 748,
								"contract": "contracts/lending/LendingCore.sol:LendingCore",
								"label": "lenderFee",
								"offset": 0,
								"slot": "8",
								"type": "t_uint32"
							},
							{
								"astId": 804,
								"contract": "contracts/lending/LendingCore.sol:LendingCore",
								"label": "loans",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_struct(Loan)799_storage)"
							},
							{
								"astId": 808,
								"contract": "contracts/lending/LendingCore.sol:LendingCore",
								"label": "promissoryPermissions",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)2_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[2]",
								"numberOfBytes": "64"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint8)dyn_storage": {
								"base": "t_uint8",
								"encoding": "dynamic_array",
								"label": "uint8[]",
								"numberOfBytes": "32"
							},
							"t_contract(IStaterDiscounts)1143": {
								"encoding": "inplace",
								"label": "contract IStaterDiscounts",
								"numberOfBytes": "20"
							},
							"t_enum(Status)754": {
								"encoding": "inplace",
								"label": "enum LendingCore.Status",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(Loan)799_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct LendingCore.Loan)",
								"numberOfBytes": "32",
								"value": "t_struct(Loan)799_storage"
							},
							"t_struct(Loan)799_storage": {
								"encoding": "inplace",
								"label": "struct LendingCore.Loan",
								"members": [
									{
										"astId": 757,
										"contract": "contracts/lending/LendingCore.sol:LendingCore",
										"label": "nftAddressArray",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 759,
										"contract": "contracts/lending/LendingCore.sol:LendingCore",
										"label": "borrower",
										"offset": 0,
										"slot": "1",
										"type": "t_address_payable"
									},
									{
										"astId": 761,
										"contract": "contracts/lending/LendingCore.sol:LendingCore",
										"label": "lender",
										"offset": 0,
										"slot": "2",
										"type": "t_address_payable"
									},
									{
										"astId": 763,
										"contract": "contracts/lending/LendingCore.sol:LendingCore",
										"label": "currency",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									},
									{
										"astId": 766,
										"contract": "contracts/lending/LendingCore.sol:LendingCore",
										"label": "status",
										"offset": 20,
										"slot": "3",
										"type": "t_enum(Status)754"
									},
									{
										"astId": 769,
										"contract": "contracts/lending/LendingCore.sol:LendingCore",
										"label": "nftTokenIdArray",
										"offset": 0,
										"slot": "4",
										"type": "t_array(t_uint256)dyn_storage"
									},
									{
										"astId": 771,
										"contract": "contracts/lending/LendingCore.sol:LendingCore",
										"label": "installmentTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 773,
										"contract": "contracts/lending/LendingCore.sol:LendingCore",
										"label": "nrOfPayments",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 775,
										"contract": "contracts/lending/LendingCore.sol:LendingCore",
										"label": "loanAmount",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 777,
										"contract": "contracts/lending/LendingCore.sol:LendingCore",
										"label": "assetsValue",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 781,
										"contract": "contracts/lending/LendingCore.sol:LendingCore",
										"label": "startEnd",
										"offset": 0,
										"slot": "9",
										"type": "t_array(t_uint256)2_storage"
									},
									{
										"astId": 783,
										"contract": "contracts/lending/LendingCore.sol:LendingCore",
										"label": "installmentAmount",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 785,
										"contract": "contracts/lending/LendingCore.sol:LendingCore",
										"label": "amountDue",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									},
									{
										"astId": 787,
										"contract": "contracts/lending/LendingCore.sol:LendingCore",
										"label": "paidAmount",
										"offset": 0,
										"slot": "13",
										"type": "t_uint256"
									},
									{
										"astId": 789,
										"contract": "contracts/lending/LendingCore.sol:LendingCore",
										"label": "nrOfInstallments",
										"offset": 0,
										"slot": "14",
										"type": "t_uint16"
									},
									{
										"astId": 791,
										"contract": "contracts/lending/LendingCore.sol:LendingCore",
										"label": "defaultingLimit",
										"offset": 2,
										"slot": "14",
										"type": "t_uint8"
									},
									{
										"astId": 794,
										"contract": "contracts/lending/LendingCore.sol:LendingCore",
										"label": "nftTokenTypeArray",
										"offset": 0,
										"slot": "15",
										"type": "t_array(t_uint8)dyn_storage"
									},
									{
										"astId": 798,
										"contract": "contracts/lending/LendingCore.sol:LendingCore",
										"label": "offers",
										"offset": 0,
										"slot": "16",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "544"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/plugins/StaterTransfers.sol": {
				"StaterTransfers": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "nftAddressArray",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "nftTokenIdArray",
									"type": "uint256[]"
								},
								{
									"internalType": "uint8[]",
									"name": "nftTokenTypeArray",
									"type": "uint8[]"
								}
							],
							"name": "transferItems",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "qty1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "qty2",
									"type": "uint256"
								}
							],
							"name": "transferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/plugins/StaterTransfers.sol\":430:2317  contract StaterTransfers is Ownable, ERC721Holder, ERC1155Holder {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"contracts/plugins/StaterTransfers.sol\":430:2317  contract StaterTransfers is Ownable, ERC721Holder, ERC1155Holder {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/plugins/StaterTransfers.sol\":430:2317  contract StaterTransfers is Ownable, ERC721Holder, ERC1155Holder {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/plugins/StaterTransfers.sol\":430:2317  contract StaterTransfers is Ownable, ERC721Holder, ERC1155Holder {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e3f4a5d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x407299d7\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      shl(0xe1, 0x0a85bd01)\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n    tag_18:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":2412:2445   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2394:2446   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2382:2384   */\n      0x20\n        /* \"#utility.yul\":2367:2385   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      tag_16\n        /* \"#utility.yul\":2250:2452   */\n      jump\n        /* \"contracts/plugins/StaterTransfers.sol\":625:1330  function transferTokens(... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/plugins/StaterTransfers.sol\":1427:2314  function transferItems(... */\n    tag_6:\n      tag_24\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_24\n      tag_33\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6714:6746   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":6696:6747   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6684:6686   */\n      0x20\n        /* \"#utility.yul\":6669:6687   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      tag_16\n        /* \"#utility.yul\":6550:6753   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_9:\n      tag_18\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      shl(0xe0, 0xbc197c81)\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_10:\n      tag_18\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      shl(0xe0, 0xf23a6e61)\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      tag_24\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      dup3\n      and\n      shl(0xe5, 0x02711897)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      tag_54\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/plugins/StaterTransfers.sol\":625:1330  function transferTokens(... */\n    tag_27:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/plugins/StaterTransfers.sol\":795:817  currency != address(0) */\n      dup4\n      and\n      iszero\n        /* \"contracts/plugins/StaterTransfers.sol\":790:1324  if ( currency != address(0) ){... */\n      tag_58\n      jumpi\n        /* \"contracts/plugins/StaterTransfers.sol\":839:939  IERC20(currency).transferFrom(... */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/plugins/StaterTransfers.sol\":839:868  IERC20(currency).transferFrom */\n      dup5\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"contracts/plugins/StaterTransfers.sol\":839:939  IERC20(currency).transferFrom(... */\n      tag_59\n      swap1\n        /* \"contracts/plugins/StaterTransfers.sol\":884:888  from */\n      dup9\n      swap1\n        /* \"contracts/plugins/StaterTransfers.sol\":904:906  to */\n      dup9\n      swap1\n        /* \"contracts/plugins/StaterTransfers.sol\":923:927  qty1 */\n      dup8\n      swap1\n        /* \"contracts/plugins/StaterTransfers.sol\":839:939  IERC20(currency).transferFrom(... */\n      0x04\n      add\n      tag_60\n      jump\t// in\n    tag_59:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"contracts/plugins/StaterTransfers.sol\":831:981  require(IERC20(currency).transferFrom(... */\n      tag_65\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9697:9699   */\n      0x20\n        /* \"contracts/plugins/StaterTransfers.sol\":831:981  require(IERC20(currency).transferFrom(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9679:9700   */\n      mstore\n        /* \"#utility.yul\":9736:9738   */\n      0x25\n        /* \"#utility.yul\":9716:9734   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9709:9739   */\n      mstore\n        /* \"#utility.yul\":9775:9809   */\n      0x5472616e73666572206f6620746f6b656e7320746f2072656365697665722066\n        /* \"#utility.yul\":9755:9773   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9748:9810   */\n      mstore\n      shl(0xda, 0x185a5b1959)\n        /* \"#utility.yul\":9826:9844   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9819:9854   */\n      mstore\n        /* \"#utility.yul\":9871:9890   */\n      0x84\n      add\n        /* \"contracts/plugins/StaterTransfers.sol\":831:981  require(IERC20(currency).transferFrom(... */\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"contracts/plugins/StaterTransfers.sol\":1008:1016  currency */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/plugins/StaterTransfers.sol\":1001:1030  IERC20(currency).transferFrom */\n      and\n      0x23b872dd\n        /* \"contracts/plugins/StaterTransfers.sol\":1046:1050  from */\n      dup7\n        /* \"contracts/plugins/StaterTransfers.sol\":1066:1073  owner() */\n      tag_68\n        /* \"contracts/plugins/StaterTransfers.sol\":1066:1071  owner */\n      tag_35\n        /* \"contracts/plugins/StaterTransfers.sol\":1066:1073  owner() */\n      jump\t// in\n    tag_68:\n        /* \"contracts/plugins/StaterTransfers.sol\":1090:1094  qty2 */\n      dup5\n        /* \"contracts/plugins/StaterTransfers.sol\":1001:1106  IERC20(currency).transferFrom(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_69:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_72\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_73:\n        /* \"contracts/plugins/StaterTransfers.sol\":993:1146  require(IERC20(currency).transferFrom(... */\n      tag_74\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10483:10485   */\n      0x20\n        /* \"contracts/plugins/StaterTransfers.sol\":993:1146  require(IERC20(currency).transferFrom(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10465:10486   */\n      mstore\n        /* \"#utility.yul\":10522:10524   */\n      0x23\n        /* \"#utility.yul\":10502:10520   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10495:10525   */\n      mstore\n        /* \"#utility.yul\":10561:10595   */\n      0x5472616e73666572206f6620746f6b656e7320746f2053746174657220666169\n        /* \"#utility.yul\":10541:10559   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10534:10596   */\n      mstore\n      shl(0xea, 0x1b1959)\n        /* \"#utility.yul\":10612:10630   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10605:10638   */\n      mstore\n        /* \"#utility.yul\":10655:10674   */\n      0x84\n      add\n        /* \"contracts/plugins/StaterTransfers.sol\":993:1146  require(IERC20(currency).transferFrom(... */\n      tag_66\n        /* \"#utility.yul\":10281:10680   */\n      jump\n        /* \"contracts/plugins/StaterTransfers.sol\":993:1146  require(IERC20(currency).transferFrom(... */\n    tag_74:\n        /* \"contracts/plugins/StaterTransfers.sol\":790:1324  if ( currency != address(0) ){... */\n      jump(tag_84)\n    tag_58:\n        /* \"contracts/plugins/StaterTransfers.sol\":1179:1192  to.send(qty1) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/plugins/StaterTransfers.sol\":1179:1186  to.send */\n      dup6\n      and\n      swap1\n        /* \"contracts/plugins/StaterTransfers.sol\":1179:1192  to.send(qty1) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/plugins/StaterTransfers.sol\":1187:1191  qty1 */\n      dup5\n      swap1\n        /* \"contracts/plugins/StaterTransfers.sol\":1179:1192  to.send(qty1) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/plugins/StaterTransfers.sol\":1187:1191  qty1 */\n      dup6\n        /* \"contracts/plugins/StaterTransfers.sol\":1179:1186  to.send */\n      dup9\n        /* \"contracts/plugins/StaterTransfers.sol\":1179:1192  to.send(qty1) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1171:1231  require(to.send(qty1), \"Transfer of ETH to receiver failed\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10887:10889   */\n      0x20\n        /* \"contracts/plugins/StaterTransfers.sol\":1171:1231  require(to.send(qty1), \"Transfer of ETH to receiver failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10869:10890   */\n      mstore\n        /* \"#utility.yul\":10926:10928   */\n      0x22\n        /* \"#utility.yul\":10906:10924   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10899:10929   */\n      mstore\n        /* \"#utility.yul\":10965:10999   */\n      0x5472616e73666572206f662045544820746f207265636569766572206661696c\n        /* \"#utility.yul\":10945:10963   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10938:11000   */\n      mstore\n      shl(0xf2, 0x1959)\n        /* \"#utility.yul\":11016:11034   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11009:11041   */\n      mstore\n        /* \"#utility.yul\":11058:11077   */\n      0x84\n      add\n        /* \"contracts/plugins/StaterTransfers.sol\":1171:1231  require(to.send(qty1), \"Transfer of ETH to receiver failed\") */\n      tag_66\n        /* \"#utility.yul\":10685:11083   */\n      jump\n        /* \"contracts/plugins/StaterTransfers.sol\":1171:1231  require(to.send(qty1), \"Transfer of ETH to receiver failed\") */\n    tag_79:\n        /* \"contracts/plugins/StaterTransfers.sol\":1259:1266  owner() */\n      tag_82\n        /* \"contracts/plugins/StaterTransfers.sol\":1259:1264  owner */\n      tag_35\n        /* \"contracts/plugins/StaterTransfers.sol\":1259:1266  owner() */\n      jump\t// in\n    tag_82:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/plugins/StaterTransfers.sol\":1251:1272  payable(owner()).send */\n      and\n        /* \"contracts/plugins/StaterTransfers.sol\":1251:1278  payable(owner()).send(qty2) */\n      0x08fc\n        /* \"contracts/plugins/StaterTransfers.sol\":1273:1277  qty2 */\n      dup3\n        /* \"contracts/plugins/StaterTransfers.sol\":1251:1278  payable(owner()).send(qty2) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1243:1315  require(payable(owner()).send(qty2), \"Transfer of ETH to Stater failed\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11290:11292   */\n      0x20\n        /* \"contracts/plugins/StaterTransfers.sol\":1243:1315  require(payable(owner()).send(qty2), \"Transfer of ETH to Stater failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11272:11293   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11309:11327   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11302:11332   */\n      mstore\n        /* \"#utility.yul\":11368:11402   */\n      0x5472616e73666572206f662045544820746f20537461746572206661696c6564\n        /* \"#utility.yul\":11348:11366   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11341:11403   */\n      mstore\n        /* \"#utility.yul\":11420:11438   */\n      0x64\n      add\n        /* \"contracts/plugins/StaterTransfers.sol\":1243:1315  require(payable(owner()).send(qty2), \"Transfer of ETH to Stater failed\") */\n      tag_66\n        /* \"#utility.yul\":11088:11444   */\n      jump\n        /* \"contracts/plugins/StaterTransfers.sol\":1243:1315  require(payable(owner()).send(qty2), \"Transfer of ETH to Stater failed\") */\n    tag_84:\n        /* \"contracts/plugins/StaterTransfers.sol\":625:1330  function transferTokens(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/plugins/StaterTransfers.sol\":1427:2314  function transferItems(... */\n    tag_31:\n        /* \"contracts/plugins/StaterTransfers.sol\":1661:1683  nftAddressArray.length */\n      dup3\n      mload\n        /* \"contracts/plugins/StaterTransfers.sol\":1711:1733  nftTokenIdArray.length */\n      dup3\n      mload\n        /* \"contracts/plugins/StaterTransfers.sol\":1701:1733  length == nftTokenIdArray.length */\n      dup2\n      eq\n        /* \"contracts/plugins/StaterTransfers.sol\":1701:1771  length == nftTokenIdArray.length && nftTokenTypeArray.length == length */\n      dup1\n      iszero\n      tag_88\n      jumpi\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1765:1771  length */\n      dup1\n        /* \"contracts/plugins/StaterTransfers.sol\":1737:1754  nftTokenTypeArray */\n      dup3\n        /* \"contracts/plugins/StaterTransfers.sol\":1737:1761  nftTokenTypeArray.length */\n      mload\n        /* \"contracts/plugins/StaterTransfers.sol\":1737:1771  nftTokenTypeArray.length == length */\n      eq\n        /* \"contracts/plugins/StaterTransfers.sol\":1701:1771  length == nftTokenIdArray.length && nftTokenTypeArray.length == length */\n    tag_88:\n        /* \"contracts/plugins/StaterTransfers.sol\":1693:1808  require(length == nftTokenIdArray.length && nftTokenTypeArray.length == length, \"Token infos provided are invalid\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11651:11653   */\n      0x20\n        /* \"contracts/plugins/StaterTransfers.sol\":1693:1808  require(length == nftTokenIdArray.length && nftTokenTypeArray.length == length, \"Token infos provided are invalid\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11633:11654   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11670:11688   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11663:11693   */\n      mstore\n        /* \"#utility.yul\":11729:11763   */\n      0x546f6b656e20696e666f732070726f76696465642061726520696e76616c6964\n        /* \"#utility.yul\":11709:11727   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11702:11764   */\n      mstore\n        /* \"#utility.yul\":11781:11799   */\n      0x64\n      add\n        /* \"contracts/plugins/StaterTransfers.sol\":1693:1808  require(length == nftTokenIdArray.length && nftTokenTypeArray.length == length, \"Token infos provided are invalid\") */\n      tag_66\n        /* \"#utility.yul\":11449:11805   */\n      jump\n        /* \"contracts/plugins/StaterTransfers.sol\":1693:1808  require(length == nftTokenIdArray.length && nftTokenTypeArray.length == length, \"Token infos provided are invalid\") */\n    tag_89:\n        /* \"contracts/plugins/StaterTransfers.sol\":1822:1831  uint256 i */\n      0x00\n        /* \"contracts/plugins/StaterTransfers.sol\":1818:2307  for(uint256 i = 0; i < length; ++i) ... */\n    tag_92:\n        /* \"contracts/plugins/StaterTransfers.sol\":1841:1847  length */\n      dup2\n        /* \"contracts/plugins/StaterTransfers.sol\":1837:1838  i */\n      dup2\n        /* \"contracts/plugins/StaterTransfers.sol\":1837:1847  i < length */\n      lt\n        /* \"contracts/plugins/StaterTransfers.sol\":1818:2307  for(uint256 i = 0; i < length; ++i) ... */\n      iszero\n      tag_93\n      jumpi\n        /* \"contracts/plugins/StaterTransfers.sol\":1872:1889  nftTokenTypeArray */\n      dup3\n        /* \"contracts/plugins/StaterTransfers.sol\":1890:1891  i */\n      dup2\n        /* \"contracts/plugins/StaterTransfers.sol\":1872:1892  nftTokenTypeArray[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/plugins/StaterTransfers.sol\":1872:1897  nftTokenTypeArray[i] == 0 */\n      0xff\n      and\n        /* \"contracts/plugins/StaterTransfers.sol\":1896:1897  0 */\n      0x00\n        /* \"contracts/plugins/StaterTransfers.sol\":1872:1897  nftTokenTypeArray[i] == 0 */\n      sub\n        /* \"contracts/plugins/StaterTransfers.sol\":1867:2307  if ( nftTokenTypeArray[i] == 0 )... */\n      tag_98\n      jumpi\n        /* \"contracts/plugins/StaterTransfers.sol\":1924:1939  nftAddressArray */\n      dup5\n        /* \"contracts/plugins/StaterTransfers.sol\":1940:1941  i */\n      dup2\n        /* \"contracts/plugins/StaterTransfers.sol\":1924:1942  nftAddressArray[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_100\n      jumpi\n      tag_100\n      tag_97\n      jump\t// in\n    tag_100:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/plugins/StaterTransfers.sol\":1916:1960  IERC721(nftAddressArray[i]).safeTransferFrom */\n      and\n      0x42842e0e\n        /* \"contracts/plugins/StaterTransfers.sol\":1982:1986  from */\n      dup9\n        /* \"contracts/plugins/StaterTransfers.sol\":2008:2010  to */\n      dup9\n        /* \"contracts/plugins/StaterTransfers.sol\":2032:2047  nftTokenIdArray */\n      dup8\n        /* \"contracts/plugins/StaterTransfers.sol\":2048:2049  i */\n      dup6\n        /* \"contracts/plugins/StaterTransfers.sol\":2032:2050  nftTokenIdArray[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_102\n      jumpi\n      tag_102\n      tag_97\n      jump\t// in\n    tag_102:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/plugins/StaterTransfers.sol\":1916:2068  IERC721(nftAddressArray[i]).safeTransferFrom(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_103:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1867:2307  if ( nftTokenTypeArray[i] == 0 )... */\n      jump(tag_107)\n    tag_98:\n        /* \"contracts/plugins/StaterTransfers.sol\":2112:2127  nftAddressArray */\n      dup5\n        /* \"contracts/plugins/StaterTransfers.sol\":2128:2129  i */\n      dup2\n        /* \"contracts/plugins/StaterTransfers.sol\":2112:2130  nftAddressArray[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_109\n      jumpi\n      tag_109\n      tag_97\n      jump\t// in\n    tag_109:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/plugins/StaterTransfers.sol\":2103:2148  IERC1155(nftAddressArray[i]).safeTransferFrom */\n      and\n      0xf242432a\n        /* \"contracts/plugins/StaterTransfers.sol\":2170:2174  from */\n      dup9\n        /* \"contracts/plugins/StaterTransfers.sol\":2196:2198  to */\n      dup9\n        /* \"contracts/plugins/StaterTransfers.sol\":2220:2235  nftTokenIdArray */\n      dup8\n        /* \"contracts/plugins/StaterTransfers.sol\":2236:2237  i */\n      dup6\n        /* \"contracts/plugins/StaterTransfers.sol\":2220:2238  nftTokenIdArray[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_111\n      jumpi\n      tag_111\n      tag_97\n      jump\t// in\n    tag_111:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/plugins/StaterTransfers.sol\":2260:2261  1 */\n      0x01\n        /* \"contracts/plugins/StaterTransfers.sol\":2103:2307  IERC1155(nftAddressArray[i]).safeTransferFrom(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12301:12316   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":12283:12317   */\n      dup2\n      mstore\n        /* \"#utility.yul\":12353:12368   */\n      swap3\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":12348:12350   */\n      0x20\n        /* \"#utility.yul\":12333:12351   */\n      dup4\n      add\n        /* \"#utility.yul\":12326:12369   */\n      mstore\n        /* \"#utility.yul\":12400:12402   */\n      0x40\n        /* \"#utility.yul\":12385:12403   */\n      dup3\n      add\n        /* \"#utility.yul\":12378:12412   */\n      mstore\n        /* \"#utility.yul\":12443:12445   */\n      0x60\n        /* \"#utility.yul\":12428:12446   */\n      dup2\n      add\n        /* \"#utility.yul\":12421:12455   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":12263:12266   */\n      0xa0\n        /* \"#utility.yul\":12486:12489   */\n      0x80\n        /* \"#utility.yul\":12471:12490   */\n      dup3\n      add\n        /* \"#utility.yul\":12464:12496   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12533:12534   */\n      0x04\n        /* \"#utility.yul\":12512:12531   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12505:12535   */\n      mstore\n      shl(0xe4, 0x03078303)\n        /* \"#utility.yul\":12566:12569   */\n      0xc0\n        /* \"#utility.yul\":12551:12570   */\n      dup3\n      add\n        /* \"#utility.yul\":12544:12579   */\n      mstore\n        /* \"#utility.yul\":12611:12614   */\n      0xe0\n        /* \"#utility.yul\":12596:12615   */\n      add\n      swap1\n        /* \"#utility.yul\":11942:12621   */\n      jump\n        /* \"contracts/plugins/StaterTransfers.sol\":2103:2307  IERC1155(nftAddressArray[i]).safeTransferFrom(... */\n    tag_112:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1867:2307  if ( nftTokenTypeArray[i] == 0 )... */\n    tag_107:\n        /* \"contracts/plugins/StaterTransfers.sol\":1849:1852  ++i */\n      tag_117\n      dup2\n      tag_118\n      jump\t// in\n    tag_117:\n      swap1\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1818:2307  for(uint256 i = 0; i < length; ++i) ... */\n      jump(tag_92)\n    tag_93:\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1634:2314  {... */\n      pop\n        /* \"contracts/plugins/StaterTransfers.sol\":1427:2314  function transferItems(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap1\n      tag_125\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap1\n      tag_125\n      jump\t// in\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13426:13428   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13408:13429   */\n      mstore\n        /* \"#utility.yul\":13465:13467   */\n      0x26\n        /* \"#utility.yul\":13445:13463   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13438:13468   */\n      mstore\n        /* \"#utility.yul\":13504:13538   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":13484:13502   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13477:13539   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":13555:13573   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13548:13584   */\n      mstore\n        /* \"#utility.yul\":13601:13620   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_66\n        /* \"#utility.yul\":13224:13626   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_138:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_14:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_154:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_155\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":199:270   */\n    tag_155:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":497:628   */\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":572:603   */\n      dup2\n      and\n        /* \"#utility.yul\":562:604   */\n      dup2\n      eq\n        /* \"#utility.yul\":552:622   */\n      tag_141\n      jumpi\n        /* \"#utility.yul\":618:619   */\n      0x00\n        /* \"#utility.yul\":615:616   */\n      dup1\n        /* \"#utility.yul\":608:620   */\n      revert\n        /* \"#utility.yul\":633:760   */\n    tag_146:\n        /* \"#utility.yul\":694:704   */\n      0x4e487b71\n        /* \"#utility.yul\":689:692   */\n      0xe0\n        /* \"#utility.yul\":685:705   */\n      shl\n        /* \"#utility.yul\":682:683   */\n      0x00\n        /* \"#utility.yul\":675:706   */\n      mstore\n        /* \"#utility.yul\":725:729   */\n      0x41\n        /* \"#utility.yul\":722:723   */\n      0x04\n        /* \"#utility.yul\":715:730   */\n      mstore\n        /* \"#utility.yul\":749:753   */\n      0x24\n        /* \"#utility.yul\":746:747   */\n      0x00\n        /* \"#utility.yul\":739:754   */\n      revert\n        /* \"#utility.yul\":765:1040   */\n    tag_147:\n        /* \"#utility.yul\":836:838   */\n      0x40\n        /* \"#utility.yul\":830:839   */\n      mload\n        /* \"#utility.yul\":901:903   */\n      0x1f\n        /* \"#utility.yul\":882:895   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":878:905   */\n      and\n        /* \"#utility.yul\":866:906   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":921:955   */\n      dup2\n      gt\n        /* \"#utility.yul\":957:979   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":918:980   */\n      or\n        /* \"#utility.yul\":915:1003   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":983:1001   */\n      tag_162\n      tag_146\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1019:1021   */\n      0x40\n        /* \"#utility.yul\":1012:1034   */\n      mstore\n        /* \"#utility.yul\":765:1040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1045:1575   */\n    tag_148:\n        /* \"#utility.yul\":1087:1092   */\n      0x00\n        /* \"#utility.yul\":1140:1143   */\n      dup3\n        /* \"#utility.yul\":1133:1137   */\n      0x1f\n        /* \"#utility.yul\":1125:1131   */\n      dup4\n        /* \"#utility.yul\":1121:1138   */\n      add\n        /* \"#utility.yul\":1117:1144   */\n      slt\n        /* \"#utility.yul\":1107:1162   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":1158:1159   */\n      0x00\n        /* \"#utility.yul\":1155:1156   */\n      dup1\n        /* \"#utility.yul\":1148:1160   */\n      revert\n        /* \"#utility.yul\":1107:1162   */\n    tag_164:\n        /* \"#utility.yul\":1181:1201   */\n      dup2\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1213:1239   */\n      dup2\n      gt\n        /* \"#utility.yul\":1210:1262   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":1242:1260   */\n      tag_166\n      tag_146\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":1286:1341   */\n      tag_167\n        /* \"#utility.yul\":1329:1331   */\n      0x1f\n        /* \"#utility.yul\":1310:1323   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1306:1333   */\n      and\n        /* \"#utility.yul\":1335:1339   */\n      0x20\n        /* \"#utility.yul\":1302:1340   */\n      add\n        /* \"#utility.yul\":1286:1341   */\n      tag_147\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1366:1368   */\n      dup2\n        /* \"#utility.yul\":1357:1364   */\n      dup2\n        /* \"#utility.yul\":1350:1369   */\n      mstore\n        /* \"#utility.yul\":1412:1415   */\n      dup5\n        /* \"#utility.yul\":1405:1409   */\n      0x20\n        /* \"#utility.yul\":1400:1402   */\n      dup4\n        /* \"#utility.yul\":1392:1398   */\n      dup7\n        /* \"#utility.yul\":1388:1403   */\n      add\n        /* \"#utility.yul\":1384:1410   */\n      add\n        /* \"#utility.yul\":1381:1416   */\n      gt\n        /* \"#utility.yul\":1378:1433   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1426:1427   */\n      dup1\n        /* \"#utility.yul\":1419:1431   */\n      revert\n        /* \"#utility.yul\":1378:1433   */\n    tag_168:\n        /* \"#utility.yul\":1494:1496   */\n      dup2\n        /* \"#utility.yul\":1487:1491   */\n      0x20\n        /* \"#utility.yul\":1479:1485   */\n      dup6\n        /* \"#utility.yul\":1475:1492   */\n      add\n        /* \"#utility.yul\":1468:1472   */\n      0x20\n        /* \"#utility.yul\":1459:1466   */\n      dup4\n        /* \"#utility.yul\":1455:1473   */\n      add\n        /* \"#utility.yul\":1442:1497   */\n      calldatacopy\n        /* \"#utility.yul\":1542:1543   */\n      0x00\n        /* \"#utility.yul\":1517:1533   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":1535:1539   */\n      0x20\n        /* \"#utility.yul\":1513:1540   */\n      add\n        /* \"#utility.yul\":1506:1544   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1521:1528   */\n      swap4\n        /* \"#utility.yul\":1045:1575   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1580:2245   */\n    tag_20:\n        /* \"#utility.yul\":1675:1681   */\n      0x00\n        /* \"#utility.yul\":1683:1689   */\n      dup1\n        /* \"#utility.yul\":1691:1697   */\n      0x00\n        /* \"#utility.yul\":1699:1705   */\n      dup1\n        /* \"#utility.yul\":1752:1755   */\n      0x80\n        /* \"#utility.yul\":1740:1749   */\n      dup6\n        /* \"#utility.yul\":1731:1738   */\n      dup8\n        /* \"#utility.yul\":1727:1750   */\n      sub\n        /* \"#utility.yul\":1723:1756   */\n      slt\n        /* \"#utility.yul\":1720:1773   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":1769:1770   */\n      0x00\n        /* \"#utility.yul\":1766:1767   */\n      dup1\n        /* \"#utility.yul\":1759:1771   */\n      revert\n        /* \"#utility.yul\":1720:1773   */\n    tag_170:\n        /* \"#utility.yul\":1808:1817   */\n      dup5\n        /* \"#utility.yul\":1795:1818   */\n      calldataload\n        /* \"#utility.yul\":1827:1858   */\n      tag_171\n        /* \"#utility.yul\":1852:1857   */\n      dup2\n        /* \"#utility.yul\":1827:1858   */\n      tag_145\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1877:1882   */\n      swap4\n      pop\n        /* \"#utility.yul\":1934:1936   */\n      0x20\n        /* \"#utility.yul\":1919:1937   */\n      dup6\n      add\n        /* \"#utility.yul\":1906:1938   */\n      calldataload\n        /* \"#utility.yul\":1947:1980   */\n      tag_172\n        /* \"#utility.yul\":1906:1938   */\n      dup2\n        /* \"#utility.yul\":1947:1980   */\n      tag_145\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1999:2006   */\n      swap3\n      pop\n        /* \"#utility.yul\":2053:2055   */\n      0x40\n        /* \"#utility.yul\":2038:2056   */\n      dup6\n      add\n        /* \"#utility.yul\":2025:2057   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2108:2110   */\n      0x60\n        /* \"#utility.yul\":2093:2111   */\n      dup6\n      add\n        /* \"#utility.yul\":2080:2112   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2124:2154   */\n      dup2\n      gt\n        /* \"#utility.yul\":2121:2171   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":2167:2168   */\n      0x00\n        /* \"#utility.yul\":2164:2165   */\n      dup1\n        /* \"#utility.yul\":2157:2169   */\n      revert\n        /* \"#utility.yul\":2121:2171   */\n    tag_173:\n        /* \"#utility.yul\":2190:2239   */\n      tag_174\n        /* \"#utility.yul\":2231:2238   */\n      dup8\n        /* \"#utility.yul\":2222:2228   */\n      dup3\n        /* \"#utility.yul\":2211:2220   */\n      dup9\n        /* \"#utility.yul\":2207:2229   */\n      add\n        /* \"#utility.yul\":2190:2239   */\n      tag_148\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":2180:2239   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1580:2245   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2457:3132   */\n    tag_26:\n        /* \"#utility.yul\":2560:2566   */\n      0x00\n        /* \"#utility.yul\":2568:2574   */\n      dup1\n        /* \"#utility.yul\":2576:2582   */\n      0x00\n        /* \"#utility.yul\":2584:2590   */\n      dup1\n        /* \"#utility.yul\":2592:2598   */\n      0x00\n        /* \"#utility.yul\":2645:2648   */\n      0xa0\n        /* \"#utility.yul\":2633:2642   */\n      dup7\n        /* \"#utility.yul\":2624:2631   */\n      dup9\n        /* \"#utility.yul\":2620:2643   */\n      sub\n        /* \"#utility.yul\":2616:2649   */\n      slt\n        /* \"#utility.yul\":2613:2666   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":2662:2663   */\n      0x00\n        /* \"#utility.yul\":2659:2660   */\n      dup1\n        /* \"#utility.yul\":2652:2664   */\n      revert\n        /* \"#utility.yul\":2613:2666   */\n    tag_177:\n        /* \"#utility.yul\":2701:2710   */\n      dup6\n        /* \"#utility.yul\":2688:2711   */\n      calldataload\n        /* \"#utility.yul\":2720:2751   */\n      tag_178\n        /* \"#utility.yul\":2745:2750   */\n      dup2\n        /* \"#utility.yul\":2720:2751   */\n      tag_145\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2770:2775   */\n      swap5\n      pop\n        /* \"#utility.yul\":2827:2829   */\n      0x20\n        /* \"#utility.yul\":2812:2830   */\n      dup7\n      add\n        /* \"#utility.yul\":2799:2831   */\n      calldataload\n        /* \"#utility.yul\":2840:2873   */\n      tag_179\n        /* \"#utility.yul\":2799:2831   */\n      dup2\n        /* \"#utility.yul\":2840:2873   */\n      tag_145\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2892:2899   */\n      swap4\n      pop\n        /* \"#utility.yul\":2951:2953   */\n      0x40\n        /* \"#utility.yul\":2936:2954   */\n      dup7\n      add\n        /* \"#utility.yul\":2923:2955   */\n      calldataload\n        /* \"#utility.yul\":2964:2997   */\n      tag_180\n        /* \"#utility.yul\":2923:2955   */\n      dup2\n        /* \"#utility.yul\":2964:2997   */\n      tag_145\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2457:3132   */\n      swap5\n      swap8\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":3016:3023   */\n      swap4\n      swap5\n        /* \"#utility.yul\":3070:3072   */\n      0x60\n        /* \"#utility.yul\":3055:3073   */\n      dup2\n      add\n        /* \"#utility.yul\":3042:3074   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":3121:3124   */\n      0x80\n        /* \"#utility.yul\":3106:3125   */\n      add\n        /* \"#utility.yul\":3093:3126   */\n      calldataload\n      swap3\n        /* \"#utility.yul\":2457:3132   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3137:3320   */\n    tag_149:\n        /* \"#utility.yul\":3197:3201   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3219:3249   */\n      dup3\n      gt\n        /* \"#utility.yul\":3216:3272   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":3252:3270   */\n      tag_183\n      tag_146\n      jump\t// in\n    tag_183:\n      pop\n        /* \"#utility.yul\":3297:3298   */\n      0x05\n        /* \"#utility.yul\":3293:3307   */\n      shl\n        /* \"#utility.yul\":3309:3313   */\n      0x20\n        /* \"#utility.yul\":3289:3314   */\n      add\n      swap1\n        /* \"#utility.yul\":3137:3320   */\n      jump\t// out\n        /* \"#utility.yul\":3325:3987   */\n    tag_150:\n        /* \"#utility.yul\":3379:3384   */\n      0x00\n        /* \"#utility.yul\":3432:3435   */\n      dup3\n        /* \"#utility.yul\":3425:3429   */\n      0x1f\n        /* \"#utility.yul\":3417:3423   */\n      dup4\n        /* \"#utility.yul\":3413:3430   */\n      add\n        /* \"#utility.yul\":3409:3436   */\n      slt\n        /* \"#utility.yul\":3399:3454   */\n      tag_185\n      jumpi\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3447:3448   */\n      dup1\n        /* \"#utility.yul\":3440:3452   */\n      revert\n        /* \"#utility.yul\":3399:3454   */\n    tag_185:\n        /* \"#utility.yul\":3486:3492   */\n      dup2\n        /* \"#utility.yul\":3473:3493   */\n      calldataload\n        /* \"#utility.yul\":3512:3516   */\n      0x20\n        /* \"#utility.yul\":3536:3596   */\n      tag_186\n        /* \"#utility.yul\":3552:3595   */\n      tag_187\n        /* \"#utility.yul\":3592:3594   */\n      dup4\n        /* \"#utility.yul\":3552:3595   */\n      tag_149\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":3536:3596   */\n      tag_147\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":3630:3645   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":3716:3717   */\n      0x05\n        /* \"#utility.yul\":3712:3722   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":3700:3723   */\n      dup5\n      add\n        /* \"#utility.yul\":3696:3728   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":3661:3673   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3740:3755   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3737:3772   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":3768:3769   */\n      0x00\n        /* \"#utility.yul\":3765:3766   */\n      dup1\n        /* \"#utility.yul\":3758:3770   */\n      revert\n        /* \"#utility.yul\":3737:3772   */\n    tag_188:\n        /* \"#utility.yul\":3804:3806   */\n      dup3\n        /* \"#utility.yul\":3796:3802   */\n      dup7\n        /* \"#utility.yul\":3792:3807   */\n      add\n        /* \"#utility.yul\":3816:3958   */\n    tag_189:\n        /* \"#utility.yul\":3832:3838   */\n      dup5\n        /* \"#utility.yul\":3827:3830   */\n      dup2\n        /* \"#utility.yul\":3824:3839   */\n      lt\n        /* \"#utility.yul\":3816:3958   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":3898:3915   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3886:3916   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3936:3948   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3849:3861   */\n      dup4\n      add\n        /* \"#utility.yul\":3816:3958   */\n      jump(tag_189)\n    tag_191:\n      pop\n        /* \"#utility.yul\":3976:3981   */\n      swap7\n        /* \"#utility.yul\":3325:3987   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3992:4821   */\n    tag_151:\n        /* \"#utility.yul\":4044:4049   */\n      0x00\n        /* \"#utility.yul\":4097:4100   */\n      dup3\n        /* \"#utility.yul\":4090:4094   */\n      0x1f\n        /* \"#utility.yul\":4082:4088   */\n      dup4\n        /* \"#utility.yul\":4078:4095   */\n      add\n        /* \"#utility.yul\":4074:4101   */\n      slt\n        /* \"#utility.yul\":4064:4119   */\n      tag_193\n      jumpi\n        /* \"#utility.yul\":4115:4116   */\n      0x00\n        /* \"#utility.yul\":4112:4113   */\n      dup1\n        /* \"#utility.yul\":4105:4117   */\n      revert\n        /* \"#utility.yul\":4064:4119   */\n    tag_193:\n        /* \"#utility.yul\":4151:4157   */\n      dup2\n        /* \"#utility.yul\":4138:4158   */\n      calldataload\n        /* \"#utility.yul\":4177:4181   */\n      0x20\n        /* \"#utility.yul\":4201:4261   */\n      tag_194\n        /* \"#utility.yul\":4217:4260   */\n      tag_187\n        /* \"#utility.yul\":4257:4259   */\n      dup4\n        /* \"#utility.yul\":4217:4260   */\n      tag_149\n      jump\t// in\n        /* \"#utility.yul\":4201:4261   */\n    tag_194:\n        /* \"#utility.yul\":4295:4310   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":4381:4382   */\n      0x05\n        /* \"#utility.yul\":4377:4387   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":4365:4388   */\n      dup5\n      add\n        /* \"#utility.yul\":4361:4393   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":4326:4338   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4405:4420   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":4402:4437   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":4433:4434   */\n      0x00\n        /* \"#utility.yul\":4430:4431   */\n      dup1\n        /* \"#utility.yul\":4423:4435   */\n      revert\n        /* \"#utility.yul\":4402:4437   */\n    tag_196:\n        /* \"#utility.yul\":4469:4471   */\n      dup3\n        /* \"#utility.yul\":4461:4467   */\n      dup7\n        /* \"#utility.yul\":4457:4472   */\n      add\n        /* \"#utility.yul\":4481:4792   */\n    tag_197:\n        /* \"#utility.yul\":4497:4503   */\n      dup5\n        /* \"#utility.yul\":4492:4495   */\n      dup2\n        /* \"#utility.yul\":4489:4504   */\n      lt\n        /* \"#utility.yul\":4481:4792   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":4577:4580   */\n      dup1\n        /* \"#utility.yul\":4564:4581   */\n      calldataload\n        /* \"#utility.yul\":4625:4629   */\n      0xff\n        /* \"#utility.yul\":4618:4623   */\n      dup2\n        /* \"#utility.yul\":4614:4630   */\n      and\n        /* \"#utility.yul\":4607:4612   */\n      dup2\n        /* \"#utility.yul\":4604:4631   */\n      eq\n        /* \"#utility.yul\":4594:4719   */\n      tag_200\n      jumpi\n        /* \"#utility.yul\":4673:4674   */\n      0x00\n        /* \"#utility.yul\":4702:4704   */\n      dup1\n        /* \"#utility.yul\":4698:4700   */\n      dup2\n        /* \"#utility.yul\":4691:4705   */\n      revert\n        /* \"#utility.yul\":4594:4719   */\n    tag_200:\n        /* \"#utility.yul\":4732:4750   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4770:4782   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":4514:4526   */\n      dup4\n      add\n        /* \"#utility.yul\":4481:4792   */\n      jump(tag_197)\n        /* \"#utility.yul\":4826:6545   */\n    tag_30:\n        /* \"#utility.yul\":4994:5000   */\n      0x00\n        /* \"#utility.yul\":5002:5008   */\n      dup1\n        /* \"#utility.yul\":5010:5016   */\n      0x00\n        /* \"#utility.yul\":5018:5024   */\n      dup1\n        /* \"#utility.yul\":5026:5032   */\n      0x00\n        /* \"#utility.yul\":5079:5082   */\n      0xa0\n        /* \"#utility.yul\":5067:5076   */\n      dup7\n        /* \"#utility.yul\":5058:5065   */\n      dup9\n        /* \"#utility.yul\":5054:5077   */\n      sub\n        /* \"#utility.yul\":5050:5083   */\n      slt\n        /* \"#utility.yul\":5047:5100   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":5096:5097   */\n      0x00\n        /* \"#utility.yul\":5093:5094   */\n      dup1\n        /* \"#utility.yul\":5086:5098   */\n      revert\n        /* \"#utility.yul\":5047:5100   */\n    tag_202:\n        /* \"#utility.yul\":5135:5144   */\n      dup6\n        /* \"#utility.yul\":5122:5145   */\n      calldataload\n        /* \"#utility.yul\":5154:5185   */\n      tag_203\n        /* \"#utility.yul\":5179:5184   */\n      dup2\n        /* \"#utility.yul\":5154:5185   */\n      tag_145\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5204:5209   */\n      swap5\n      pop\n        /* \"#utility.yul\":5228:5230   */\n      0x20\n        /* \"#utility.yul\":5267:5285   */\n      dup7\n      dup2\n      add\n        /* \"#utility.yul\":5254:5286   */\n      calldataload\n        /* \"#utility.yul\":5295:5328   */\n      tag_204\n        /* \"#utility.yul\":5254:5286   */\n      dup2\n        /* \"#utility.yul\":5295:5328   */\n      tag_145\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":5347:5354   */\n      swap5\n      pop\n        /* \"#utility.yul\":5405:5407   */\n      0x40\n        /* \"#utility.yul\":5390:5408   */\n      dup8\n      add\n        /* \"#utility.yul\":5377:5409   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":5458:5472   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5455:5489   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":5485:5486   */\n      0x00\n        /* \"#utility.yul\":5482:5483   */\n      dup1\n        /* \"#utility.yul\":5475:5487   */\n      revert\n        /* \"#utility.yul\":5455:5489   */\n    tag_205:\n        /* \"#utility.yul\":5523:5529   */\n      dup2\n        /* \"#utility.yul\":5512:5521   */\n      dup10\n        /* \"#utility.yul\":5508:5530   */\n      add\n        /* \"#utility.yul\":5498:5530   */\n      swap2\n      pop\n        /* \"#utility.yul\":5568:5575   */\n      dup10\n        /* \"#utility.yul\":5561:5565   */\n      0x1f\n        /* \"#utility.yul\":5557:5559   */\n      dup4\n        /* \"#utility.yul\":5553:5566   */\n      add\n        /* \"#utility.yul\":5549:5576   */\n      slt\n        /* \"#utility.yul\":5539:5594   */\n      tag_206\n      jumpi\n        /* \"#utility.yul\":5590:5591   */\n      0x00\n        /* \"#utility.yul\":5587:5588   */\n      dup1\n        /* \"#utility.yul\":5580:5592   */\n      revert\n        /* \"#utility.yul\":5539:5594   */\n    tag_206:\n        /* \"#utility.yul\":5626:5628   */\n      dup2\n        /* \"#utility.yul\":5613:5629   */\n      calldataload\n        /* \"#utility.yul\":5649:5709   */\n      tag_207\n        /* \"#utility.yul\":5665:5708   */\n      tag_187\n        /* \"#utility.yul\":5705:5707   */\n      dup3\n        /* \"#utility.yul\":5665:5708   */\n      tag_149\n      jump\t// in\n        /* \"#utility.yul\":5649:5709   */\n    tag_207:\n        /* \"#utility.yul\":5743:5758   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":5825:5826   */\n      0x05\n        /* \"#utility.yul\":5821:5831   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":5813:5832   */\n      dup4\n      add\n        /* \"#utility.yul\":5809:5837   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":5774:5786   */\n      dup5\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":5849:5868   */\n      dup13\n      dup4\n      gt\n        /* \"#utility.yul\":5846:5885   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":5881:5882   */\n      0x00\n        /* \"#utility.yul\":5878:5879   */\n      dup1\n        /* \"#utility.yul\":5871:5883   */\n      revert\n        /* \"#utility.yul\":5846:5885   */\n    tag_209:\n        /* \"#utility.yul\":5905:5916   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":5925:6148   */\n    tag_210:\n        /* \"#utility.yul\":5941:5947   */\n      dup3\n        /* \"#utility.yul\":5936:5939   */\n      dup6\n        /* \"#utility.yul\":5933:5948   */\n      lt\n        /* \"#utility.yul\":5925:6148   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":6023:6026   */\n      dup5\n        /* \"#utility.yul\":6010:6027   */\n      calldataload\n        /* \"#utility.yul\":6040:6073   */\n      tag_213\n        /* \"#utility.yul\":6065:6072   */\n      dup2\n        /* \"#utility.yul\":6040:6073   */\n      tag_145\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":6086:6106   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5958:5970   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":6126:6138   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":5925:6148   */\n      jump(tag_210)\n    tag_212:\n        /* \"#utility.yul\":6167:6172   */\n      swap8\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6225:6227   */\n      0x60\n        /* \"#utility.yul\":6210:6228   */\n      dup10\n      add\n        /* \"#utility.yul\":6197:6229   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":6241:6257   */\n      dup1\n      dup4\n      gt\n        /* \"#utility.yul\":6238:6274   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":6270:6271   */\n      0x00\n        /* \"#utility.yul\":6267:6268   */\n      dup1\n        /* \"#utility.yul\":6260:6272   */\n      revert\n        /* \"#utility.yul\":6238:6274   */\n    tag_214:\n        /* \"#utility.yul\":6293:6356   */\n      tag_215\n        /* \"#utility.yul\":6348:6355   */\n      dup11\n        /* \"#utility.yul\":6337:6345   */\n      dup5\n        /* \"#utility.yul\":6326:6335   */\n      dup12\n        /* \"#utility.yul\":6322:6346   */\n      add\n        /* \"#utility.yul\":6293:6356   */\n      tag_150\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":6283:6356   */\n      swap5\n      pop\n        /* \"#utility.yul\":6409:6412   */\n      0x80\n        /* \"#utility.yul\":6398:6407   */\n      dup10\n        /* \"#utility.yul\":6394:6413   */\n      add\n        /* \"#utility.yul\":6381:6414   */\n      calldataload\n        /* \"#utility.yul\":6365:6414   */\n      swap3\n      pop\n        /* \"#utility.yul\":6439:6441   */\n      dup1\n        /* \"#utility.yul\":6429:6437   */\n      dup4\n        /* \"#utility.yul\":6426:6442   */\n      gt\n        /* \"#utility.yul\":6423:6459   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":6455:6456   */\n      0x00\n        /* \"#utility.yul\":6452:6453   */\n      dup1\n        /* \"#utility.yul\":6445:6457   */\n      revert\n        /* \"#utility.yul\":6423:6459   */\n    tag_216:\n      pop\n      pop\n        /* \"#utility.yul\":6478:6539   */\n      tag_217\n        /* \"#utility.yul\":6531:6538   */\n      dup9\n        /* \"#utility.yul\":6520:6528   */\n      dup3\n        /* \"#utility.yul\":6509:6518   */\n      dup10\n        /* \"#utility.yul\":6505:6529   */\n      add\n        /* \"#utility.yul\":6478:6539   */\n      tag_151\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":6468:6539   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4826:6545   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6758:7829   */\n    tag_40:\n        /* \"#utility.yul\":6912:6918   */\n      0x00\n        /* \"#utility.yul\":6920:6926   */\n      dup1\n        /* \"#utility.yul\":6928:6934   */\n      0x00\n        /* \"#utility.yul\":6936:6942   */\n      dup1\n        /* \"#utility.yul\":6944:6950   */\n      0x00\n        /* \"#utility.yul\":6997:7000   */\n      0xa0\n        /* \"#utility.yul\":6985:6994   */\n      dup7\n        /* \"#utility.yul\":6976:6983   */\n      dup9\n        /* \"#utility.yul\":6972:6995   */\n      sub\n        /* \"#utility.yul\":6968:7001   */\n      slt\n        /* \"#utility.yul\":6965:7018   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":7014:7015   */\n      0x00\n        /* \"#utility.yul\":7011:7012   */\n      dup1\n        /* \"#utility.yul\":7004:7016   */\n      revert\n        /* \"#utility.yul\":6965:7018   */\n    tag_220:\n        /* \"#utility.yul\":7053:7062   */\n      dup6\n        /* \"#utility.yul\":7040:7063   */\n      calldataload\n        /* \"#utility.yul\":7072:7103   */\n      tag_221\n        /* \"#utility.yul\":7097:7102   */\n      dup2\n        /* \"#utility.yul\":7072:7103   */\n      tag_145\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":7122:7127   */\n      swap5\n      pop\n        /* \"#utility.yul\":7179:7181   */\n      0x20\n        /* \"#utility.yul\":7164:7182   */\n      dup7\n      add\n        /* \"#utility.yul\":7151:7183   */\n      calldataload\n        /* \"#utility.yul\":7192:7225   */\n      tag_222\n        /* \"#utility.yul\":7151:7183   */\n      dup2\n        /* \"#utility.yul\":7192:7225   */\n      tag_145\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":7244:7251   */\n      swap4\n      pop\n        /* \"#utility.yul\":7302:7304   */\n      0x40\n        /* \"#utility.yul\":7287:7305   */\n      dup7\n      add\n        /* \"#utility.yul\":7274:7306   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":7355:7369   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7352:7386   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":7382:7383   */\n      0x00\n        /* \"#utility.yul\":7379:7380   */\n      dup1\n        /* \"#utility.yul\":7372:7384   */\n      revert\n        /* \"#utility.yul\":7352:7386   */\n    tag_223:\n        /* \"#utility.yul\":7405:7466   */\n      tag_224\n        /* \"#utility.yul\":7458:7465   */\n      dup10\n        /* \"#utility.yul\":7449:7455   */\n      dup4\n        /* \"#utility.yul\":7438:7447   */\n      dup11\n        /* \"#utility.yul\":7434:7456   */\n      add\n        /* \"#utility.yul\":7405:7466   */\n      tag_150\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":7395:7466   */\n      swap5\n      pop\n        /* \"#utility.yul\":7519:7521   */\n      0x60\n        /* \"#utility.yul\":7508:7517   */\n      dup9\n        /* \"#utility.yul\":7504:7522   */\n      add\n        /* \"#utility.yul\":7491:7523   */\n      calldataload\n        /* \"#utility.yul\":7475:7523   */\n      swap2\n      pop\n        /* \"#utility.yul\":7548:7550   */\n      dup1\n        /* \"#utility.yul\":7538:7546   */\n      dup3\n        /* \"#utility.yul\":7535:7551   */\n      gt\n        /* \"#utility.yul\":7532:7568   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":7564:7565   */\n      0x00\n        /* \"#utility.yul\":7561:7562   */\n      dup1\n        /* \"#utility.yul\":7554:7566   */\n      revert\n        /* \"#utility.yul\":7532:7568   */\n    tag_225:\n        /* \"#utility.yul\":7587:7650   */\n      tag_226\n        /* \"#utility.yul\":7642:7649   */\n      dup10\n        /* \"#utility.yul\":7631:7639   */\n      dup4\n        /* \"#utility.yul\":7620:7629   */\n      dup11\n        /* \"#utility.yul\":7616:7640   */\n      add\n        /* \"#utility.yul\":7587:7650   */\n      tag_150\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":7577:7650   */\n      swap4\n      pop\n        /* \"#utility.yul\":7703:7706   */\n      0x80\n        /* \"#utility.yul\":7692:7701   */\n      dup9\n        /* \"#utility.yul\":7688:7707   */\n      add\n        /* \"#utility.yul\":7675:7708   */\n      calldataload\n        /* \"#utility.yul\":7659:7708   */\n      swap2\n      pop\n        /* \"#utility.yul\":7733:7735   */\n      dup1\n        /* \"#utility.yul\":7723:7731   */\n      dup3\n        /* \"#utility.yul\":7720:7736   */\n      gt\n        /* \"#utility.yul\":7717:7753   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":7749:7750   */\n      0x00\n        /* \"#utility.yul\":7746:7747   */\n      dup1\n        /* \"#utility.yul\":7739:7751   */\n      revert\n        /* \"#utility.yul\":7717:7753   */\n    tag_227:\n      pop\n        /* \"#utility.yul\":7772:7823   */\n      tag_217\n        /* \"#utility.yul\":7815:7822   */\n      dup9\n        /* \"#utility.yul\":7804:7812   */\n      dup3\n        /* \"#utility.yul\":7793:7802   */\n      dup10\n        /* \"#utility.yul\":7789:7813   */\n      add\n        /* \"#utility.yul\":7772:7823   */\n      tag_148\n      jump\t// in\n        /* \"#utility.yul\":7834:8568   */\n    tag_45:\n        /* \"#utility.yul\":7938:7944   */\n      0x00\n        /* \"#utility.yul\":7946:7952   */\n      dup1\n        /* \"#utility.yul\":7954:7960   */\n      0x00\n        /* \"#utility.yul\":7962:7968   */\n      dup1\n        /* \"#utility.yul\":7970:7976   */\n      0x00\n        /* \"#utility.yul\":8023:8026   */\n      0xa0\n        /* \"#utility.yul\":8011:8020   */\n      dup7\n        /* \"#utility.yul\":8002:8009   */\n      dup9\n        /* \"#utility.yul\":7998:8021   */\n      sub\n        /* \"#utility.yul\":7994:8027   */\n      slt\n        /* \"#utility.yul\":7991:8044   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":8040:8041   */\n      0x00\n        /* \"#utility.yul\":8037:8038   */\n      dup1\n        /* \"#utility.yul\":8030:8042   */\n      revert\n        /* \"#utility.yul\":7991:8044   */\n    tag_230:\n        /* \"#utility.yul\":8079:8088   */\n      dup6\n        /* \"#utility.yul\":8066:8089   */\n      calldataload\n        /* \"#utility.yul\":8098:8129   */\n      tag_231\n        /* \"#utility.yul\":8123:8128   */\n      dup2\n        /* \"#utility.yul\":8098:8129   */\n      tag_145\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":8148:8153   */\n      swap5\n      pop\n        /* \"#utility.yul\":8205:8207   */\n      0x20\n        /* \"#utility.yul\":8190:8208   */\n      dup7\n      add\n        /* \"#utility.yul\":8177:8209   */\n      calldataload\n        /* \"#utility.yul\":8218:8251   */\n      tag_232\n        /* \"#utility.yul\":8177:8209   */\n      dup2\n        /* \"#utility.yul\":8218:8251   */\n      tag_145\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":8270:8277   */\n      swap4\n      pop\n        /* \"#utility.yul\":8324:8326   */\n      0x40\n        /* \"#utility.yul\":8309:8327   */\n      dup7\n      add\n        /* \"#utility.yul\":8296:8328   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":8375:8377   */\n      0x60\n        /* \"#utility.yul\":8360:8378   */\n      dup7\n      add\n        /* \"#utility.yul\":8347:8379   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":8430:8433   */\n      0x80\n        /* \"#utility.yul\":8415:8434   */\n      dup7\n      add\n        /* \"#utility.yul\":8402:8435   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":8447:8477   */\n      dup2\n      gt\n        /* \"#utility.yul\":8444:8494   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":8490:8491   */\n      0x00\n        /* \"#utility.yul\":8487:8488   */\n      dup1\n        /* \"#utility.yul\":8480:8492   */\n      revert\n        /* \"#utility.yul\":8444:8494   */\n    tag_233:\n        /* \"#utility.yul\":8513:8562   */\n      tag_217\n        /* \"#utility.yul\":8554:8561   */\n      dup9\n        /* \"#utility.yul\":8545:8551   */\n      dup3\n        /* \"#utility.yul\":8534:8543   */\n      dup10\n        /* \"#utility.yul\":8530:8552   */\n      add\n        /* \"#utility.yul\":8513:8562   */\n      tag_148\n      jump\t// in\n        /* \"#utility.yul\":8573:8820   */\n    tag_50:\n        /* \"#utility.yul\":8632:8638   */\n      0x00\n        /* \"#utility.yul\":8685:8687   */\n      0x20\n        /* \"#utility.yul\":8673:8682   */\n      dup3\n        /* \"#utility.yul\":8664:8671   */\n      dup5\n        /* \"#utility.yul\":8660:8683   */\n      sub\n        /* \"#utility.yul\":8656:8688   */\n      slt\n        /* \"#utility.yul\":8653:8705   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":8701:8702   */\n      0x00\n        /* \"#utility.yul\":8698:8699   */\n      dup1\n        /* \"#utility.yul\":8691:8703   */\n      revert\n        /* \"#utility.yul\":8653:8705   */\n    tag_236:\n        /* \"#utility.yul\":8740:8749   */\n      dup2\n        /* \"#utility.yul\":8727:8750   */\n      calldataload\n        /* \"#utility.yul\":8759:8790   */\n      tag_155\n        /* \"#utility.yul\":8784:8789   */\n      dup2\n        /* \"#utility.yul\":8759:8790   */\n      tag_145\n      jump\t// in\n        /* \"#utility.yul\":8825:9208   */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9091:9106   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":9073:9107   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9143:9158   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":9138:9140   */\n      0x20\n        /* \"#utility.yul\":9123:9141   */\n      dup3\n      add\n        /* \"#utility.yul\":9116:9159   */\n      mstore\n        /* \"#utility.yul\":9190:9192   */\n      0x40\n        /* \"#utility.yul\":9175:9193   */\n      dup2\n      add\n        /* \"#utility.yul\":9168:9202   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":9023:9025   */\n      0x60\n        /* \"#utility.yul\":9008:9026   */\n      add\n      swap1\n        /* \"#utility.yul\":8825:9208   */\n      jump\t// out\n        /* \"#utility.yul\":9213:9490   */\n    tag_64:\n        /* \"#utility.yul\":9280:9286   */\n      0x00\n        /* \"#utility.yul\":9333:9335   */\n      0x20\n        /* \"#utility.yul\":9321:9330   */\n      dup3\n        /* \"#utility.yul\":9312:9319   */\n      dup5\n        /* \"#utility.yul\":9308:9331   */\n      sub\n        /* \"#utility.yul\":9304:9336   */\n      slt\n        /* \"#utility.yul\":9301:9353   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":9349:9350   */\n      0x00\n        /* \"#utility.yul\":9346:9347   */\n      dup1\n        /* \"#utility.yul\":9339:9351   */\n      revert\n        /* \"#utility.yul\":9301:9353   */\n    tag_240:\n        /* \"#utility.yul\":9381:9390   */\n      dup2\n        /* \"#utility.yul\":9375:9391   */\n      mload\n        /* \"#utility.yul\":9434:9439   */\n      dup1\n        /* \"#utility.yul\":9427:9440   */\n      iszero\n        /* \"#utility.yul\":9420:9441   */\n      iszero\n        /* \"#utility.yul\":9413:9418   */\n      dup2\n        /* \"#utility.yul\":9410:9442   */\n      eq\n        /* \"#utility.yul\":9400:9460   */\n      tag_155\n      jumpi\n        /* \"#utility.yul\":9456:9457   */\n      0x00\n        /* \"#utility.yul\":9453:9454   */\n      dup1\n        /* \"#utility.yul\":9446:9458   */\n      revert\n        /* \"#utility.yul\":11810:11937   */\n    tag_97:\n        /* \"#utility.yul\":11871:11881   */\n      0x4e487b71\n        /* \"#utility.yul\":11866:11869   */\n      0xe0\n        /* \"#utility.yul\":11862:11882   */\n      shl\n        /* \"#utility.yul\":11859:11860   */\n      0x00\n        /* \"#utility.yul\":11852:11883   */\n      mstore\n        /* \"#utility.yul\":11902:11906   */\n      0x32\n        /* \"#utility.yul\":11899:11900   */\n      0x04\n        /* \"#utility.yul\":11892:11907   */\n      mstore\n        /* \"#utility.yul\":11926:11930   */\n      0x24\n        /* \"#utility.yul\":11923:11924   */\n      0x00\n        /* \"#utility.yul\":11916:11931   */\n      revert\n        /* \"#utility.yul\":12626:12858   */\n    tag_118:\n        /* \"#utility.yul\":12665:12668   */\n      0x00\n        /* \"#utility.yul\":12686:12703   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":12683:12823   */\n      tag_251\n      jumpi\n        /* \"#utility.yul\":12745:12755   */\n      0x4e487b71\n        /* \"#utility.yul\":12740:12743   */\n      0xe0\n        /* \"#utility.yul\":12736:12756   */\n      shl\n        /* \"#utility.yul\":12733:12734   */\n      0x00\n        /* \"#utility.yul\":12726:12757   */\n      mstore\n        /* \"#utility.yul\":12780:12784   */\n      0x11\n        /* \"#utility.yul\":12777:12778   */\n      0x04\n        /* \"#utility.yul\":12770:12785   */\n      mstore\n        /* \"#utility.yul\":12808:12812   */\n      0x24\n        /* \"#utility.yul\":12805:12806   */\n      0x00\n        /* \"#utility.yul\":12798:12813   */\n      revert\n        /* \"#utility.yul\":12683:12823   */\n    tag_251:\n      pop\n        /* \"#utility.yul\":12850:12851   */\n      0x01\n        /* \"#utility.yul\":12839:12852   */\n      add\n      swap1\n        /* \"#utility.yul\":12626:12858   */\n      jump\t// out\n        /* \"#utility.yul\":12863:13219   */\n    tag_125:\n        /* \"#utility.yul\":13065:13067   */\n      0x20\n        /* \"#utility.yul\":13047:13068   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13084:13102   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":13077:13107   */\n      mstore\n        /* \"#utility.yul\":13143:13177   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13138:13140   */\n      0x40\n        /* \"#utility.yul\":13123:13141   */\n      dup3\n      add\n        /* \"#utility.yul\":13116:13178   */\n      mstore\n        /* \"#utility.yul\":13210:13212   */\n      0x60\n        /* \"#utility.yul\":13195:13213   */\n      add\n      swap1\n        /* \"#utility.yul\":12863:13219   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208fad268cf4d4d8854b7a222c1c976591507dc1497ec014996c020a91747f990764736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_603": {
									"entryPoint": null,
									"id": 603,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 31,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610da08061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c806301ffc9a714610088578063150b7a02146100b05780632e3f4a5d146100e7578063407299d7146100fc578063715018a61461010f5780638da5cb5b14610117578063bc197c8114610137578063f23a6e6114610156578063f2fde38b14610175575b600080fd5b61009b6100963660046107c6565b610188565b60405190151581526020015b60405180910390f35b6100ce6100be3660046108c1565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020016100a7565b6100fa6100f536600461092c565b6101bf565b005b6100fa61010a366004610a80565b610475565b6100fa61068c565b61011f6106c7565b6040516001600160a01b0390911681526020016100a7565b6100ce610145366004610b8d565b63bc197c8160e01b95945050505050565b6100ce610164366004610c2d565b63f23a6e6160e01b95945050505050565b6100fa610183366004610c95565b6106d6565b60006001600160e01b03198216630271189760e51b14806101b957506301ffc9a760e01b6001600160e01b03198316145b92915050565b6001600160a01b03831615610377576040516323b872dd60e01b81526001600160a01b038416906323b872dd906101fe90889088908790600401610cb2565b6020604051808303816000875af115801561021d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102419190610cd6565b6102a05760405162461bcd60e51b815260206004820152602560248201527f5472616e73666572206f6620746f6b656e7320746f2072656365697665722066604482015264185a5b195960da1b60648201526084015b60405180910390fd5b826001600160a01b03166323b872dd866102b86106c7565b846040518463ffffffff1660e01b81526004016102d793929190610cb2565b6020604051808303816000875af11580156102f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031a9190610cd6565b6103725760405162461bcd60e51b815260206004820152602360248201527f5472616e73666572206f6620746f6b656e7320746f20537461746572206661696044820152621b195960ea1b6064820152608401610297565b61046e565b6040516001600160a01b0385169083156108fc029084906000818181858888f193505050506103f35760405162461bcd60e51b815260206004820152602260248201527f5472616e73666572206f662045544820746f207265636569766572206661696c604482015261195960f21b6064820152608401610297565b6103fb6106c7565b6001600160a01b03166108fc829081150290604051600060405180830381858888f1935050505061046e5760405162461bcd60e51b815260206004820181905260248201527f5472616e73666572206f662045544820746f20537461746572206661696c65646044820152606401610297565b5050505050565b82518251811480156104875750808251145b6104d35760405162461bcd60e51b815260206004820181905260248201527f546f6b656e20696e666f732070726f76696465642061726520696e76616c69646044820152606401610297565b60005b81811015610683578281815181106104f0576104f0610cf8565b602002602001015160ff1660000361059b5784818151811061051457610514610cf8565b60200260200101516001600160a01b03166342842e0e888887858151811061053e5761053e610cf8565b60200260200101516040518463ffffffff1660e01b815260040161056493929190610cb2565b600060405180830381600087803b15801561057e57600080fd5b505af1158015610592573d6000803e3d6000fd5b50505050610673565b8481815181106105ad576105ad610cf8565b60200260200101516001600160a01b031663f242432a88888785815181106105d7576105d7610cf8565b602002602001015160016040518563ffffffff1660e01b815260040161064094939291906001600160a01b0394851681529290931660208301526040820152606081019190915260a060808201819052600490820152630307830360e41b60c082015260e00190565b600060405180830381600087803b15801561065a57600080fd5b505af115801561066e573d6000803e3d6000fd5b505050505b61067c81610d0e565b90506104d6565b50505050505050565b336106956106c7565b6001600160a01b0316146106bb5760405162461bcd60e51b815260040161029790610d35565b6106c56000610776565b565b6000546001600160a01b031690565b336106df6106c7565b6001600160a01b0316146107055760405162461bcd60e51b815260040161029790610d35565b6001600160a01b03811661076a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610297565b61077381610776565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156107d857600080fd5b81356001600160e01b0319811681146107f057600080fd5b9392505050565b6001600160a01b038116811461077357600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561084a5761084a61080c565b604052919050565b600082601f83011261086357600080fd5b81356001600160401b0381111561087c5761087c61080c565b61088f601f8201601f1916602001610822565b8181528460208386010111156108a457600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156108d757600080fd5b84356108e2816107f7565b935060208501356108f2816107f7565b92506040850135915060608501356001600160401b0381111561091457600080fd5b61092087828801610852565b91505092959194509250565b600080600080600060a0868803121561094457600080fd5b853561094f816107f7565b9450602086013561095f816107f7565b9350604086013561096f816107f7565b94979396509394606081013594506080013592915050565b60006001600160401b038211156109a0576109a061080c565b5060051b60200190565b600082601f8301126109bb57600080fd5b813560206109d06109cb83610987565b610822565b82815260059290921b840181019181810190868411156109ef57600080fd5b8286015b84811015610a0a57803583529183019183016109f3565b509695505050505050565b600082601f830112610a2657600080fd5b81356020610a366109cb83610987565b82815260059290921b84018101918181019086841115610a5557600080fd5b8286015b84811015610a0a57803560ff81168114610a735760008081fd5b8352918301918301610a59565b600080600080600060a08688031215610a9857600080fd5b8535610aa3816107f7565b9450602086810135610ab4816107f7565b945060408701356001600160401b0380821115610ad057600080fd5b818901915089601f830112610ae457600080fd5b8135610af26109cb82610987565b81815260059190911b8301840190848101908c831115610b1157600080fd5b938501935b82851015610b38578435610b29816107f7565b82529385019390850190610b16565b975050506060890135925080831115610b5057600080fd5b610b5c8a848b016109aa565b94506080890135925080831115610b7257600080fd5b5050610b8088828901610a15565b9150509295509295909350565b600080600080600060a08688031215610ba557600080fd5b8535610bb0816107f7565b94506020860135610bc0816107f7565b935060408601356001600160401b0380821115610bdc57600080fd5b610be889838a016109aa565b94506060880135915080821115610bfe57600080fd5b610c0a89838a016109aa565b93506080880135915080821115610c2057600080fd5b50610b8088828901610852565b600080600080600060a08688031215610c4557600080fd5b8535610c50816107f7565b94506020860135610c60816107f7565b9350604086013592506060860135915060808601356001600160401b03811115610c8957600080fd5b610b8088828901610852565b600060208284031215610ca757600080fd5b81356107f0816107f7565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215610ce857600080fd5b815180151581146107f057600080fd5b634e487b7160e01b600052603260045260246000fd5b600060018201610d2e57634e487b7160e01b600052601160045260246000fd5b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212208fad268cf4d4d8854b7a222c1c976591507dc1497ec014996c020a91747f990764736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x6F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xDA0 DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x83 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0x2E3F4A5D EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x407299D7 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x175 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B PUSH2 0x96 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x188 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH2 0xBE CALLDATASIZE PUSH1 0x4 PUSH2 0x8C1 JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA7 JUMP JUMPDEST PUSH2 0xFA PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x92C JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFA PUSH2 0x10A CALLDATASIZE PUSH1 0x4 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST PUSH2 0xFA PUSH2 0x68C JUMP JUMPDEST PUSH2 0x11F PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA7 JUMP JUMPDEST PUSH2 0xCE PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0xB8D JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCE PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0xC2D JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFA PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0xC95 JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0x1B9 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x377 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x1FE SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0x2A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206F6620746F6B656E7320746F2072656365697665722066 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x185A5B1959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD DUP7 PUSH2 0x2B8 PUSH2 0x6C7 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0x372 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206F6620746F6B656E7320746F2053746174657220666169 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1B1959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x297 JUMP JUMPDEST PUSH2 0x46E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206F662045544820746F207265636569766572206661696C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x297 JUMP JUMPDEST PUSH2 0x3FB PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP PUSH2 0x46E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206F662045544820746F20537461746572206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x297 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP3 MLOAD DUP3 MLOAD DUP2 EQ DUP1 ISZERO PUSH2 0x487 JUMPI POP DUP1 DUP3 MLOAD EQ JUMPDEST PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20696E666F732070726F76696465642061726520696E76616C6964 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x297 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x683 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x4F0 JUMPI PUSH2 0x4F0 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND PUSH1 0x0 SUB PUSH2 0x59B JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x514 JUMPI PUSH2 0x514 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x42842E0E DUP9 DUP9 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x53E JUMPI PUSH2 0x53E PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x564 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x592 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x673 JUMP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x5AD JUMPI PUSH2 0x5AD PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF242432A DUP9 DUP9 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x5D7 JUMPI PUSH2 0x5D7 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x640 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x3078303 PUSH1 0xE4 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x65A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x66E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x67C DUP2 PUSH2 0xD0E JUMP JUMPDEST SWAP1 POP PUSH2 0x4D6 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x695 PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH2 0x6C5 PUSH1 0x0 PUSH2 0x776 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0x6DF PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x705 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x76A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x297 JUMP JUMPDEST PUSH2 0x773 DUP2 PUSH2 0x776 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x7F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x84A JUMPI PUSH2 0x84A PUSH2 0x80C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x863 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x87C JUMPI PUSH2 0x87C PUSH2 0x80C JUMP JUMPDEST PUSH2 0x88F PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x822 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x8A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x8E2 DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x8F2 DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x920 DUP8 DUP3 DUP9 ADD PUSH2 0x852 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x944 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x94F DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x95F DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x96F DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x9A0 JUMPI PUSH2 0x9A0 PUSH2 0x80C JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x9D0 PUSH2 0x9CB DUP4 PUSH2 0x987 JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x9EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xA0A JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x9F3 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xA36 PUSH2 0x9CB DUP4 PUSH2 0x987 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xA0A JUMPI DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xA73 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xA98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0xAA3 DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 DUP2 ADD CALLDATALOAD PUSH2 0xAB4 DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xAD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP10 ADD SWAP2 POP DUP10 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAF2 PUSH2 0x9CB DUP3 PUSH2 0x987 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP13 DUP4 GT ISZERO PUSH2 0xB11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xB38 JUMPI DUP5 CALLDATALOAD PUSH2 0xB29 DUP2 PUSH2 0x7F7 JUMP JUMPDEST DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0xB16 JUMP JUMPDEST SWAP8 POP POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0xB50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB5C DUP11 DUP5 DUP12 ADD PUSH2 0x9AA JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0xB72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0xB80 DUP9 DUP3 DUP10 ADD PUSH2 0xA15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xBA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0xBB0 DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0xBC0 DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xBDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE8 DUP10 DUP4 DUP11 ADD PUSH2 0x9AA JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xBFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC0A DUP10 DUP4 DUP11 ADD PUSH2 0x9AA JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xC20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB80 DUP9 DUP3 DUP10 ADD PUSH2 0x852 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xC45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0xC50 DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0xC60 DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xC89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB80 DUP9 DUP3 DUP10 ADD PUSH2 0x852 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7F0 DUP2 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x7F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xD2E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xAD 0x26 DUP13 DELEGATECALL 0xD4 0xD8 DUP6 0x4B PUSH27 0x222C1C976591507DC1497EC014996C020A91747F990764736F6C63 NUMBER STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "430:1887:13:-:0;;;;;;;;;;;;-1:-1:-1;921:32:0;719:10:9;921:18:0;:32::i;:::-;430:1887:13;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;430:1887:13:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_603": {
									"entryPoint": null,
									"id": 603,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 1910,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@onERC1155BatchReceived_317": {
									"entryPoint": null,
									"id": 317,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_294": {
									"entryPoint": null,
									"id": 294,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC721Received_590": {
									"entryPoint": null,
									"id": 590,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 1735,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 1676,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_351": {
									"entryPoint": 392,
									"id": 351,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_636": {
									"entryPoint": null,
									"id": 636,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferItems_1123": {
									"entryPoint": 1141,
									"id": 1123,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 1750,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferTokens_1043": {
									"entryPoint": 447,
									"id": 1043,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 2474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_array_uint8_dyn": {
									"entryPoint": 2581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 2130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_payablet_addresst_uint256t_uint256": {
									"entryPoint": 2348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint8_$dyn_memory_ptr": {
									"entryPoint": 2688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 2957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 2241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 3117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 1990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3250,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 2439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 3342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 3320,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2060,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 2039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13628:15",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:217:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:15"
															},
															"nodeType": "YulIf",
															"src": "93:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "234:3:15",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "239:10:15",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:51:15"
															},
															"nodeType": "YulIf",
															"src": "199:71:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:15",
														"type": ""
													}
												],
												"src": "14:286:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:15",
														"type": ""
													}
												],
												"src": "305:187:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "542:86:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "606:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "618:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "608:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "608:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "608:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "565:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "576:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "591:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "596:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "587:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "587:11:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "600:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "583:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "583:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "572:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "572:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "555:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:50:15"
															},
															"nodeType": "YulIf",
															"src": "552:70:15"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "531:5:15",
														"type": ""
													}
												],
												"src": "497:131:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "682:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "689:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "694:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "685:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "685:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "675:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "675:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "675:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "722:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "725:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "715:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "715:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "715:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "746:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "749:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "739:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "739:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "739:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "633:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "810:230:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "820:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "836:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "830:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "830:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "820:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "848:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "870:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "886:4:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "892:2:15",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "882:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "882:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "901:2:15",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "897:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "897:7:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "878:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "878:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "866:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "866:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "852:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "981:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "983:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "983:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "983:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "924:10:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "944:2:15",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "948:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "940:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "940:10:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "952:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "936:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "936:18:15"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "921:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "921:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "960:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "972:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "957:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "918:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:62:15"
															},
															"nodeType": "YulIf",
															"src": "915:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1019:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1023:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1012:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1012:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1012:22:15"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "790:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "799:6:15",
														"type": ""
													}
												],
												"src": "765:275:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1097:478:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1146:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1155:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1158:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1148:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1148:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1148:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1125:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1133:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1140:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1117:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1117:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1110:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1110:35:15"
															},
															"nodeType": "YulIf",
															"src": "1107:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1171:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1194:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1181:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:20:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1175:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1240:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1242:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1242:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1242:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1216:2:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1228:2:15",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1232:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1224:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1224:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1236:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:18:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1213:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1213:26:15"
															},
															"nodeType": "YulIf",
															"src": "1210:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1271:70:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1314:2:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1318:4:15",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1310:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1310:13:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1329:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1325:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1325:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1306:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1306:27:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1335:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1302:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1302:38:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1286:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:55:15"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "1275:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "1357:7:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1366:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1350:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1350:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1350:19:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1417:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1426:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1429:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1419:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1419:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1419:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1392:6:15"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1400:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1388:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1388:15:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1405:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1384:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1384:26:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1412:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1381:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1381:35:15"
															},
															"nodeType": "YulIf",
															"src": "1378:55:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "1459:7:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1468:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1455:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1455:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1479:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1487:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1475:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1475:17:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1494:2:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1442:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:55:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1442:55:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "1521:7:15"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1530:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1517:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1517:16:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1535:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:27:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1542:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1506:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1506:38:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1506:38:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:16:15",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "1562:7:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1553:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1071:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1079:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1087:5:15",
														"type": ""
													}
												],
												"src": "1045:530:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1710:535:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1757:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1766:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1769:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1759:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1759:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1759:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1731:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1740:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1727:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1727:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1752:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1723:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1723:33:15"
															},
															"nodeType": "YulIf",
															"src": "1720:53:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1782:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1808:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1795:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1795:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1786:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1852:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1827:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1827:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1827:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1867:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1877:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1867:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1891:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1923:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1934:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1919:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1919:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1906:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1906:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1895:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1972:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1947:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1947:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1947:33:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1989:17:15",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1999:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1989:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2015:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2042:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2053:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2038:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2038:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2025:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2025:32:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2015:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2066:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2097:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2108:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2093:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2093:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2080:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2080:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2070:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2155:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2164:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2167:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2157:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2157:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2157:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2127:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2143:2:15",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2147:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2139:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2139:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2151:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2135:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2135:18:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2124:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2124:30:15"
															},
															"nodeType": "YulIf",
															"src": "2121:50:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2180:59:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2211:9:15"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2222:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2207:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2207:22:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2231:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2190:16:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2190:49:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2180:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1652:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1663:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1675:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1683:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1691:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1699:6:15",
														"type": ""
													}
												],
												"src": "1580:665:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2349:103:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2359:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2371:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2382:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2367:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2367:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2359:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2401:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2416:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2428:3:15",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2433:10:15",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2424:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2424:20:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2412:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2412:33:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2394:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2394:52:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2394:52:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2318:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2329:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2340:4:15",
														"type": ""
													}
												],
												"src": "2250:202:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2603:529:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2650:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2659:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2662:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2652:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2652:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2652:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2624:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2633:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2620:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2620:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2645:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2616:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:33:15"
															},
															"nodeType": "YulIf",
															"src": "2613:53:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2675:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2701:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2688:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2688:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2679:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2745:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2720:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2720:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2720:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2760:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2770:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2760:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2784:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2816:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2827:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2812:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2812:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2799:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2799:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2788:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2865:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2840:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2840:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2840:33:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2882:17:15",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2892:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2882:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2908:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2940:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2951:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2936:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2936:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2923:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2923:32:15"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "2912:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "2989:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2964:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2964:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2964:33:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3006:17:15",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "3016:7:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3006:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3032:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3059:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3070:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3055:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3055:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3042:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3042:32:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3032:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3083:43:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3110:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3121:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3106:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3106:19:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3093:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3093:33:15"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3083:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_payablet_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2537:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2548:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2560:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2568:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2576:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2584:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2592:6:15",
														"type": ""
													}
												],
												"src": "2457:675:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3206:114:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3250:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3252:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3252:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3252:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3222:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3238:2:15",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3242:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3234:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3234:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3246:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3230:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3230:18:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3219:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3219:30:15"
															},
															"nodeType": "YulIf",
															"src": "3216:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3281:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3297:1:15",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3300:6:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3293:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3293:14:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3309:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3289:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3289:25:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3281:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3186:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3197:4:15",
														"type": ""
													}
												],
												"src": "3137:183:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3389:598:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3438:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3447:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3450:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3440:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3440:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3440:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3417:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3425:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3413:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3413:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3432:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3409:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3409:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3402:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3402:35:15"
															},
															"nodeType": "YulIf",
															"src": "3399:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3463:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3486:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3473:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3473:20:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3467:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3502:14:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3512:4:15",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3506:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3525:71:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3592:2:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "3552:39:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3552:43:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3536:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3536:60:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3529:3:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3605:16:15",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "3618:3:15"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "3609:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3637:3:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3642:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3630:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3630:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3630:15:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3654:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3665:3:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3670:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3661:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3661:12:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3654:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3682:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3704:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3716:1:15",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3719:2:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3712:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3712:10:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3700:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3700:23:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3725:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3696:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3696:32:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3686:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3756:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3765:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3768:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3758:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3758:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3758:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3743:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3751:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3740:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3740:15:15"
															},
															"nodeType": "YulIf",
															"src": "3737:35:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3781:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3796:6:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3804:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3792:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3792:15:15"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3785:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3872:86:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3893:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3911:3:15"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3898:12:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3898:17:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3886:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3886:30:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3886:30:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3929:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3940:3:15"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3945:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3936:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3936:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3929:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3827:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3832:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3824:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3824:15:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3840:23:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3842:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3853:3:15"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3858:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3849:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3849:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3842:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3820:3:15",
																"statements": []
															},
															"src": "3816:142:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3967:14:15",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "3976:5:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3967:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3363:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3371:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3379:5:15",
														"type": ""
													}
												],
												"src": "3325:662:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4054:767:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4103:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4112:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4115:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4105:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4105:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4105:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4082:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4090:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4078:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4078:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4097:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4074:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4074:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4067:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4067:35:15"
															},
															"nodeType": "YulIf",
															"src": "4064:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4128:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4151:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4138:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4138:20:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4132:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4167:14:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4177:4:15",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4171:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4190:71:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4257:2:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "4217:39:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4217:43:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4201:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4201:60:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4194:3:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4270:16:15",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "4283:3:15"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "4274:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4302:3:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4307:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4295:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4295:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4295:15:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4319:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4330:3:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4335:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4326:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4326:12:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4319:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4347:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4369:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4381:1:15",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4384:2:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "4377:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4377:10:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4365:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4365:23:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4390:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4361:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4361:32:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "4351:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4421:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4430:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4433:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4423:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4423:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4423:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4408:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4416:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4405:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4405:15:15"
															},
															"nodeType": "YulIf",
															"src": "4402:35:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4446:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4461:6:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4469:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4457:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4457:15:15"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4450:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4537:255:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4551:30:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4577:3:15"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "4564:12:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4564:17:15"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "4555:5:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4645:74:15",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "4663:11:15",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4673:1:15",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_3",
																							"nodeType": "YulTypedName",
																							"src": "4667:2:15",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "4698:2:15"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "4702:2:15"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "4691:6:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4691:14:15"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "4691:14:15"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "4607:5:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4618:5:15"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4625:4:15",
																									"type": "",
																									"value": "0xff"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "4614:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4614:16:15"
																						}
																					],
																					"functionName": {
																						"name": "eq",
																						"nodeType": "YulIdentifier",
																						"src": "4604:2:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4604:27:15"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "4597:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4597:35:15"
																		},
																		"nodeType": "YulIf",
																		"src": "4594:125:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4739:3:15"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "4744:5:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4732:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4732:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4732:18:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4763:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4774:3:15"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4779:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4770:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4770:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4763:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4492:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4497:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4489:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4489:15:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4505:23:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4507:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4518:3:15"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4523:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4514:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4514:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4507:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4485:3:15",
																"statements": []
															},
															"src": "4481:311:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4801:14:15",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "4810:5:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4801:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint8_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4028:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4036:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4044:5:15",
														"type": ""
													}
												],
												"src": "3992:829:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5037:1508:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5084:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5093:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5096:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5086:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5086:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5086:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5058:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5067:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5054:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5054:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5079:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5050:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5050:33:15"
															},
															"nodeType": "YulIf",
															"src": "5047:53:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5109:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5135:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5122:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5122:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5113:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5179:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5154:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5154:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5154:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5194:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5204:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5194:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5218:12:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5228:2:15",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5222:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5239:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5271:9:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5282:2:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5267:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5267:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5254:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5254:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "5243:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "5320:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5295:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5295:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5295:33:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5337:17:15",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "5347:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5337:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5363:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5394:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5405:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5390:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5390:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5377:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5377:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5367:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5418:28:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5436:2:15",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5440:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5432:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5432:10:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5444:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5428:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5428:18:15"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5422:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5473:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5482:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5485:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5475:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5475:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5475:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5461:6:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5469:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5458:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5458:14:15"
															},
															"nodeType": "YulIf",
															"src": "5455:34:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5498:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5512:9:15"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5523:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5508:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5508:22:15"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5502:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5578:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5587:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5590:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5580:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5580:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5580:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5557:2:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5561:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5553:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5553:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5568:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5549:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5549:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5542:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5542:35:15"
															},
															"nodeType": "YulIf",
															"src": "5539:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5603:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5626:2:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5613:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5613:16:15"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5607:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5638:71:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5705:2:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "5665:39:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5665:43:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5649:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5649:60:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5642:3:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5718:16:15",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "5731:3:15"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "5722:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5750:3:15"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5755:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5743:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5743:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5743:15:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5767:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5778:3:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5783:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5774:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5774:12:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5767:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5795:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "5817:2:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5825:1:15",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "5828:2:15"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5821:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5821:10:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5813:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5813:19:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5834:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5809:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5809:28:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5799:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5869:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5878:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5881:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5871:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5871:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5871:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5852:6:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5860:7:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5849:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5849:19:15"
															},
															"nodeType": "YulIf",
															"src": "5846:39:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5894:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5909:2:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5913:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5905:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:11:15"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "5898:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5981:167:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5995:32:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6023:3:15"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "6010:12:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6010:17:15"
																		},
																		"variables": [
																			{
																				"name": "value_2",
																				"nodeType": "YulTypedName",
																				"src": "5999:7:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value_2",
																					"nodeType": "YulIdentifier",
																					"src": "6065:7:15"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nodeType": "YulIdentifier",
																				"src": "6040:24:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6040:33:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6040:33:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6093:3:15"
																				},
																				{
																					"name": "value_2",
																					"nodeType": "YulIdentifier",
																					"src": "6098:7:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6086:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6086:20:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6086:20:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6119:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6130:3:15"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6135:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6126:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6126:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6119:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5936:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5941:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5933:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5933:15:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5949:23:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5951:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5962:3:15"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5967:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5958:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5958:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5951:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5929:3:15",
																"statements": []
															},
															"src": "5925:223:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6157:15:15",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "6167:5:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "6157:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6181:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6214:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6225:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6210:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6210:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6197:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6197:32:15"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "6185:8:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6258:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6267:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6270:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6260:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6260:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6260:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "6244:8:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6254:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6241:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6241:16:15"
															},
															"nodeType": "YulIf",
															"src": "6238:36:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6283:73:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6326:9:15"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6337:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6322:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6322:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6348:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6293:28:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6293:63:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "6283:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6365:49:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6398:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6409:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6394:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6394:19:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6381:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6381:33:15"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "6369:8:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6443:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6452:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6455:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6445:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6445:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6445:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "6429:8:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6439:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6426:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6426:16:15"
															},
															"nodeType": "YulIf",
															"src": "6423:36:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6468:71:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6509:9:15"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "6520:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6505:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6505:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6531:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint8_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6478:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6478:61:15"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "6468:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint8_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4971:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4982:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4994:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5002:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5010:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5018:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5026:6:15",
														"type": ""
													}
												],
												"src": "4826:1719:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6651:102:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6661:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6669:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6703:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6718:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6734:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6739:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6730:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6730:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6743:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6726:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6726:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6714:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6714:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6696:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6696:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6696:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6620:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6631:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6642:4:15",
														"type": ""
													}
												],
												"src": "6550:203:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6955:874:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7002:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7011:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7014:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7004:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7004:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7004:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6976:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6985:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6972:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6997:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6968:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6968:33:15"
															},
															"nodeType": "YulIf",
															"src": "6965:53:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7027:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7053:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7040:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7040:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7031:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7097:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "7072:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7072:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7072:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7112:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7122:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7112:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7136:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7168:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7179:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7164:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7164:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7151:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7151:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "7140:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "7217:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "7192:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7192:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7192:33:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7234:17:15",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "7244:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7234:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7260:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7291:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7302:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7287:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7287:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7274:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7274:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7264:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7315:28:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7333:2:15",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7337:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7329:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7329:10:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7341:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7325:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7325:18:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7319:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7370:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7379:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7382:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7372:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7372:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7372:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7358:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7366:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7355:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7355:14:15"
															},
															"nodeType": "YulIf",
															"src": "7352:34:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7395:71:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7438:9:15"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7449:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7434:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7434:22:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7458:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7405:28:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7405:61:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7395:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7475:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7508:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7519:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7504:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7504:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7491:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7491:32:15"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "7479:8:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7552:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7561:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7564:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7554:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7554:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7554:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "7538:8:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7548:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7535:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7535:16:15"
															},
															"nodeType": "YulIf",
															"src": "7532:36:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7577:73:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7620:9:15"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "7631:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7616:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7616:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7642:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7587:28:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7587:63:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7577:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7659:49:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7692:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7703:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7688:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7688:19:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7675:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7675:33:15"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "7663:8:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7737:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7746:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7749:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7739:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7739:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7739:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "7723:8:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7733:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7720:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7720:16:15"
															},
															"nodeType": "YulIf",
															"src": "7717:36:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7762:61:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7793:9:15"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "7804:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7789:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7789:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7815:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7772:16:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7772:51:15"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "7762:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6889:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6900:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6912:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6920:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6928:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6936:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6944:6:15",
														"type": ""
													}
												],
												"src": "6758:1071:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7981:587:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8028:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8037:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8040:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8030:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8030:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8030:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8002:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8011:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7998:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7998:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8023:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7994:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7994:33:15"
															},
															"nodeType": "YulIf",
															"src": "7991:53:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8053:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8079:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8066:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8066:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "8057:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8123:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "8098:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8098:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8098:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8138:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8148:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8138:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8162:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8194:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8205:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8190:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8190:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8177:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8177:32:15"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "8166:7:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "8243:7:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "8218:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8218:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8218:33:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8260:17:15",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "8270:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8260:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8286:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8313:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8324:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8309:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8309:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8296:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8296:32:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8286:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8337:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8364:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8375:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8360:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8360:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8347:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8347:32:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "8337:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8388:47:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8419:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8430:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8415:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8415:19:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8402:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8402:33:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8392:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8478:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8487:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8490:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8480:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8480:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8480:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8450:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8466:2:15",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8470:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "8462:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8462:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8474:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8458:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8458:18:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8447:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8447:30:15"
															},
															"nodeType": "YulIf",
															"src": "8444:50:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8503:59:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8534:9:15"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8545:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8530:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8530:22:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8554:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8513:16:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8513:49:15"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "8503:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7915:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7926:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7938:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7946:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7954:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7962:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7970:6:15",
														"type": ""
													}
												],
												"src": "7834:734:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8643:177:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8689:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8698:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8701:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8691:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8691:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8691:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8664:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8673:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8660:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8660:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8685:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8656:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8656:32:15"
															},
															"nodeType": "YulIf",
															"src": "8653:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8714:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8740:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8727:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8727:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "8718:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8784:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "8759:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8759:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8759:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8799:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8809:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8799:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8609:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8620:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8632:6:15",
														"type": ""
													}
												],
												"src": "8573:247:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8990:218:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9000:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9012:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9023:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9008:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9008:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9000:4:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9035:29:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9053:3:15",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9058:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9049:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9049:11:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9062:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9045:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9045:19:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9039:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9080:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9095:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9103:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9091:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9091:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9073:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9073:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9073:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9127:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9138:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9123:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9123:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9147:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9155:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9143:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9143:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9116:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9116:43:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9116:43:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9179:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9190:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9175:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9175:18:15"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9195:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9168:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9168:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9168:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8943:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8954:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8962:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8970:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8981:4:15",
														"type": ""
													}
												],
												"src": "8825:383:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9291:199:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9337:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9346:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9349:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9339:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9339:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9339:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9312:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9321:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9308:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9308:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9333:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9304:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9304:32:15"
															},
															"nodeType": "YulIf",
															"src": "9301:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9362:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9381:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9375:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9375:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9366:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9444:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9453:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9456:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9446:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9446:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9446:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9413:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "9434:5:15"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "9427:6:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9427:13:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9420:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9420:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9410:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9410:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9403:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9403:40:15"
															},
															"nodeType": "YulIf",
															"src": "9400:60:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9469:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9479:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9469:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9257:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9268:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9280:6:15",
														"type": ""
													}
												],
												"src": "9213:277:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9669:227:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9686:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9697:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9679:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9679:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9679:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9720:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9731:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9716:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9716:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9736:2:15",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9709:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9709:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9709:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9759:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9770:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9755:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9755:18:15"
																	},
																	{
																		"hexValue": "5472616e73666572206f6620746f6b656e7320746f2072656365697665722066",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9775:34:15",
																		"type": "",
																		"value": "Transfer of tokens to receiver f"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9748:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9748:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9748:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9830:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9841:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9826:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9826:18:15"
																	},
																	{
																		"hexValue": "61696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9846:7:15",
																		"type": "",
																		"value": "ailed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9819:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9819:35:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9819:35:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9863:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9875:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9886:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9871:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9871:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9863:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9646:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9660:4:15",
														"type": ""
													}
												],
												"src": "9495:401:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10058:218:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10068:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10080:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10091:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10076:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10076:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10068:4:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10103:29:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10121:3:15",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10126:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10117:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10117:11:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10130:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10113:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10113:19:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10107:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10148:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10163:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10171:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10159:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10159:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10141:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10141:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10141:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10195:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10206:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10191:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10191:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10215:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10223:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10211:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10211:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10184:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10184:43:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10184:43:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10247:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10258:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10243:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10243:18:15"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10263:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10236:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10236:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10236:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10011:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10022:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10030:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10038:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10049:4:15",
														"type": ""
													}
												],
												"src": "9901:375:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10455:225:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10472:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10483:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10465:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10465:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10465:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10506:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10517:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10502:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10502:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10522:2:15",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10495:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10495:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10495:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10545:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10556:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10541:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10541:18:15"
																	},
																	{
																		"hexValue": "5472616e73666572206f6620746f6b656e7320746f2053746174657220666169",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10561:34:15",
																		"type": "",
																		"value": "Transfer of tokens to Stater fai"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10534:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10534:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10534:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10616:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10627:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10612:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10612:18:15"
																	},
																	{
																		"hexValue": "6c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10632:5:15",
																		"type": "",
																		"value": "led"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10605:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10605:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10605:33:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10647:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10659:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10670:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10655:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10655:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10647:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10432:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10446:4:15",
														"type": ""
													}
												],
												"src": "10281:399:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10859:224:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10876:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10887:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10869:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10869:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10869:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10910:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10921:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10906:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10906:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10926:2:15",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10899:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10899:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10899:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10949:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10960:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10945:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10945:18:15"
																	},
																	{
																		"hexValue": "5472616e73666572206f662045544820746f207265636569766572206661696c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10965:34:15",
																		"type": "",
																		"value": "Transfer of ETH to receiver fail"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10938:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10938:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10938:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11020:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11031:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11016:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11016:18:15"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11036:4:15",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11009:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11009:32:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11009:32:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11050:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11062:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11073:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11058:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11058:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11050:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10836:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10850:4:15",
														"type": ""
													}
												],
												"src": "10685:398:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11262:182:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11279:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11290:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11272:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11272:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11272:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11313:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11324:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11309:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11309:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11329:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11302:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11302:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11302:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11352:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11363:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11348:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11348:18:15"
																	},
																	{
																		"hexValue": "5472616e73666572206f662045544820746f20537461746572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11368:34:15",
																		"type": "",
																		"value": "Transfer of ETH to Stater failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11341:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11341:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11341:62:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11412:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11424:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11435:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11420:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11420:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11412:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11239:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11253:4:15",
														"type": ""
													}
												],
												"src": "11088:356:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11623:182:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11640:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11651:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11633:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11633:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11633:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11674:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11685:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11670:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11670:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11690:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11663:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11663:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11663:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11713:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11724:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11709:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11709:18:15"
																	},
																	{
																		"hexValue": "546f6b656e20696e666f732070726f76696465642061726520696e76616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11729:34:15",
																		"type": "",
																		"value": "Token infos provided are invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11702:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11702:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11702:62:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11773:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11785:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11796:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11781:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11781:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11773:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11600:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11614:4:15",
														"type": ""
													}
												],
												"src": "11449:356:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11842:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11859:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11866:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11871:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11862:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11862:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11852:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11852:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11852:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11899:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11902:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11892:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11892:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11892:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11923:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11926:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11916:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11916:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11916:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "11810:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12235:386:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12245:29:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12263:3:15",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12268:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12259:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12259:11:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12272:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12255:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12255:19:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12249:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12290:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12305:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12313:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12301:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12301:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12283:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12283:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12283:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12337:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12348:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12333:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12333:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12357:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12365:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12353:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12353:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12326:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12326:43:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12326:43:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12389:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12400:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12385:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12385:18:15"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12405:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12378:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12378:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12378:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12432:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12443:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12428:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12428:18:15"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "12448:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12421:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12421:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12421:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12475:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12486:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12471:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12471:19:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12492:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12464:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12464:32:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12464:32:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12516:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12527:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12512:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12512:19:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12533:1:15",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12505:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12505:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12505:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12555:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12566:3:15",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12551:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12551:19:15"
																	},
																	{
																		"hexValue": "30783030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12572:6:15",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12544:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12544:35:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12544:35:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12588:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12600:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12611:3:15",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12596:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12596:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12588:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12180:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12191:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12199:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12207:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12215:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12226:4:15",
														"type": ""
													}
												],
												"src": "11942:679:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12673:185:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12712:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12733:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12740:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12745:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "12736:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12736:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12726:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12726:31:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12726:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12777:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12780:4:15",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12770:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12770:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12770:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12805:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12808:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12798:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12798:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12798:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12689:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12700:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12696:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12696:6:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12686:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12686:17:15"
															},
															"nodeType": "YulIf",
															"src": "12683:140:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12832:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12843:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12850:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12839:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12839:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12832:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12655:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12665:3:15",
														"type": ""
													}
												],
												"src": "12626:232:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13037:182:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13054:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13065:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13047:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13047:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13047:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13088:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13099:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13084:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13084:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13104:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13077:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13077:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13077:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13127:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13138:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13123:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13123:18:15"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13143:34:15",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13116:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13116:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13116:62:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13187:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13199:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13210:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13195:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13195:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13187:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13014:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13028:4:15",
														"type": ""
													}
												],
												"src": "12863:356:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13398:228:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13415:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13426:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13408:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13408:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13408:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13449:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13460:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13445:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13445:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13465:2:15",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13438:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13438:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13438:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13488:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13499:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13484:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13484:18:15"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13504:34:15",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13477:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13477:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13477:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13559:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13570:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13555:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13555:18:15"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13575:8:15",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13548:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13548:36:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13548:36:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13593:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13605:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13616:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13601:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13601:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13593:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13375:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13389:4:15",
														"type": ""
													}
												],
												"src": "13224:402:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_addresst_address_payablet_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_uint8_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := calldataload(src)\n            if iszero(eq(value, and(value, 0xff)))\n            {\n                let _3 := 0\n                revert(_3, _3)\n            }\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint8_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _1 := 32\n        let value_1 := calldataload(add(headStart, _1))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, shl(5, _4)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let value_2 := calldataload(src)\n            validator_revert_address(value_2)\n            mstore(dst, value_2)\n            dst := add(dst, _1)\n        }\n        value2 := dst_1\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _2) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _2) { revert(0, 0) }\n        value4 := abi_decode_array_uint8_dyn(add(headStart, offset_2), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Transfer of tokens to receiver f\")\n        mstore(add(headStart, 96), \"ailed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Transfer of tokens to Stater fai\")\n        mstore(add(headStart, 96), \"led\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Transfer of ETH to receiver fail\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Transfer of ETH to Stater failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Token infos provided are invalid\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        mstore(add(headStart, 160), 4)\n        mstore(add(headStart, 192), \"0x00\")\n        tail := add(headStart, 224)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100835760003560e01c806301ffc9a714610088578063150b7a02146100b05780632e3f4a5d146100e7578063407299d7146100fc578063715018a61461010f5780638da5cb5b14610117578063bc197c8114610137578063f23a6e6114610156578063f2fde38b14610175575b600080fd5b61009b6100963660046107c6565b610188565b60405190151581526020015b60405180910390f35b6100ce6100be3660046108c1565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020016100a7565b6100fa6100f536600461092c565b6101bf565b005b6100fa61010a366004610a80565b610475565b6100fa61068c565b61011f6106c7565b6040516001600160a01b0390911681526020016100a7565b6100ce610145366004610b8d565b63bc197c8160e01b95945050505050565b6100ce610164366004610c2d565b63f23a6e6160e01b95945050505050565b6100fa610183366004610c95565b6106d6565b60006001600160e01b03198216630271189760e51b14806101b957506301ffc9a760e01b6001600160e01b03198316145b92915050565b6001600160a01b03831615610377576040516323b872dd60e01b81526001600160a01b038416906323b872dd906101fe90889088908790600401610cb2565b6020604051808303816000875af115801561021d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102419190610cd6565b6102a05760405162461bcd60e51b815260206004820152602560248201527f5472616e73666572206f6620746f6b656e7320746f2072656365697665722066604482015264185a5b195960da1b60648201526084015b60405180910390fd5b826001600160a01b03166323b872dd866102b86106c7565b846040518463ffffffff1660e01b81526004016102d793929190610cb2565b6020604051808303816000875af11580156102f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031a9190610cd6565b6103725760405162461bcd60e51b815260206004820152602360248201527f5472616e73666572206f6620746f6b656e7320746f20537461746572206661696044820152621b195960ea1b6064820152608401610297565b61046e565b6040516001600160a01b0385169083156108fc029084906000818181858888f193505050506103f35760405162461bcd60e51b815260206004820152602260248201527f5472616e73666572206f662045544820746f207265636569766572206661696c604482015261195960f21b6064820152608401610297565b6103fb6106c7565b6001600160a01b03166108fc829081150290604051600060405180830381858888f1935050505061046e5760405162461bcd60e51b815260206004820181905260248201527f5472616e73666572206f662045544820746f20537461746572206661696c65646044820152606401610297565b5050505050565b82518251811480156104875750808251145b6104d35760405162461bcd60e51b815260206004820181905260248201527f546f6b656e20696e666f732070726f76696465642061726520696e76616c69646044820152606401610297565b60005b81811015610683578281815181106104f0576104f0610cf8565b602002602001015160ff1660000361059b5784818151811061051457610514610cf8565b60200260200101516001600160a01b03166342842e0e888887858151811061053e5761053e610cf8565b60200260200101516040518463ffffffff1660e01b815260040161056493929190610cb2565b600060405180830381600087803b15801561057e57600080fd5b505af1158015610592573d6000803e3d6000fd5b50505050610673565b8481815181106105ad576105ad610cf8565b60200260200101516001600160a01b031663f242432a88888785815181106105d7576105d7610cf8565b602002602001015160016040518563ffffffff1660e01b815260040161064094939291906001600160a01b0394851681529290931660208301526040820152606081019190915260a060808201819052600490820152630307830360e41b60c082015260e00190565b600060405180830381600087803b15801561065a57600080fd5b505af115801561066e573d6000803e3d6000fd5b505050505b61067c81610d0e565b90506104d6565b50505050505050565b336106956106c7565b6001600160a01b0316146106bb5760405162461bcd60e51b815260040161029790610d35565b6106c56000610776565b565b6000546001600160a01b031690565b336106df6106c7565b6001600160a01b0316146107055760405162461bcd60e51b815260040161029790610d35565b6001600160a01b03811661076a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610297565b61077381610776565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156107d857600080fd5b81356001600160e01b0319811681146107f057600080fd5b9392505050565b6001600160a01b038116811461077357600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561084a5761084a61080c565b604052919050565b600082601f83011261086357600080fd5b81356001600160401b0381111561087c5761087c61080c565b61088f601f8201601f1916602001610822565b8181528460208386010111156108a457600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156108d757600080fd5b84356108e2816107f7565b935060208501356108f2816107f7565b92506040850135915060608501356001600160401b0381111561091457600080fd5b61092087828801610852565b91505092959194509250565b600080600080600060a0868803121561094457600080fd5b853561094f816107f7565b9450602086013561095f816107f7565b9350604086013561096f816107f7565b94979396509394606081013594506080013592915050565b60006001600160401b038211156109a0576109a061080c565b5060051b60200190565b600082601f8301126109bb57600080fd5b813560206109d06109cb83610987565b610822565b82815260059290921b840181019181810190868411156109ef57600080fd5b8286015b84811015610a0a57803583529183019183016109f3565b509695505050505050565b600082601f830112610a2657600080fd5b81356020610a366109cb83610987565b82815260059290921b84018101918181019086841115610a5557600080fd5b8286015b84811015610a0a57803560ff81168114610a735760008081fd5b8352918301918301610a59565b600080600080600060a08688031215610a9857600080fd5b8535610aa3816107f7565b9450602086810135610ab4816107f7565b945060408701356001600160401b0380821115610ad057600080fd5b818901915089601f830112610ae457600080fd5b8135610af26109cb82610987565b81815260059190911b8301840190848101908c831115610b1157600080fd5b938501935b82851015610b38578435610b29816107f7565b82529385019390850190610b16565b975050506060890135925080831115610b5057600080fd5b610b5c8a848b016109aa565b94506080890135925080831115610b7257600080fd5b5050610b8088828901610a15565b9150509295509295909350565b600080600080600060a08688031215610ba557600080fd5b8535610bb0816107f7565b94506020860135610bc0816107f7565b935060408601356001600160401b0380821115610bdc57600080fd5b610be889838a016109aa565b94506060880135915080821115610bfe57600080fd5b610c0a89838a016109aa565b93506080880135915080821115610c2057600080fd5b50610b8088828901610852565b600080600080600060a08688031215610c4557600080fd5b8535610c50816107f7565b94506020860135610c60816107f7565b9350604086013592506060860135915060808601356001600160401b03811115610c8957600080fd5b610b8088828901610852565b600060208284031215610ca757600080fd5b81356107f0816107f7565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215610ce857600080fd5b815180151581146107f057600080fd5b634e487b7160e01b600052603260045260246000fd5b600060018201610d2e57634e487b7160e01b600052601160045260246000fd5b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212208fad268cf4d4d8854b7a222c1c976591507dc1497ec014996c020a91747f990764736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x83 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0x2E3F4A5D EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x407299D7 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x175 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B PUSH2 0x96 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x188 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCE PUSH2 0xBE CALLDATASIZE PUSH1 0x4 PUSH2 0x8C1 JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA7 JUMP JUMPDEST PUSH2 0xFA PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x92C JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFA PUSH2 0x10A CALLDATASIZE PUSH1 0x4 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST PUSH2 0xFA PUSH2 0x68C JUMP JUMPDEST PUSH2 0x11F PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA7 JUMP JUMPDEST PUSH2 0xCE PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0xB8D JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCE PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0xC2D JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFA PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0xC95 JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0x1B9 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x377 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x1FE SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0x2A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206F6620746F6B656E7320746F2072656365697665722066 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x185A5B1959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD DUP7 PUSH2 0x2B8 PUSH2 0x6C7 JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0x372 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206F6620746F6B656E7320746F2053746174657220666169 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1B1959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x297 JUMP JUMPDEST PUSH2 0x46E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206F662045544820746F207265636569766572206661696C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x297 JUMP JUMPDEST PUSH2 0x3FB PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP PUSH2 0x46E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206F662045544820746F20537461746572206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x297 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP3 MLOAD DUP3 MLOAD DUP2 EQ DUP1 ISZERO PUSH2 0x487 JUMPI POP DUP1 DUP3 MLOAD EQ JUMPDEST PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20696E666F732070726F76696465642061726520696E76616C6964 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x297 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x683 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x4F0 JUMPI PUSH2 0x4F0 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND PUSH1 0x0 SUB PUSH2 0x59B JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x514 JUMPI PUSH2 0x514 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x42842E0E DUP9 DUP9 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x53E JUMPI PUSH2 0x53E PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x564 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x592 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x673 JUMP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x5AD JUMPI PUSH2 0x5AD PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF242432A DUP9 DUP9 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x5D7 JUMPI PUSH2 0x5D7 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x640 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x3078303 PUSH1 0xE4 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x65A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x66E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x67C DUP2 PUSH2 0xD0E JUMP JUMPDEST SWAP1 POP PUSH2 0x4D6 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x695 PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH2 0x6C5 PUSH1 0x0 PUSH2 0x776 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0x6DF PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x705 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x76A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x297 JUMP JUMPDEST PUSH2 0x773 DUP2 PUSH2 0x776 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x7F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x84A JUMPI PUSH2 0x84A PUSH2 0x80C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x863 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x87C JUMPI PUSH2 0x87C PUSH2 0x80C JUMP JUMPDEST PUSH2 0x88F PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x822 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x8A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x8E2 DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x8F2 DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x920 DUP8 DUP3 DUP9 ADD PUSH2 0x852 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x944 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x94F DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x95F DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x96F DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x9A0 JUMPI PUSH2 0x9A0 PUSH2 0x80C JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x9D0 PUSH2 0x9CB DUP4 PUSH2 0x987 JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x9EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xA0A JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x9F3 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xA36 PUSH2 0x9CB DUP4 PUSH2 0x987 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xA0A JUMPI DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xA73 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xA98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0xAA3 DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 DUP2 ADD CALLDATALOAD PUSH2 0xAB4 DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xAD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP10 ADD SWAP2 POP DUP10 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAF2 PUSH2 0x9CB DUP3 PUSH2 0x987 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP13 DUP4 GT ISZERO PUSH2 0xB11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xB38 JUMPI DUP5 CALLDATALOAD PUSH2 0xB29 DUP2 PUSH2 0x7F7 JUMP JUMPDEST DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0xB16 JUMP JUMPDEST SWAP8 POP POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0xB50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB5C DUP11 DUP5 DUP12 ADD PUSH2 0x9AA JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0xB72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0xB80 DUP9 DUP3 DUP10 ADD PUSH2 0xA15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xBA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0xBB0 DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0xBC0 DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xBDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE8 DUP10 DUP4 DUP11 ADD PUSH2 0x9AA JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xBFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC0A DUP10 DUP4 DUP11 ADD PUSH2 0x9AA JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xC20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB80 DUP9 DUP3 DUP10 ADD PUSH2 0x852 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xC45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0xC50 DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0xC60 DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xC89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB80 DUP9 DUP3 DUP10 ADD PUSH2 0x852 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7F0 DUP2 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x7F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xD2E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xAD 0x26 DUP13 DELEGATECALL 0xD4 0xD8 DUP6 0x4B PUSH27 0x222C1C976591507DC1497EC014996C020A91747F990764736F6C63 NUMBER STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "430:1887:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:4;;;;;;:::i;:::-;;:::i;:::-;;;470:14:15;;463:22;445:41;;433:2;418:18;387:221:4;;;;;;;;588:200:8;;;;;;:::i;:::-;-1:-1:-1;;;588:200:8;;;;;;;;;;-1:-1:-1;;;;;;2412:33:15;;;2394:52;;2382:2;2367:18;588:200:8;2250:202:15;625:705:13;;;;;;:::i;:::-;;:::i;:::-;;1427:887;;;;;;:::i;:::-;;:::i;1668:101:0:-;;;:::i;1036:85::-;;;:::i;:::-;;;-1:-1:-1;;;;;6714:32:15;;;6696:51;;6684:2;6669:18;1036:85:0;6550:203:15;724:247:3;;;;;;:::i;:::-;-1:-1:-1;;;724:247:3;;;;;;;;499:219;;;;;;:::i;:::-;-1:-1:-1;;;499:219:3;;;;;;;;1918:198:0;;;;;;:::i;:::-;;:::i;387:221:4:-;489:4;-1:-1:-1;;;;;;512:49:4;;-1:-1:-1;;;512:49:4;;:89;;-1:-1:-1;;;;;;;;;;937:40:10;;;565:36:4;505:96;387:221;-1:-1:-1;;387:221:4:o;625:705:13:-;-1:-1:-1;;;;;795:22:13;;;790:534;;839:100;;-1:-1:-1;;;839:100:13;;-1:-1:-1;;;;;839:29:13;;;;;:100;;884:4;;904:2;;923:4;;839:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;831:150;;;;-1:-1:-1;;;831:150:13;;9697:2:15;831:150:13;;;9679:21:15;9736:2;9716:18;;;9709:30;9775:34;9755:18;;;9748:62;-1:-1:-1;;;9826:18:15;;;9819:35;9871:19;;831:150:13;;;;;;;;;1008:8;-1:-1:-1;;;;;1001:29:13;;1046:4;1066:7;:5;:7::i;:::-;1090:4;1001:105;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;993:153;;;;-1:-1:-1;;;993:153:13;;10483:2:15;993:153:13;;;10465:21:15;10522:2;10502:18;;;10495:30;10561:34;10541:18;;;10534:62;-1:-1:-1;;;10612:18:15;;;10605:33;10655:19;;993:153:13;10281:399:15;993:153:13;790:534;;;1179:13;;-1:-1:-1;;;;;1179:7:13;;;:13;;;;;1187:4;;1179:13;;;;1187:4;1179:7;:13;;;;;;;1171:60;;;;-1:-1:-1;;;1171:60:13;;10887:2:15;1171:60:13;;;10869:21:15;10926:2;10906:18;;;10899:30;10965:34;10945:18;;;10938:62;-1:-1:-1;;;11016:18:15;;;11009:32;11058:19;;1171:60:13;10685:398:15;1171:60:13;1259:7;:5;:7::i;:::-;-1:-1:-1;;;;;1251:21:13;:27;1273:4;1251:27;;;;;;;;;;;;;;;;;;;;;;;1243:72;;;;-1:-1:-1;;;1243:72:13;;11290:2:15;1243:72:13;;;11272:21:15;;;11309:18;;;11302:30;11368:34;11348:18;;;11341:62;11420:18;;1243:72:13;11088:356:15;1243:72:13;625:705;;;;;:::o;1427:887::-;1661:22;;1711;;1701:32;;:70;;;;;1765:6;1737:17;:24;:34;1701:70;1693:115;;;;-1:-1:-1;;;1693:115:13;;11651:2:15;1693:115:13;;;11633:21:15;;;11670:18;;;11663:30;11729:34;11709:18;;;11702:62;11781:18;;1693:115:13;11449:356:15;1693:115:13;1822:9;1818:489;1841:6;1837:1;:10;1818:489;;;1872:17;1890:1;1872:20;;;;;;;;:::i;:::-;;;;;;;:25;;1896:1;1872:25;1867:440;;1924:15;1940:1;1924:18;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1916:44:13;;1982:4;2008:2;2032:15;2048:1;2032:18;;;;;;;;:::i;:::-;;;;;;;1916:152;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1867:440;;;2112:15;2128:1;2112:18;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2103:45:13;;2170:4;2196:2;2220:15;2236:1;2220:18;;;;;;;;:::i;:::-;;;;;;;2260:1;2103:204;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12301:15:15;;;12283:34;;12353:15;;;;12348:2;12333:18;;12326:43;12400:2;12385:18;;12378:34;12443:2;12428:18;;12421:34;;;;12263:3;12486;12471:19;;12464:32;;;12533:1;12512:19;;;12505:30;-1:-1:-1;;;12566:3:15;12551:19;;12544:35;12611:3;12596:19;;11942:679;2103:204:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1867:440;1849:3;;;:::i;:::-;;;1818:489;;;;1634:680;1427:887;;;;;:::o;1668:101:0:-;719:10:9;1248:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;;1036:85::o;1918:198::-;719:10:9;1248:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;13426:2:15;1998:73:0::1;::::0;::::1;13408:21:15::0;13465:2;13445:18;;;13438:30;13504:34;13484:18;;;13477:62;-1:-1:-1;;;13555:18:15;;;13548:36;13601:19;;1998:73:0::1;13224:402:15::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:286:15:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:15;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:15:o;497:131::-;-1:-1:-1;;;;;572:31:15;;562:42;;552:70;;618:1;615;608:12;633:127;694:10;689:3;685:20;682:1;675:31;725:4;722:1;715:15;749:4;746:1;739:15;765:275;836:2;830:9;901:2;882:13;;-1:-1:-1;;878:27:15;866:40;;-1:-1:-1;;;;;921:34:15;;957:22;;;918:62;915:88;;;983:18;;:::i;:::-;1019:2;1012:22;765:275;;-1:-1:-1;765:275:15:o;1045:530::-;1087:5;1140:3;1133:4;1125:6;1121:17;1117:27;1107:55;;1158:1;1155;1148:12;1107:55;1181:20;;-1:-1:-1;;;;;1213:26:15;;1210:52;;;1242:18;;:::i;:::-;1286:55;1329:2;1310:13;;-1:-1:-1;;1306:27:15;1335:4;1302:38;1286:55;:::i;:::-;1366:2;1357:7;1350:19;1412:3;1405:4;1400:2;1392:6;1388:15;1384:26;1381:35;1378:55;;;1429:1;1426;1419:12;1378:55;1494:2;1487:4;1479:6;1475:17;1468:4;1459:7;1455:18;1442:55;1542:1;1517:16;;;1535:4;1513:27;1506:38;;;;1521:7;1045:530;-1:-1:-1;;;1045:530:15:o;1580:665::-;1675:6;1683;1691;1699;1752:3;1740:9;1731:7;1727:23;1723:33;1720:53;;;1769:1;1766;1759:12;1720:53;1808:9;1795:23;1827:31;1852:5;1827:31;:::i;:::-;1877:5;-1:-1:-1;1934:2:15;1919:18;;1906:32;1947:33;1906:32;1947:33;:::i;:::-;1999:7;-1:-1:-1;2053:2:15;2038:18;;2025:32;;-1:-1:-1;2108:2:15;2093:18;;2080:32;-1:-1:-1;;;;;2124:30:15;;2121:50;;;2167:1;2164;2157:12;2121:50;2190:49;2231:7;2222:6;2211:9;2207:22;2190:49;:::i;:::-;2180:59;;;1580:665;;;;;;;:::o;2457:675::-;2560:6;2568;2576;2584;2592;2645:3;2633:9;2624:7;2620:23;2616:33;2613:53;;;2662:1;2659;2652:12;2613:53;2701:9;2688:23;2720:31;2745:5;2720:31;:::i;:::-;2770:5;-1:-1:-1;2827:2:15;2812:18;;2799:32;2840:33;2799:32;2840:33;:::i;:::-;2892:7;-1:-1:-1;2951:2:15;2936:18;;2923:32;2964:33;2923:32;2964:33;:::i;:::-;2457:675;;;;-1:-1:-1;3016:7:15;;3070:2;3055:18;;3042:32;;-1:-1:-1;3121:3:15;3106:19;3093:33;;2457:675;-1:-1:-1;;2457:675:15:o;3137:183::-;3197:4;-1:-1:-1;;;;;3219:30:15;;3216:56;;;3252:18;;:::i;:::-;-1:-1:-1;3297:1:15;3293:14;3309:4;3289:25;;3137:183::o;3325:662::-;3379:5;3432:3;3425:4;3417:6;3413:17;3409:27;3399:55;;3450:1;3447;3440:12;3399:55;3486:6;3473:20;3512:4;3536:60;3552:43;3592:2;3552:43;:::i;:::-;3536:60;:::i;:::-;3630:15;;;3716:1;3712:10;;;;3700:23;;3696:32;;;3661:12;;;;3740:15;;;3737:35;;;3768:1;3765;3758:12;3737:35;3804:2;3796:6;3792:15;3816:142;3832:6;3827:3;3824:15;3816:142;;;3898:17;;3886:30;;3936:12;;;;3849;;3816:142;;;-1:-1:-1;3976:5:15;3325:662;-1:-1:-1;;;;;;3325:662:15:o;3992:829::-;4044:5;4097:3;4090:4;4082:6;4078:17;4074:27;4064:55;;4115:1;4112;4105:12;4064:55;4151:6;4138:20;4177:4;4201:60;4217:43;4257:2;4217:43;:::i;4201:60::-;4295:15;;;4381:1;4377:10;;;;4365:23;;4361:32;;;4326:12;;;;4405:15;;;4402:35;;;4433:1;4430;4423:12;4402:35;4469:2;4461:6;4457:15;4481:311;4497:6;4492:3;4489:15;4481:311;;;4577:3;4564:17;4625:4;4618:5;4614:16;4607:5;4604:27;4594:125;;4673:1;4702:2;4698;4691:14;4594:125;4732:18;;4770:12;;;;4514;;4481:311;;4826:1719;4994:6;5002;5010;5018;5026;5079:3;5067:9;5058:7;5054:23;5050:33;5047:53;;;5096:1;5093;5086:12;5047:53;5135:9;5122:23;5154:31;5179:5;5154:31;:::i;:::-;5204:5;-1:-1:-1;5228:2:15;5267:18;;;5254:32;5295:33;5254:32;5295:33;:::i;:::-;5347:7;-1:-1:-1;5405:2:15;5390:18;;5377:32;-1:-1:-1;;;;;5458:14:15;;;5455:34;;;5485:1;5482;5475:12;5455:34;5523:6;5512:9;5508:22;5498:32;;5568:7;5561:4;5557:2;5553:13;5549:27;5539:55;;5590:1;5587;5580:12;5539:55;5626:2;5613:16;5649:60;5665:43;5705:2;5665:43;:::i;5649:60::-;5743:15;;;5825:1;5821:10;;;;5813:19;;5809:28;;;5774:12;;;;5849:19;;;5846:39;;;5881:1;5878;5871:12;5846:39;5905:11;;;;5925:223;5941:6;5936:3;5933:15;5925:223;;;6023:3;6010:17;6040:33;6065:7;6040:33;:::i;:::-;6086:20;;5958:12;;;;6126;;;;5925:223;;;6167:5;-1:-1:-1;;;6225:2:15;6210:18;;6197:32;;-1:-1:-1;6241:16:15;;;6238:36;;;6270:1;6267;6260:12;6238:36;6293:63;6348:7;6337:8;6326:9;6322:24;6293:63;:::i;:::-;6283:73;;6409:3;6398:9;6394:19;6381:33;6365:49;;6439:2;6429:8;6426:16;6423:36;;;6455:1;6452;6445:12;6423:36;;;6478:61;6531:7;6520:8;6509:9;6505:24;6478:61;:::i;:::-;6468:71;;;4826:1719;;;;;;;;:::o;6758:1071::-;6912:6;6920;6928;6936;6944;6997:3;6985:9;6976:7;6972:23;6968:33;6965:53;;;7014:1;7011;7004:12;6965:53;7053:9;7040:23;7072:31;7097:5;7072:31;:::i;:::-;7122:5;-1:-1:-1;7179:2:15;7164:18;;7151:32;7192:33;7151:32;7192:33;:::i;:::-;7244:7;-1:-1:-1;7302:2:15;7287:18;;7274:32;-1:-1:-1;;;;;7355:14:15;;;7352:34;;;7382:1;7379;7372:12;7352:34;7405:61;7458:7;7449:6;7438:9;7434:22;7405:61;:::i;:::-;7395:71;;7519:2;7508:9;7504:18;7491:32;7475:48;;7548:2;7538:8;7535:16;7532:36;;;7564:1;7561;7554:12;7532:36;7587:63;7642:7;7631:8;7620:9;7616:24;7587:63;:::i;:::-;7577:73;;7703:3;7692:9;7688:19;7675:33;7659:49;;7733:2;7723:8;7720:16;7717:36;;;7749:1;7746;7739:12;7717:36;;7772:51;7815:7;7804:8;7793:9;7789:24;7772:51;:::i;7834:734::-;7938:6;7946;7954;7962;7970;8023:3;8011:9;8002:7;7998:23;7994:33;7991:53;;;8040:1;8037;8030:12;7991:53;8079:9;8066:23;8098:31;8123:5;8098:31;:::i;:::-;8148:5;-1:-1:-1;8205:2:15;8190:18;;8177:32;8218:33;8177:32;8218:33;:::i;:::-;8270:7;-1:-1:-1;8324:2:15;8309:18;;8296:32;;-1:-1:-1;8375:2:15;8360:18;;8347:32;;-1:-1:-1;8430:3:15;8415:19;;8402:33;-1:-1:-1;;;;;8447:30:15;;8444:50;;;8490:1;8487;8480:12;8444:50;8513:49;8554:7;8545:6;8534:9;8530:22;8513:49;:::i;8573:247::-;8632:6;8685:2;8673:9;8664:7;8660:23;8656:32;8653:52;;;8701:1;8698;8691:12;8653:52;8740:9;8727:23;8759:31;8784:5;8759:31;:::i;8825:383::-;-1:-1:-1;;;;;9091:15:15;;;9073:34;;9143:15;;;;9138:2;9123:18;;9116:43;9190:2;9175:18;;9168:34;;;;9023:2;9008:18;;8825:383::o;9213:277::-;9280:6;9333:2;9321:9;9312:7;9308:23;9304:32;9301:52;;;9349:1;9346;9339:12;9301:52;9381:9;9375:16;9434:5;9427:13;9420:21;9413:5;9410:32;9400:60;;9456:1;9453;9446:12;11810:127;11871:10;11866:3;11862:20;11859:1;11852:31;11902:4;11899:1;11892:15;11926:4;11923:1;11916:15;12626:232;12665:3;12686:17;;;12683:140;;12745:10;12740:3;12736:20;12733:1;12726:31;12780:4;12777:1;12770:15;12808:4;12805:1;12798:15;12683:140;-1:-1:-1;12850:1:15;12839:13;;12626:232::o;12863:356::-;13065:2;13047:21;;;13084:18;;;13077:30;13143:34;13138:2;13123:18;;13116:62;13210:2;13195:18;;12863:356::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "697600",
								"executionCost": "26569",
								"totalCost": "724169"
							},
							"external": {
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "2434",
								"renounceOwnership()": "28225",
								"supportsInterface(bytes4)": "404",
								"transferItems(address,address,address[],uint256[],uint8[])": "infinite",
								"transferOwnership(address)": "infinite",
								"transferTokens(address,address,address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 430,
									"end": 2317,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "tag",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 430,
									"end": 2317,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208fad268cf4d4d8854b7a222c1c976591507dc1497ec014996c020a91747f990764736f6c634300080e0033",
									".code": [
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 13,
											"value": "1FFC9A7"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 13,
											"value": "150B7A02"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 13,
											"value": "2E3F4A5D"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 13,
											"value": "407299D7"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 13,
											"value": "BC197C81"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 13,
											"value": "F23A6E61"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 430,
											"end": 2317,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2412,
											"end": 2445,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2412,
											"end": 2445,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2412,
											"end": 2445,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2394,
											"end": 2446,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2394,
											"end": 2446,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2382,
											"end": 2384,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 2250,
											"end": 2452,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 625,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 625,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 1427,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1036,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6714,
											"end": 6746,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6714,
											"end": 6746,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6714,
											"end": 6746,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6696,
											"end": 6747,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6696,
											"end": 6747,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6684,
											"end": 6686,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6669,
											"end": 6687,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6550,
											"end": 6753,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 512,
											"end": 561,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2711897"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 512,
											"end": 561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 795,
											"end": 817,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 795,
											"end": 817,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 795,
											"end": 817,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 790,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 790,
											"end": 1324,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 839,
											"end": 868,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 839,
											"end": 868,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 839,
											"end": 868,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 839,
											"end": 868,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 839,
											"end": 868,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 884,
											"end": 888,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 884,
											"end": 888,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 904,
											"end": 906,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 904,
											"end": 906,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 923,
											"end": 927,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 923,
											"end": 927,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 839,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 839,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 839,
											"end": 939,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 839,
											"end": 939,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 831,
											"end": 981,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9697,
											"end": 9699,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9736,
											"end": 9738,
											"name": "PUSH",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 9716,
											"end": 9734,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9716,
											"end": 9734,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9716,
											"end": 9734,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9709,
											"end": 9739,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9775,
											"end": 9809,
											"name": "PUSH",
											"source": 15,
											"value": "5472616E73666572206F6620746F6B656E7320746F2072656365697665722066"
										},
										{
											"begin": 9755,
											"end": 9773,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 9755,
											"end": 9773,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9755,
											"end": 9773,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9748,
											"end": 9810,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9826,
											"end": 9844,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 9826,
											"end": 9844,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9826,
											"end": 9844,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9819,
											"end": 9854,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9871,
											"end": 9890,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 9871,
											"end": 9890,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 831,
											"end": 981,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 831,
											"end": 981,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 831,
											"end": 981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1008,
											"end": 1016,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1001,
											"end": 1030,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1030,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 1046,
											"end": 1050,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1066,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 1066,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1066,
											"end": 1073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1066,
											"end": 1073,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 1066,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1090,
											"end": 1094,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1001,
											"end": 1106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 1001,
											"end": 1106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1001,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10483,
											"end": 10485,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10465,
											"end": 10486,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10522,
											"end": 10524,
											"name": "PUSH",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 10502,
											"end": 10520,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 10502,
											"end": 10520,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10502,
											"end": 10520,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10495,
											"end": 10525,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10561,
											"end": 10595,
											"name": "PUSH",
											"source": 15,
											"value": "5472616E73666572206F6620746F6B656E7320746F2053746174657220666169"
										},
										{
											"begin": 10541,
											"end": 10559,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 10541,
											"end": 10559,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10541,
											"end": 10559,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10534,
											"end": 10596,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10612,
											"end": 10630,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 10612,
											"end": 10630,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10612,
											"end": 10630,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10605,
											"end": 10638,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10655,
											"end": 10674,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 10655,
											"end": 10674,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 10281,
											"end": 10680,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 993,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 790,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 790,
											"end": 1324,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 790,
											"end": 1324,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 790,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1179,
											"end": 1186,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1186,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1186,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "PUSH",
											"source": 13,
											"value": "8FC"
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1191,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1191,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1191,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1186,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10887,
											"end": 10889,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10869,
											"end": 10890,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10926,
											"end": 10928,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10899,
											"end": 10929,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10965,
											"end": 10999,
											"name": "PUSH",
											"source": 15,
											"value": "5472616E73666572206F662045544820746F207265636569766572206661696C"
										},
										{
											"begin": 10945,
											"end": 10963,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 10945,
											"end": 10963,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10945,
											"end": 10963,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10938,
											"end": 11000,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11016,
											"end": 11034,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 11016,
											"end": 11034,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11016,
											"end": 11034,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11009,
											"end": 11041,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11058,
											"end": 11077,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 11058,
											"end": 11077,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 10685,
											"end": 11083,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 1171,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1259,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 1259,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1259,
											"end": 1266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1259,
											"end": 1266,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 1259,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1251,
											"end": 1272,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "PUSH",
											"source": 13,
											"value": "8FC"
										},
										{
											"begin": 1273,
											"end": 1277,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1278,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11290,
											"end": 11292,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11272,
											"end": 11293,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11272,
											"end": 11293,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11272,
											"end": 11293,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11309,
											"end": 11327,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11309,
											"end": 11327,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11309,
											"end": 11327,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11302,
											"end": 11332,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11368,
											"end": 11402,
											"name": "PUSH",
											"source": 15,
											"value": "5472616E73666572206F662045544820746F20537461746572206661696C6564"
										},
										{
											"begin": 11348,
											"end": 11366,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 11348,
											"end": 11366,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11348,
											"end": 11366,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11341,
											"end": 11403,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11420,
											"end": 11438,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 11420,
											"end": 11438,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 11088,
											"end": 11444,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1243,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 625,
											"end": 1330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1683,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1683,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1711,
											"end": 1733,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1711,
											"end": 1733,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1701,
											"end": 1733,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1701,
											"end": 1733,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1771,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1737,
											"end": 1754,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1737,
											"end": 1761,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1737,
											"end": 1771,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11651,
											"end": 11653,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11633,
											"end": 11654,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11633,
											"end": 11654,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11633,
											"end": 11654,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11670,
											"end": 11688,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11670,
											"end": 11688,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11670,
											"end": 11688,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11663,
											"end": 11693,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11729,
											"end": 11763,
											"name": "PUSH",
											"source": 15,
											"value": "546F6B656E20696E666F732070726F76696465642061726520696E76616C6964"
										},
										{
											"begin": 11709,
											"end": 11727,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 11709,
											"end": 11727,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11709,
											"end": 11727,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11702,
											"end": 11764,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11781,
											"end": 11799,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 11781,
											"end": 11799,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 11449,
											"end": 11805,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 1693,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1822,
											"end": 1831,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1841,
											"end": 1847,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1837,
											"end": 1838,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1837,
											"end": 1847,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1889,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1890,
											"end": 1891,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1872,
											"end": 1892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1892,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1939,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1924,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1942,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1916,
											"end": 1960,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 1960,
											"name": "PUSH",
											"source": 13,
											"value": "42842E0E"
										},
										{
											"begin": 1982,
											"end": 1986,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2008,
											"end": 2010,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2048,
											"end": 2049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 2032,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1916,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2127,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 2112,
											"end": 2130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2130,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "PUSH",
											"source": 13,
											"value": "F242432A"
										},
										{
											"begin": 2170,
											"end": 2174,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2196,
											"end": 2198,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 2220,
											"end": 2238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2238,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2260,
											"end": 2261,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12301,
											"end": 12316,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 12301,
											"end": 12316,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12301,
											"end": 12316,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 12283,
											"end": 12317,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12283,
											"end": 12317,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12353,
											"end": 12368,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12353,
											"end": 12368,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12353,
											"end": 12368,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 12353,
											"end": 12368,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 12348,
											"end": 12350,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12333,
											"end": 12351,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12326,
											"end": 12369,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12400,
											"end": 12402,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12385,
											"end": 12403,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12385,
											"end": 12403,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12378,
											"end": 12412,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12443,
											"end": 12445,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 12428,
											"end": 12446,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12428,
											"end": 12446,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12421,
											"end": 12455,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12421,
											"end": 12455,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12421,
											"end": 12455,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12421,
											"end": 12455,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12263,
											"end": 12266,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 12486,
											"end": 12489,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 12471,
											"end": 12490,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12471,
											"end": 12490,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12464,
											"end": 12496,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12464,
											"end": 12496,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12464,
											"end": 12496,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12533,
											"end": 12534,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 12512,
											"end": 12531,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12512,
											"end": 12531,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12512,
											"end": 12531,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12505,
											"end": 12535,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3078303"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12566,
											"end": 12569,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 12551,
											"end": 12570,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12551,
											"end": 12570,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12544,
											"end": 12579,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12614,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 12596,
											"end": 12615,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12596,
											"end": 12615,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11942,
											"end": 12621,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2103,
											"end": 2307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 1867,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 1849,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1818,
											"end": 2307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1634,
											"end": 2314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 2314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1759,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1732,
											"end": 1762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13426,
											"end": 13428,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13408,
											"end": 13429,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13465,
											"end": 13467,
											"name": "PUSH",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 13445,
											"end": 13463,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 13445,
											"end": 13463,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13445,
											"end": 13463,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13438,
											"end": 13468,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13504,
											"end": 13538,
											"name": "PUSH",
											"source": 15,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 13484,
											"end": 13502,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 13484,
											"end": 13502,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13484,
											"end": 13502,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13477,
											"end": 13539,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13555,
											"end": 13573,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 13555,
											"end": 13573,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13555,
											"end": 13573,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13548,
											"end": 13584,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13601,
											"end": 13620,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 13601,
											"end": 13620,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 13224,
											"end": 13626,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2100,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2081,
											"end": 2109,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 199,
											"end": 270,
											"name": "tag",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 497,
											"end": 628,
											"name": "tag",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 497,
											"end": 628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 572,
											"end": 603,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 572,
											"end": 603,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 562,
											"end": 604,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 562,
											"end": 604,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 552,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 552,
											"end": 622,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 618,
											"end": 619,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 616,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 608,
											"end": 620,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 633,
											"end": 760,
											"name": "tag",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 633,
											"end": 760,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 694,
											"end": 704,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 689,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 685,
											"end": 705,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 682,
											"end": 683,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 706,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 722,
											"end": 723,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 715,
											"end": 730,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 749,
											"end": 753,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 746,
											"end": 747,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 754,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 765,
											"end": 1040,
											"name": "tag",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 765,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 836,
											"end": 838,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 830,
											"end": 839,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 901,
											"end": 903,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 882,
											"end": 895,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 882,
											"end": 895,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 878,
											"end": 905,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 866,
											"end": 906,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 866,
											"end": 906,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 921,
											"end": 955,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 921,
											"end": 955,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 957,
											"end": 979,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 957,
											"end": 979,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 957,
											"end": 979,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 918,
											"end": 980,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 915,
											"end": 1003,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 915,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 915,
											"end": 1003,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 983,
											"end": 1001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "tag",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1019,
											"end": 1021,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1034,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 765,
											"end": 1040,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 765,
											"end": 1040,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 1040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1045,
											"end": 1575,
											"name": "tag",
											"source": 15,
											"value": "148"
										},
										{
											"begin": 1045,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1140,
											"end": 1143,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1133,
											"end": 1137,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1125,
											"end": 1131,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1121,
											"end": 1138,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1107,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "164"
										},
										{
											"begin": 1107,
											"end": 1162,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1158,
											"end": 1159,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1156,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1148,
											"end": 1160,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1107,
											"end": 1162,
											"name": "tag",
											"source": 15,
											"value": "164"
										},
										{
											"begin": 1107,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1181,
											"end": 1201,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1213,
											"end": 1239,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1210,
											"end": 1262,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1210,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 1210,
											"end": 1262,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 1242,
											"end": 1260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "tag",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1286,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 1329,
											"end": 1331,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1310,
											"end": 1323,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1310,
											"end": 1323,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1306,
											"end": 1333,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1335,
											"end": 1339,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1340,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1286,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 1286,
											"end": 1341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1286,
											"end": 1341,
											"name": "tag",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 1286,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1366,
											"end": 1368,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1357,
											"end": 1364,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1412,
											"end": 1415,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1405,
											"end": 1409,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1400,
											"end": 1402,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1392,
											"end": 1398,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1388,
											"end": 1403,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1384,
											"end": 1410,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1381,
											"end": 1416,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1378,
											"end": 1433,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1378,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 1378,
											"end": 1433,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1419,
											"end": 1431,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1378,
											"end": 1433,
											"name": "tag",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 1378,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1494,
											"end": 1496,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1487,
											"end": 1491,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1479,
											"end": 1485,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1475,
											"end": 1492,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1468,
											"end": 1472,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1459,
											"end": 1466,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1442,
											"end": 1497,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1543,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1533,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1517,
											"end": 1533,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1517,
											"end": 1533,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1535,
											"end": 1539,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1513,
											"end": 1540,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1506,
											"end": 1544,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1506,
											"end": 1544,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1506,
											"end": 1544,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1506,
											"end": 1544,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1521,
											"end": 1528,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1045,
											"end": 1575,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1580,
											"end": 2245,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1580,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1675,
											"end": 1681,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1689,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1691,
											"end": 1697,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1705,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1752,
											"end": 1755,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 1740,
											"end": 1749,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1731,
											"end": 1738,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1727,
											"end": 1750,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1723,
											"end": 1756,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1720,
											"end": 1773,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1720,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 1720,
											"end": 1773,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1769,
											"end": 1770,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1759,
											"end": 1771,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1720,
											"end": 1773,
											"name": "tag",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 1720,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1795,
											"end": 1818,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1827,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 1852,
											"end": 1857,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1827,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 1827,
											"end": 1858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1827,
											"end": 1858,
											"name": "tag",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 1827,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1934,
											"end": 1936,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1919,
											"end": 1937,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1919,
											"end": 1937,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1906,
											"end": 1938,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1947,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 1906,
											"end": 1938,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1947,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 1947,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1947,
											"end": 1980,
											"name": "tag",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 1947,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1999,
											"end": 2006,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2038,
											"end": 2056,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2038,
											"end": 2056,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2025,
											"end": 2057,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2025,
											"end": 2057,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2108,
											"end": 2110,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2093,
											"end": 2111,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2093,
											"end": 2111,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2080,
											"end": 2112,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2124,
											"end": 2154,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2124,
											"end": 2154,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2121,
											"end": 2171,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2121,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 2121,
											"end": 2171,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2167,
											"end": 2168,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2165,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2121,
											"end": 2171,
											"name": "tag",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 2121,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2190,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 2231,
											"end": 2238,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 2222,
											"end": 2228,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2211,
											"end": 2220,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 2207,
											"end": 2229,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2190,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "148"
										},
										{
											"begin": 2190,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2190,
											"end": 2239,
											"name": "tag",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 2190,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2180,
											"end": 2239,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2180,
											"end": 2239,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2180,
											"end": 2239,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1580,
											"end": 2245,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1580,
											"end": 2245,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 1580,
											"end": 2245,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1580,
											"end": 2245,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 1580,
											"end": 2245,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1580,
											"end": 2245,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1580,
											"end": 2245,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1580,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2457,
											"end": 3132,
											"name": "tag",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 2457,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2582,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2590,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2592,
											"end": 2598,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2648,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 2633,
											"end": 2642,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2631,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 2620,
											"end": 2643,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2616,
											"end": 2649,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2613,
											"end": 2666,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2613,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 2613,
											"end": 2666,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2662,
											"end": 2663,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2659,
											"end": 2660,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2652,
											"end": 2664,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2613,
											"end": 2666,
											"name": "tag",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 2613,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2701,
											"end": 2710,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2688,
											"end": 2711,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2720,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 2745,
											"end": 2750,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2720,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 2720,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2720,
											"end": 2751,
											"name": "tag",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 2720,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2770,
											"end": 2775,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2827,
											"end": 2829,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2812,
											"end": 2830,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2812,
											"end": 2830,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2799,
											"end": 2831,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2840,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 2799,
											"end": 2831,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2840,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 2840,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2840,
											"end": 2873,
											"name": "tag",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 2840,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2951,
											"end": 2953,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "180"
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 2964,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 2997,
											"name": "tag",
											"source": 15,
											"value": "180"
										},
										{
											"begin": 2964,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2457,
											"end": 3132,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2457,
											"end": 3132,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 2457,
											"end": 3132,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2457,
											"end": 3132,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3016,
											"end": 3023,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3016,
											"end": 3023,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3070,
											"end": 3072,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3042,
											"end": 3074,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3042,
											"end": 3074,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3121,
											"end": 3124,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3106,
											"end": 3125,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3093,
											"end": 3126,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3093,
											"end": 3126,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2457,
											"end": 3132,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2457,
											"end": 3132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3137,
											"end": 3320,
											"name": "tag",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 3137,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3197,
											"end": 3201,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3219,
											"end": 3249,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3219,
											"end": 3249,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3216,
											"end": 3272,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3216,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 3216,
											"end": 3272,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3252,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 3252,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 3252,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3252,
											"end": 3270,
											"name": "tag",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 3252,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3297,
											"end": 3298,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 3293,
											"end": 3307,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 3309,
											"end": 3313,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3289,
											"end": 3314,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3289,
											"end": 3314,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3137,
											"end": 3320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3325,
											"end": 3987,
											"name": "tag",
											"source": 15,
											"value": "150"
										},
										{
											"begin": 3325,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3379,
											"end": 3384,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3435,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3425,
											"end": 3429,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3417,
											"end": 3423,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3413,
											"end": 3430,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3409,
											"end": 3436,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3399,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 3399,
											"end": 3454,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3440,
											"end": 3452,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3399,
											"end": 3454,
											"name": "tag",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 3399,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3486,
											"end": 3492,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3473,
											"end": 3493,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3512,
											"end": 3516,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3536,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 3552,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 3592,
											"end": 3594,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3552,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 3552,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3552,
											"end": 3595,
											"name": "tag",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 3552,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3536,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 3536,
											"end": 3596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3536,
											"end": 3596,
											"name": "tag",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 3536,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3630,
											"end": 3645,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3630,
											"end": 3645,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3630,
											"end": 3645,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3716,
											"end": 3717,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 3712,
											"end": 3722,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3712,
											"end": 3722,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3712,
											"end": 3722,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3712,
											"end": 3722,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 3700,
											"end": 3723,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3700,
											"end": 3723,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3696,
											"end": 3728,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3696,
											"end": 3728,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3696,
											"end": 3728,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3740,
											"end": 3755,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3740,
											"end": 3755,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3740,
											"end": 3755,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3737,
											"end": 3772,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3737,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 3737,
											"end": 3772,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3768,
											"end": 3769,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3766,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3758,
											"end": 3770,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3737,
											"end": 3772,
											"name": "tag",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 3737,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3804,
											"end": 3806,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3796,
											"end": 3802,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3792,
											"end": 3807,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3816,
											"end": 3958,
											"name": "tag",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 3816,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3832,
											"end": 3838,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3827,
											"end": 3830,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3824,
											"end": 3839,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3816,
											"end": 3958,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3816,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 3816,
											"end": 3958,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3898,
											"end": 3915,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3898,
											"end": 3915,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3886,
											"end": 3916,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3886,
											"end": 3916,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3936,
											"end": 3948,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3936,
											"end": 3948,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3936,
											"end": 3948,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3936,
											"end": 3948,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3849,
											"end": 3861,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3849,
											"end": 3861,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3816,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 3816,
											"end": 3958,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3816,
											"end": 3958,
											"name": "tag",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 3816,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3976,
											"end": 3981,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 3325,
											"end": 3987,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3325,
											"end": 3987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3992,
											"end": 4821,
											"name": "tag",
											"source": 15,
											"value": "151"
										},
										{
											"begin": 3992,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4044,
											"end": 4049,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4097,
											"end": 4100,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4090,
											"end": 4094,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4082,
											"end": 4088,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4078,
											"end": 4095,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4074,
											"end": 4101,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4064,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 4064,
											"end": 4119,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4115,
											"end": 4116,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4112,
											"end": 4113,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4105,
											"end": 4117,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4064,
											"end": 4119,
											"name": "tag",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 4064,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4151,
											"end": 4157,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4138,
											"end": 4158,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4177,
											"end": 4181,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4201,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 4217,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 4257,
											"end": 4259,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4217,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 4217,
											"end": 4260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4201,
											"end": 4261,
											"name": "tag",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 4201,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4295,
											"end": 4310,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4381,
											"end": 4382,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 4377,
											"end": 4387,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4377,
											"end": 4387,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4377,
											"end": 4387,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4377,
											"end": 4387,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 4365,
											"end": 4388,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4365,
											"end": 4388,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4393,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4393,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4393,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4326,
											"end": 4338,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4326,
											"end": 4338,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4326,
											"end": 4338,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4326,
											"end": 4338,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4405,
											"end": 4420,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4405,
											"end": 4420,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4405,
											"end": 4420,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4402,
											"end": 4437,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4402,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 4402,
											"end": 4437,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4433,
											"end": 4434,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4430,
											"end": 4431,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4423,
											"end": 4435,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4402,
											"end": 4437,
											"name": "tag",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 4402,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4469,
											"end": 4471,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4461,
											"end": 4467,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4457,
											"end": 4472,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4481,
											"end": 4792,
											"name": "tag",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 4481,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4497,
											"end": 4503,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4492,
											"end": 4495,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4489,
											"end": 4504,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 4481,
											"end": 4792,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4481,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 4481,
											"end": 4792,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4577,
											"end": 4580,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4564,
											"end": 4581,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4625,
											"end": 4629,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 4618,
											"end": 4623,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4614,
											"end": 4630,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4607,
											"end": 4612,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4604,
											"end": 4631,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 4594,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "200"
										},
										{
											"begin": 4594,
											"end": 4719,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4673,
											"end": 4674,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4702,
											"end": 4704,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4698,
											"end": 4700,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4691,
											"end": 4705,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4594,
											"end": 4719,
											"name": "tag",
											"source": 15,
											"value": "200"
										},
										{
											"begin": 4594,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4732,
											"end": 4750,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4732,
											"end": 4750,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4770,
											"end": 4782,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4770,
											"end": 4782,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4770,
											"end": 4782,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4770,
											"end": 4782,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4514,
											"end": 4526,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4514,
											"end": 4526,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4481,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 4481,
											"end": 4792,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4826,
											"end": 6545,
											"name": "tag",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 4826,
											"end": 6545,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4994,
											"end": 5000,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5008,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5010,
											"end": 5016,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5018,
											"end": 5024,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5026,
											"end": 5032,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5079,
											"end": 5082,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 5067,
											"end": 5076,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5058,
											"end": 5065,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5054,
											"end": 5077,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5050,
											"end": 5083,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5047,
											"end": 5100,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5047,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "202"
										},
										{
											"begin": 5047,
											"end": 5100,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5096,
											"end": 5097,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5086,
											"end": 5098,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5047,
											"end": 5100,
											"name": "tag",
											"source": 15,
											"value": "202"
										},
										{
											"begin": 5047,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5135,
											"end": 5144,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5122,
											"end": 5145,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5154,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 5179,
											"end": 5184,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5154,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 5154,
											"end": 5185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5154,
											"end": 5185,
											"name": "tag",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 5154,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5204,
											"end": 5209,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5228,
											"end": 5230,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5267,
											"end": 5285,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5267,
											"end": 5285,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5267,
											"end": 5285,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5254,
											"end": 5286,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5295,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "204"
										},
										{
											"begin": 5254,
											"end": 5286,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5295,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 5295,
											"end": 5328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5295,
											"end": 5328,
											"name": "tag",
											"source": 15,
											"value": "204"
										},
										{
											"begin": 5295,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5354,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5405,
											"end": 5407,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5390,
											"end": 5408,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5390,
											"end": 5408,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5377,
											"end": 5409,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5458,
											"end": 5472,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5458,
											"end": 5472,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5458,
											"end": 5472,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5455,
											"end": 5489,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5455,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 5455,
											"end": 5489,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5485,
											"end": 5486,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5482,
											"end": 5483,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5475,
											"end": 5487,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5455,
											"end": 5489,
											"name": "tag",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 5455,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5523,
											"end": 5529,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5512,
											"end": 5521,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5508,
											"end": 5530,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5498,
											"end": 5530,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5498,
											"end": 5530,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5568,
											"end": 5575,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5561,
											"end": 5565,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 5557,
											"end": 5559,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5553,
											"end": 5566,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5549,
											"end": 5576,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5539,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 5539,
											"end": 5594,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5590,
											"end": 5591,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5587,
											"end": 5588,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5580,
											"end": 5592,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5539,
											"end": 5594,
											"name": "tag",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 5539,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5626,
											"end": 5628,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5613,
											"end": 5629,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5649,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 5665,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 5705,
											"end": 5707,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5665,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 5665,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5649,
											"end": 5709,
											"name": "tag",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 5649,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5743,
											"end": 5758,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5743,
											"end": 5758,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5743,
											"end": 5758,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5825,
											"end": 5826,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 5821,
											"end": 5831,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5821,
											"end": 5831,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5821,
											"end": 5831,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5821,
											"end": 5831,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 5813,
											"end": 5832,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5813,
											"end": 5832,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5809,
											"end": 5837,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5809,
											"end": 5837,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5809,
											"end": 5837,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5774,
											"end": 5786,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5774,
											"end": 5786,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5774,
											"end": 5786,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5774,
											"end": 5786,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "DUP13",
											"source": 15
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5849,
											"end": 5868,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5846,
											"end": 5885,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5846,
											"end": 5885,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 5846,
											"end": 5885,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5881,
											"end": 5882,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5878,
											"end": 5879,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5871,
											"end": 5883,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5846,
											"end": 5885,
											"name": "tag",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 5846,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5905,
											"end": 5916,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5905,
											"end": 5916,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5905,
											"end": 5916,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5905,
											"end": 5916,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5925,
											"end": 6148,
											"name": "tag",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 5925,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5941,
											"end": 5947,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5936,
											"end": 5939,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5933,
											"end": 5948,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5925,
											"end": 6148,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5925,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "212"
										},
										{
											"begin": 5925,
											"end": 6148,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6023,
											"end": 6026,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6010,
											"end": 6027,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6040,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 6065,
											"end": 6072,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6040,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 6040,
											"end": 6073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6040,
											"end": 6073,
											"name": "tag",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 6040,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6086,
											"end": 6106,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6086,
											"end": 6106,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5958,
											"end": 5970,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5958,
											"end": 5970,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5958,
											"end": 5970,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5958,
											"end": 5970,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6126,
											"end": 6138,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6126,
											"end": 6138,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6126,
											"end": 6138,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6126,
											"end": 6138,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5925,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 5925,
											"end": 6148,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5925,
											"end": 6148,
											"name": "tag",
											"source": 15,
											"value": "212"
										},
										{
											"begin": 5925,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6167,
											"end": 6172,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6227,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 6210,
											"end": 6228,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 6210,
											"end": 6228,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6197,
											"end": 6229,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6197,
											"end": 6229,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6241,
											"end": 6257,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6241,
											"end": 6257,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6241,
											"end": 6257,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6238,
											"end": 6274,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6238,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 6238,
											"end": 6274,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6270,
											"end": 6271,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6267,
											"end": 6268,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6260,
											"end": 6272,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6238,
											"end": 6274,
											"name": "tag",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 6238,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6293,
											"end": 6356,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 6348,
											"end": 6355,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 6337,
											"end": 6345,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6326,
											"end": 6335,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 6322,
											"end": 6346,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6293,
											"end": 6356,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "150"
										},
										{
											"begin": 6293,
											"end": 6356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6293,
											"end": 6356,
											"name": "tag",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 6293,
											"end": 6356,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6283,
											"end": 6356,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 6283,
											"end": 6356,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6409,
											"end": 6412,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 6398,
											"end": 6407,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 6394,
											"end": 6413,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6381,
											"end": 6414,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6365,
											"end": 6414,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6365,
											"end": 6414,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6439,
											"end": 6441,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6429,
											"end": 6437,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6426,
											"end": 6442,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6423,
											"end": 6459,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6423,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 6423,
											"end": 6459,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6455,
											"end": 6456,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6452,
											"end": 6453,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6423,
											"end": 6459,
											"name": "tag",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 6423,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6423,
											"end": 6459,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6423,
											"end": 6459,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6478,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 6531,
											"end": 6538,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 6520,
											"end": 6528,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6509,
											"end": 6518,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 6505,
											"end": 6529,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6478,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "151"
										},
										{
											"begin": 6478,
											"end": 6539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6478,
											"end": 6539,
											"name": "tag",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 6478,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6468,
											"end": 6539,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6468,
											"end": 6539,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6468,
											"end": 6539,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4826,
											"end": 6545,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4826,
											"end": 6545,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 4826,
											"end": 6545,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4826,
											"end": 6545,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4826,
											"end": 6545,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 4826,
											"end": 6545,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4826,
											"end": 6545,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4826,
											"end": 6545,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4826,
											"end": 6545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6758,
											"end": 7829,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6758,
											"end": 7829,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6912,
											"end": 6918,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6920,
											"end": 6926,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6928,
											"end": 6934,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6942,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6944,
											"end": 6950,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6997,
											"end": 7000,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 6985,
											"end": 6994,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6976,
											"end": 6983,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 6972,
											"end": 6995,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6968,
											"end": 7001,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6965,
											"end": 7018,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6965,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 6965,
											"end": 7018,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7014,
											"end": 7015,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7011,
											"end": 7012,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7004,
											"end": 7016,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6965,
											"end": 7018,
											"name": "tag",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 6965,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7053,
											"end": 7062,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7040,
											"end": 7063,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 7072,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 7097,
											"end": 7102,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7072,
											"end": 7103,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 7072,
											"end": 7103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7072,
											"end": 7103,
											"name": "tag",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 7072,
											"end": 7103,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7122,
											"end": 7127,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7179,
											"end": 7181,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7164,
											"end": 7182,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7164,
											"end": 7182,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7151,
											"end": 7183,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 7192,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 7151,
											"end": 7183,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7192,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 7192,
											"end": 7225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7192,
											"end": 7225,
											"name": "tag",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 7192,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7244,
											"end": 7251,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7302,
											"end": 7304,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7287,
											"end": 7305,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7287,
											"end": 7305,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7274,
											"end": 7306,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7355,
											"end": 7369,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7355,
											"end": 7369,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7355,
											"end": 7369,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7352,
											"end": 7386,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7352,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 7352,
											"end": 7386,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7382,
											"end": 7383,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7380,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7372,
											"end": 7384,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7352,
											"end": 7386,
											"name": "tag",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 7352,
											"end": 7386,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7405,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 7458,
											"end": 7465,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 7449,
											"end": 7455,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7438,
											"end": 7447,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 7434,
											"end": 7456,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7405,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "150"
										},
										{
											"begin": 7405,
											"end": 7466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7405,
											"end": 7466,
											"name": "tag",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 7405,
											"end": 7466,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7395,
											"end": 7466,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 7395,
											"end": 7466,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7519,
											"end": 7521,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 7508,
											"end": 7517,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 7504,
											"end": 7522,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7491,
											"end": 7523,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 7475,
											"end": 7523,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7475,
											"end": 7523,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7548,
											"end": 7550,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7538,
											"end": 7546,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7535,
											"end": 7551,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7532,
											"end": 7568,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7532,
											"end": 7568,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 7532,
											"end": 7568,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7564,
											"end": 7565,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7561,
											"end": 7562,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7554,
											"end": 7566,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7532,
											"end": 7568,
											"name": "tag",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 7532,
											"end": 7568,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7587,
											"end": 7650,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 7642,
											"end": 7649,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 7631,
											"end": 7639,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7620,
											"end": 7629,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 7616,
											"end": 7640,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7587,
											"end": 7650,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "150"
										},
										{
											"begin": 7587,
											"end": 7650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7587,
											"end": 7650,
											"name": "tag",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 7587,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7577,
											"end": 7650,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 7577,
											"end": 7650,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7703,
											"end": 7706,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 7692,
											"end": 7701,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 7688,
											"end": 7707,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7675,
											"end": 7708,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 7659,
											"end": 7708,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7659,
											"end": 7708,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7733,
											"end": 7735,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7723,
											"end": 7731,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7720,
											"end": 7736,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7717,
											"end": 7753,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7717,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 7717,
											"end": 7753,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7749,
											"end": 7750,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7746,
											"end": 7747,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7739,
											"end": 7751,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7717,
											"end": 7753,
											"name": "tag",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 7717,
											"end": 7753,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7717,
											"end": 7753,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7772,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 7815,
											"end": 7822,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 7804,
											"end": 7812,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7793,
											"end": 7802,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 7789,
											"end": 7813,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7772,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "148"
										},
										{
											"begin": 7772,
											"end": 7823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7834,
											"end": 8568,
											"name": "tag",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 7834,
											"end": 8568,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7938,
											"end": 7944,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7952,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7962,
											"end": 7968,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7970,
											"end": 7976,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8023,
											"end": 8026,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 8011,
											"end": 8020,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8002,
											"end": 8009,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 7998,
											"end": 8021,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7994,
											"end": 8027,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 7991,
											"end": 8044,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7991,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 7991,
											"end": 8044,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8040,
											"end": 8041,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8037,
											"end": 8038,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8030,
											"end": 8042,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7991,
											"end": 8044,
											"name": "tag",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 7991,
											"end": 8044,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8079,
											"end": 8088,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8066,
											"end": 8089,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8098,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 8123,
											"end": 8128,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8098,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 8098,
											"end": 8129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8098,
											"end": 8129,
											"name": "tag",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 8098,
											"end": 8129,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8148,
											"end": 8153,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8205,
											"end": 8207,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8190,
											"end": 8208,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8190,
											"end": 8208,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8177,
											"end": 8209,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8218,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "232"
										},
										{
											"begin": 8177,
											"end": 8209,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8218,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 8218,
											"end": 8251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8218,
											"end": 8251,
											"name": "tag",
											"source": 15,
											"value": "232"
										},
										{
											"begin": 8218,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8270,
											"end": 8277,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8324,
											"end": 8326,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8296,
											"end": 8328,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8296,
											"end": 8328,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8375,
											"end": 8377,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 8360,
											"end": 8378,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8360,
											"end": 8378,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8347,
											"end": 8379,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8347,
											"end": 8379,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8430,
											"end": 8433,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 8415,
											"end": 8434,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8415,
											"end": 8434,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8402,
											"end": 8435,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8447,
											"end": 8477,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8447,
											"end": 8477,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8444,
											"end": 8494,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8444,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 8444,
											"end": 8494,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8490,
											"end": 8491,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8487,
											"end": 8488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8480,
											"end": 8492,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8444,
											"end": 8494,
											"name": "tag",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 8444,
											"end": 8494,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8513,
											"end": 8562,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 8554,
											"end": 8561,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 8545,
											"end": 8551,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8534,
											"end": 8543,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 8530,
											"end": 8552,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8513,
											"end": 8562,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "148"
										},
										{
											"begin": 8513,
											"end": 8562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8573,
											"end": 8820,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 8573,
											"end": 8820,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8632,
											"end": 8638,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8685,
											"end": 8687,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8673,
											"end": 8682,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8664,
											"end": 8671,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8660,
											"end": 8683,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8656,
											"end": 8688,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8653,
											"end": 8705,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8653,
											"end": 8705,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 8653,
											"end": 8705,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8701,
											"end": 8702,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8698,
											"end": 8699,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8691,
											"end": 8703,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8653,
											"end": 8705,
											"name": "tag",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 8653,
											"end": 8705,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8740,
											"end": 8749,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8727,
											"end": 8750,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8759,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 8784,
											"end": 8789,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8759,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 8759,
											"end": 8790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8825,
											"end": 9208,
											"name": "tag",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 8825,
											"end": 9208,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9091,
											"end": 9106,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9091,
											"end": 9106,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9091,
											"end": 9106,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9073,
											"end": 9107,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9073,
											"end": 9107,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9143,
											"end": 9158,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9143,
											"end": 9158,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9143,
											"end": 9158,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9143,
											"end": 9158,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9138,
											"end": 9140,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9123,
											"end": 9141,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9123,
											"end": 9141,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9116,
											"end": 9159,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9190,
											"end": 9192,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9175,
											"end": 9193,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9175,
											"end": 9193,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9168,
											"end": 9202,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9168,
											"end": 9202,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9168,
											"end": 9202,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9168,
											"end": 9202,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9023,
											"end": 9025,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8825,
											"end": 9208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9213,
											"end": 9490,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 9213,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9280,
											"end": 9286,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9333,
											"end": 9335,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9321,
											"end": 9330,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9312,
											"end": 9319,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9308,
											"end": 9331,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9304,
											"end": 9336,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 9301,
											"end": 9353,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9301,
											"end": 9353,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 9301,
											"end": 9353,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9349,
											"end": 9350,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9347,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9339,
											"end": 9351,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9301,
											"end": 9353,
											"name": "tag",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 9301,
											"end": 9353,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9381,
											"end": 9390,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9375,
											"end": 9391,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 9434,
											"end": 9439,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9427,
											"end": 9440,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9420,
											"end": 9441,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9413,
											"end": 9418,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9410,
											"end": 9442,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 9400,
											"end": 9460,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 9400,
											"end": 9460,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9456,
											"end": 9457,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9453,
											"end": 9454,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9446,
											"end": 9458,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11810,
											"end": 11937,
											"name": "tag",
											"source": 15,
											"value": "97"
										},
										{
											"begin": 11810,
											"end": 11937,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11871,
											"end": 11881,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 11866,
											"end": 11869,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 11862,
											"end": 11882,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 11859,
											"end": 11860,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11852,
											"end": 11883,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11902,
											"end": 11906,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 11899,
											"end": 11900,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 11892,
											"end": 11907,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11926,
											"end": 11930,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11923,
											"end": 11924,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11916,
											"end": 11931,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 12626,
											"end": 12858,
											"name": "tag",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 12626,
											"end": 12858,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12665,
											"end": 12668,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12686,
											"end": 12703,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 12686,
											"end": 12703,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12686,
											"end": 12703,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12683,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 12683,
											"end": 12823,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12745,
											"end": 12755,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 12740,
											"end": 12743,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 12736,
											"end": 12756,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 12733,
											"end": 12734,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12726,
											"end": 12757,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12780,
											"end": 12784,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 12777,
											"end": 12778,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 12770,
											"end": 12785,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12808,
											"end": 12812,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12805,
											"end": 12806,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12798,
											"end": 12813,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 12683,
											"end": 12823,
											"name": "tag",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 12683,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12850,
											"end": 12851,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 12839,
											"end": 12852,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12852,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12626,
											"end": 12858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12863,
											"end": 13219,
											"name": "tag",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 12863,
											"end": 13219,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13065,
											"end": 13067,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13047,
											"end": 13068,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13047,
											"end": 13068,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13047,
											"end": 13068,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13084,
											"end": 13102,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13084,
											"end": 13102,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13084,
											"end": 13102,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13077,
											"end": 13107,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13143,
											"end": 13177,
											"name": "PUSH",
											"source": 15,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13138,
											"end": 13140,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 13123,
											"end": 13141,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13123,
											"end": 13141,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13116,
											"end": 13178,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13210,
											"end": 13212,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 13195,
											"end": 13213,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13195,
											"end": 13213,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12863,
											"end": 13219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/lending/LendingCore.sol",
								"contracts/plugins/StaterTransfers.sol",
								"contracts/workers/IStaterDiscounts.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferItems(address,address,address[],uint256[],uint8[])": "407299d7",
							"transferOwnership(address)": "f2fde38b",
							"transferTokens(address,address,address,uint256,uint256)": "2e3f4a5d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"nftAddressArray\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftTokenIdArray\",\"type\":\"uint256[]\"},{\"internalType\":\"uint8[]\",\"name\":\"nftTokenTypeArray\",\"type\":\"uint8[]\"}],\"name\":\"transferItems\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"qty1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty2\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/plugins/StaterTransfers.sol\":\"StaterTransfers\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/plugins/StaterTransfers.sol\":{\"keccak256\":\"0x2b356031f5bffcf643d1d9d1bc4b347876e45b8ab49d7c177e80a1560ce36b5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc748c5f0dd66ee67ab6c95f481b207f647c5454996b9eff96aacff38ba01334\",\"dweb:/ipfs/QmNfpmcpU7iYnMKUkWdpAeeEaDoGEC8VSbf76Mue3QupQj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/plugins/StaterTransfers.sol:StaterTransfers",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/workers/IStaterDiscounts.sol": {
				"IStaterDiscounts": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "requester",
									"type": "address"
								}
							],
							"name": "calculateDiscount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_discountId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenIdIndex",
									"type": "uint256"
								}
							],
							"name": "getDiscountTokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateDiscount(address)": "ad6a8745",
							"getDiscountTokenId(uint256,uint256)": "19cb2350"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"calculateDiscount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_discountId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenIdIndex\",\"type\":\"uint256\"}],\"name\":\"getDiscountTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/workers/IStaterDiscounts.sol\":\"IStaterDiscounts\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/workers/IStaterDiscounts.sol\":{\"keccak256\":\"0xce08f458990c5b99c72e7ccec9937788a74d8939915cbb3ad8a0d3d46bca46f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://493c73186454b29f4d914c702b500ab69354791889cfa47c3df494a8ad224f1a\",\"dweb:/ipfs/QmWEMNqMVkJpFV7CRXbeyfeftJcGhUWRpc2UAfJ9BtnZF8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							613
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 614,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 613,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								613
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							226
						],
						"IERC165": [
							649
						]
					},
					"id": 227,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 227,
							"sourceUnit": 650,
							"src": "120:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 109,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 649,
										"src": "357:7:1"
									},
									"id": 110,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:1"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 108,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:1",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 226,
							"linearizedBaseContracts": [
								226,
								649
							],
							"name": "IERC1155",
							"nameLocation": "345:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:1",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 123,
									"name": "TransferSingle",
									"nameLocation": "503:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "518:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "544:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "566:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "586:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "598:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:1"
									},
									"src": "497:116:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:1",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 138,
									"name": "TransferBatch",
									"nameLocation": "774:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "797:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "831:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "861:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "889:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 131,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 132,
													"nodeType": "ArrayTypeName",
													"src": "889:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "912:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 134,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 135,
													"nodeType": "ArrayTypeName",
													"src": "912:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:1"
									},
									"src": "768:167:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:1",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 147,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "1114:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "1139:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "1165:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:1"
									},
									"src": "1093:87:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:1",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 154,
									"name": "URI",
									"nameLocation": "1540:3:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1544:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1558:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:1"
									},
									"src": "1534:44:1"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:1",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1781:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1798:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1833:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:1"
									},
									"scope": 226,
									"src": "1762:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2065:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 166,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 167,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2094:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 169,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 170,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2165:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 173,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 174,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:1"
									},
									"scope": 226,
									"src": "2041:142:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:1",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "2469:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "2487:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 181,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:1"
									},
									"scope": 226,
									"src": "2442:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:1",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2683:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2700:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2741:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:1"
									},
									"scope": 226,
									"src": "2657:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:1",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3352:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3374:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3394:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3414:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3438:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 205,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:1"
									},
									"scope": 226,
									"src": "3317:156:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "3914:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "3936:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "3956:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 215,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 216,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "3988:26:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 218,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 219,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "4024:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 221,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:1"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:1"
									},
									"scope": 226,
									"src": "3874:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 227,
							"src": "335:3726:1",
							"usedErrors": []
						}
					],
					"src": "95:3967:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							267
						],
						"IERC165": [
							649
						]
					},
					"id": 268,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 228,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 268,
							"sourceUnit": 650,
							"src": "143:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 231,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 649,
										"src": "262:7:2"
									},
									"id": 232,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:2"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 230,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 267,
							"linearizedBaseContracts": [
								267,
								649
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:2",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1143:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1169:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1191:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1211:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1234:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:2"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1278:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 245,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:2"
									},
									"scope": 267,
									"src": "1107:179:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:2",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 266,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2332:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2358:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2380:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 254,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 255,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2412:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 257,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 258,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2447:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:2"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2491:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 263,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:2"
									},
									"scope": 267,
									"src": "2291:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 268,
							"src": "232:2269:2",
							"usedErrors": []
						}
					],
					"src": "118:2384:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
					"exportedSymbols": {
						"ERC1155Holder": [
							318
						],
						"ERC1155Receiver": [
							352
						],
						"ERC165": [
							637
						],
						"IERC1155Receiver": [
							267
						],
						"IERC165": [
							649
						]
					},
					"id": 319,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 269,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "121:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
							"file": "./ERC1155Receiver.sol",
							"id": 270,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 319,
							"sourceUnit": 353,
							"src": "146:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 272,
										"name": "ERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 352,
										"src": "477:15:3"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "477:15:3"
								}
							],
							"canonicalName": "ERC1155Holder",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 271,
								"nodeType": "StructuredDocumentation",
								"src": "179:271:3",
								"text": " Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n stuck.\n @dev _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 318,
							"linearizedBaseContracts": [
								318,
								352,
								267,
								637,
								649
							],
							"name": "ERC1155Holder",
							"nameLocation": "460:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										248
									],
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "663:55:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 289,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "680:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$318",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC1155Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 294,
														"src": "680:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "680:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 288,
												"id": 292,
												"nodeType": "Return",
												"src": "673:38:3"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "508:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 285,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "637:8:3"
									},
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "535:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "552:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "569:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "586:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "603:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 282,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "603:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:96:3"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "655:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 286,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "655:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:8:3"
									},
									"scope": 318,
									"src": "499:219:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										266
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "911:60:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 312,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "928:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$318",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC1155BatchReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 317,
														"src": "928:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "928:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 311,
												"id": 315,
												"nodeType": "Return",
												"src": "921:43:3"
											}
										]
									},
									"functionSelector": "bc197c81",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "733:22:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 308,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "885:8:3"
									},
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "765:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "782:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "799:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 299,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "799:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 300,
													"nodeType": "ArrayTypeName",
													"src": "799:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "825:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 302,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "825:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 303,
													"nodeType": "ArrayTypeName",
													"src": "825:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "851:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "851:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:114:3"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "903:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 309,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "903:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:8:3"
									},
									"scope": 318,
									"src": "724:247:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 319,
							"src": "451:522:3",
							"usedErrors": []
						}
					],
					"src": "121:853:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
					"exportedSymbols": {
						"ERC1155Receiver": [
							352
						],
						"ERC165": [
							637
						],
						"IERC1155Receiver": [
							267
						],
						"IERC165": [
							649
						]
					},
					"id": 353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 320,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "../IERC1155Receiver.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 268,
							"src": "133:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 638,
							"src": "167:49:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 324,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 637,
										"src": "295:6:4"
									},
									"id": 325,
									"nodeType": "InheritanceSpecifier",
									"src": "295:6:4"
								},
								{
									"baseName": {
										"id": 326,
										"name": "IERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 267,
										"src": "303:16:4"
									},
									"id": 327,
									"nodeType": "InheritanceSpecifier",
									"src": "303:16:4"
								}
							],
							"canonicalName": "ERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 323,
								"nodeType": "StructuredDocumentation",
								"src": "218:39:4",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 352,
							"linearizedBaseContracts": [
								352,
								267,
								637,
								649
							],
							"name": "ERC1155Receiver",
							"nameLocation": "276:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										636,
										648
									],
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "495:113:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 338,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "512:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 340,
																		"name": "IERC1155Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "532:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$267_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$267_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	],
																	"id": 339,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "527:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "527:22:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$267",
																	"typeString": "type(contract IERC1155Receiver)"
																}
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "527:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "512:49:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 346,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "589:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 344,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "565:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155Receiver_$352_$",
																	"typeString": "type(contract super ERC1155Receiver)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 636,
															"src": "565:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "565:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "512:89:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 337,
												"id": 349,
												"nodeType": "Return",
												"src": "505:96:4"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "326:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "396:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 334,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 332,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 637,
												"src": "463:6:4"
											},
											{
												"id": 333,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 649,
												"src": "471:7:4"
											}
										],
										"src": "454:25:4"
									},
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "421:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "414:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 329,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "414:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:20:4"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "489:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 335,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "489:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:6:4"
									},
									"scope": 352,
									"src": "387:221:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 353,
							"src": "258:352:4",
							"usedErrors": []
						}
					],
					"src": "108:503:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							430
						]
					},
					"id": 431,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 355,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 430,
							"linearizedBaseContracts": [
								430
							],
							"name": "IERC20",
							"nameLocation": "212:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 364,
									"name": "Transfer",
									"nameLocation": "394:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "403:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "425:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "445:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:5"
									},
									"src": "388:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 373,
									"name": "Approval",
									"nameLocation": "625:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "634:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "657:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "682:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:5"
									},
									"src": "619:78:5"
								},
								{
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 430,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 430,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1211:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1223:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:5"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1257:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:5"
									},
									"scope": 430,
									"src": "1193:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1557:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1572:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:5"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1612:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:5"
									},
									"scope": 430,
									"src": "1538:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "2291:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "2308:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:5"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "2342:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:5"
									},
									"scope": 430,
									"src": "2274:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:5",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "2677:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "2699:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "2719:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:5"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "2758:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:5"
									},
									"scope": 430,
									"src": "2646:118:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 431,
							"src": "202:2564:5",
							"usedErrors": []
						}
					],
					"src": "106:2661:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							649
						],
						"IERC721": [
							546
						]
					},
					"id": 547,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 432,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 433,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 547,
							"sourceUnit": 650,
							"src": "133:47:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 435,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 649,
										"src": "271:7:6"
									},
									"id": 436,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 434,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 546,
							"linearizedBaseContracts": [
								546,
								649
							],
							"name": "IERC721",
							"nameLocation": "260:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 445,
									"name": "Transfer",
									"nameLocation": "384:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "393:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "415:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "435:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:6"
									},
									"src": "378:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 454,
									"name": "Approval",
									"nameLocation": "571:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "580:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "603:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "629:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:6"
									},
									"src": "565:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 463,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "803:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "826:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "852:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 460,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:6"
									},
									"src": "782:85:6"
								},
								{
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "973:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:6"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "1011:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:6"
									},
									"scope": 546,
									"src": "954:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1187:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:6"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1227:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:6"
									},
									"scope": 546,
									"src": "1170:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 491,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1844:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1866:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1886:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1911:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:6"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:6"
									},
									"scope": 546,
									"src": "1809:137:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "1952:690:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2656:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2690:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "2682:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2712:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "2704:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2732:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "2724:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2672:73:6"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2754:0:6"
									},
									"scope": 546,
									"src": "2647:108:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "2761:504:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3279:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3309:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "3301:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3331:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "3323:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3351:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "3343:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:73:6"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:6"
									},
									"scope": 546,
									"src": "3270:104:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "3380:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3846:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3862:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3854:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3874:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3866:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:29:6"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3891:0:6"
									},
									"scope": 546,
									"src": "3837:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "3898:309:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4221:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4247:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "4239:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4262:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "4257:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 523,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4257:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:34:6"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4281:0:6"
									},
									"scope": 546,
									"src": "4212:70:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "4288:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4441:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4461:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "4453:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4452:17:6"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4501:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "4493:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:18:6"
									},
									"scope": 546,
									"src": "4432:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "4517:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4669:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4694:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "4686:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4686:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4709:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "4701:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4685:33:6"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "4742:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 542,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4742:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:6:6"
									},
									"scope": 546,
									"src": "4660:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 547,
							"src": "250:4500:6",
							"usedErrors": []
						}
					],
					"src": "108:4643:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							564
						]
					},
					"id": 565,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 548,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 549,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:7",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 564,
							"linearizedBaseContracts": [
								564
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "859:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "885:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "907:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "932:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 557,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:7"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "976:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 560,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:7"
									},
									"scope": 564,
									"src": "824:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 565,
							"src": "294:692:7",
							"usedErrors": []
						}
					],
					"src": "116:871:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
					"exportedSymbols": {
						"ERC721Holder": [
							591
						],
						"IERC721Receiver": [
							564
						]
					},
					"id": 592,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 566,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "../IERC721Receiver.sol",
							"id": 567,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 592,
							"sourceUnit": 565,
							"src": "129:32:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 569,
										"name": "IERC721Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 564,
										"src": "424:15:8"
									},
									"id": 570,
									"nodeType": "InheritanceSpecifier",
									"src": "424:15:8"
								}
							],
							"canonicalName": "ERC721Holder",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 568,
								"nodeType": "StructuredDocumentation",
								"src": "163:235:8",
								"text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
							},
							"fullyImplemented": true,
							"id": 591,
							"linearizedBaseContracts": [
								591,
								564
							],
							"name": "ERC721Holder",
							"nameLocation": "408:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										563
									],
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "734:54:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 585,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "751:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721Holder_$591",
																"typeString": "contract ERC721Holder"
															}
														},
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 590,
														"src": "751:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "751:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 584,
												"id": 588,
												"nodeType": "Return",
												"src": "744:37:8"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "446:137:8",
										"text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "597:16:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 581,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "708:8:8"
									},
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "623:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "640:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "657:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "674:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 578,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:79:8"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "726:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 582,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "726:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:8:8"
									},
									"scope": 591,
									"src": "588:200:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 592,
							"src": "399:391:8",
							"usedErrors": []
						}
					],
					"src": "104:687:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							613
						]
					},
					"id": 614,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 593,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 594,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 613,
							"linearizedBaseContracts": [
								613
							],
							"name": "Context",
							"nameLocation": "626:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "702:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 599,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 598,
												"id": 601,
												"nodeType": "Return",
												"src": "712:17:9"
											}
										]
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:9"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "693:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:9"
									},
									"scope": 613,
									"src": "640:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "809:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 608,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 607,
												"id": 610,
												"nodeType": "Return",
												"src": "819:15:9"
											}
										]
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:9"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "793:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 605,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:9"
									},
									"scope": 613,
									"src": "742:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 614,
							"src": "608:235:9",
							"usedErrors": []
						}
					],
					"src": "86:758:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							637
						],
						"IERC165": [
							649
						]
					},
					"id": 638,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 615,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 616,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 638,
							"sourceUnit": 650,
							"src": "124:23:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 618,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 649,
										"src": "754:7:10"
									},
									"id": 619,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 617,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 637,
							"linearizedBaseContracts": [
								637,
								649
							],
							"name": "ERC165",
							"nameLocation": "744:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										648
									],
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "920:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 628,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "937:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 630,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "957:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$649_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$649_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 629,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$649",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 627,
												"id": 634,
												"nodeType": "Return",
												"src": "930:47:10"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 624,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:10"
									},
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "856:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 621,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:10"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "914:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 625,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:10"
									},
									"scope": 637,
									"src": "829:155:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 638,
							"src": "726:260:10",
							"usedErrors": []
						}
					],
					"src": "99:888:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							649
						]
					},
					"id": 650,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 639,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 640,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 649,
							"linearizedBaseContracts": [
								649
							],
							"name": "IERC165",
							"nameLocation": "415:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 648,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "801:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 642,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:11"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "844:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 645,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:11"
									},
									"scope": 649,
									"src": "774:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 650,
							"src": "405:447:11",
							"usedErrors": []
						}
					],
					"src": "100:753:11"
				},
				"id": 11
			},
			"contracts/lending/LendingCore.sol": {
				"ast": {
					"absolutePath": "contracts/lending/LendingCore.sol",
					"exportedSymbols": {
						"Context": [
							613
						],
						"ERC1155Holder": [
							318
						],
						"ERC1155Receiver": [
							352
						],
						"ERC165": [
							637
						],
						"ERC721Holder": [
							591
						],
						"IERC1155": [
							226
						],
						"IERC1155Receiver": [
							267
						],
						"IERC165": [
							649
						],
						"IERC20": [
							430
						],
						"IERC721": [
							546
						],
						"IERC721Receiver": [
							564
						],
						"IStaterDiscounts": [
							1143
						],
						"LendingCore": [
							961
						],
						"Ownable": [
							104
						],
						"StaterTransfers": [
							1124
						]
					},
					"id": 962,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 651,
							"literals": [
								"solidity",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:12"
						},
						{
							"absolutePath": "contracts/plugins/StaterTransfers.sol",
							"file": "../plugins/StaterTransfers.sol",
							"id": 652,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 962,
							"sourceUnit": 1125,
							"src": "56:40:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/workers/IStaterDiscounts.sol",
							"file": "../workers/IStaterDiscounts.sol",
							"id": 653,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 962,
							"sourceUnit": 1144,
							"src": "97:41:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 654,
										"name": "StaterTransfers",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1124,
										"src": "164:15:12"
									},
									"id": 655,
									"nodeType": "InheritanceSpecifier",
									"src": "164:15:12"
								}
							],
							"canonicalName": "LendingCore",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 961,
							"linearizedBaseContracts": [
								961,
								1124,
								318,
								352,
								267,
								637,
								649,
								591,
								564,
								104,
								613
							],
							"name": "LendingCore",
							"nameLocation": "149:11:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "06b4fa68493c57d0a3bcfe8fd7db7297b3f4ed7c3f730fd563791eaafa27439d",
									"id": 672,
									"name": "NewLoan",
									"nameLocation": "246:7:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "279:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "263:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "310:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "294:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": true,
												"mutability": "mutable",
												"name": "loanId",
												"nameLocation": "344:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "328:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "328:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"indexed": false,
												"mutability": "mutable",
												"name": "nftAddressArray",
												"nameLocation": "370:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "360:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 662,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "360:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 663,
													"nodeType": "ArrayTypeName",
													"src": "360:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"indexed": false,
												"mutability": "mutable",
												"name": "nftTokenIdArray",
												"nameLocation": "405:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "395:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 665,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "395:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 666,
													"nodeType": "ArrayTypeName",
													"src": "395:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "nftTokenTypeArray",
												"nameLocation": "438:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "430:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
													"typeString": "uint8[]"
												},
												"typeName": {
													"baseType": {
														"id": 668,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "430:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 669,
													"nodeType": "ArrayTypeName",
													"src": "430:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
														"typeString": "uint8[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:208:12"
									},
									"src": "240:222:12"
								},
								{
									"anonymous": false,
									"eventSelector": "8e1902f1b79a83752dd0c0b34c25d3d3b241fba59defc28b8fb8e182360136d1",
									"id": 690,
									"name": "EditLoan",
									"nameLocation": "473:8:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"indexed": true,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "507:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "491:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "491:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"indexed": true,
												"mutability": "mutable",
												"name": "loanId",
												"nameLocation": "541:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "525:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"indexed": false,
												"mutability": "mutable",
												"name": "loanAmount",
												"nameLocation": "565:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "557:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountDue",
												"nameLocation": "593:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "585:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "585:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"indexed": false,
												"mutability": "mutable",
												"name": "installmentAmount",
												"nameLocation": "620:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "612:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"indexed": false,
												"mutability": "mutable",
												"name": "assetsValue",
												"nameLocation": "655:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "647:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"indexed": false,
												"mutability": "mutable",
												"name": "frequencyTime",
												"nameLocation": "684:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "676:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"indexed": false,
												"mutability": "mutable",
												"name": "frequencyTimeUnit",
												"nameLocation": "715:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "707:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:257:12"
									},
									"src": "467:272:12"
								},
								{
									"anonymous": false,
									"eventSelector": "1a8ecea83cbcff0f4c46b7e42f55227161863220eb7d439fde442dfdc0ddbc4e",
									"id": 698,
									"name": "LoanApproved",
									"nameLocation": "750:12:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"indexed": true,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "788:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "772:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"indexed": true,
												"mutability": "mutable",
												"name": "loanId",
												"nameLocation": "820:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "804:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"indexed": false,
												"mutability": "mutable",
												"name": "loanPaymentEnd",
												"nameLocation": "844:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "836:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "762:102:12"
									},
									"src": "744:121:12"
								},
								{
									"anonymous": false,
									"eventSelector": "b71becc91961a6b43bcc5b3b630f3dce02c7fd444cf3738c4f188062b1caf5bc",
									"id": 702,
									"name": "LoanCancelled",
									"nameLocation": "876:13:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"indexed": true,
												"mutability": "mutable",
												"name": "loanId",
												"nameLocation": "915:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "899:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:38:12"
									},
									"src": "870:58:12"
								},
								{
									"anonymous": false,
									"eventSelector": "174efca9557ce00d5a6f26355f73e3873fed7d6f8248757750569e4699146c67",
									"id": 711,
									"name": "ItemsWithdrawn",
									"nameLocation": "939:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"indexed": true,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "979:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "963:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "963:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"indexed": true,
												"mutability": "mutable",
												"name": "loanId",
												"nameLocation": "1014:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "998:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "998:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "1037:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "1030:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$754",
													"typeString": "enum LendingCore.Status"
												},
												"typeName": {
													"id": 708,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 707,
														"name": "Status",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 754,
														"src": "1030:6:12"
													},
													"referencedDeclaration": 754,
													"src": "1030:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$754",
														"typeString": "enum LendingCore.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "953:96:12"
									},
									"src": "933:117:12"
								},
								{
									"anonymous": false,
									"eventSelector": "b5c84f6603b8d7669dbbe31fd93a237657c42054c0b237b7d4215fa463523b5b",
									"id": 726,
									"name": "LoanPayment",
									"nameLocation": "1061:11:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"indexed": true,
												"mutability": "mutable",
												"name": "loanId",
												"nameLocation": "1098:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1082:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"indexed": false,
												"mutability": "mutable",
												"name": "installmentAmount",
												"nameLocation": "1122:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1114:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountPaidAsInstallmentToLender",
												"nameLocation": "1157:31:12",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1149:39:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1149:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"indexed": false,
												"mutability": "mutable",
												"name": "interestPerInstallement",
												"nameLocation": "1206:23:12",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1198:31:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"indexed": false,
												"mutability": "mutable",
												"name": "interestToStaterPerInstallement",
												"nameLocation": "1247:31:12",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1239:39:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "1295:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1288:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$754",
													"typeString": "enum LendingCore.Status"
												},
												"typeName": {
													"id": 723,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 722,
														"name": "Status",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 754,
														"src": "1288:6:12"
													},
													"referencedDeclaration": 754,
													"src": "1288:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$754",
														"typeString": "enum LendingCore.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1072:235:12"
									},
									"src": "1055:253:12"
								},
								{
									"constant": false,
									"functionSelector": "13c75b5b",
									"id": 728,
									"mutability": "mutable",
									"name": "promissoryNoteAddress",
									"nameLocation": "2071:21:12",
									"nodeType": "VariableDeclaration",
									"scope": 961,
									"src": "2056:36:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 727,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2056:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "38daa789",
									"id": 730,
									"mutability": "mutable",
									"name": "lendingMethodsAddress",
									"nameLocation": "2113:21:12",
									"nodeType": "VariableDeclaration",
									"scope": 961,
									"src": "2098:36:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 729,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2098:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "75af65d1",
									"id": 733,
									"mutability": "mutable",
									"name": "discounts",
									"nameLocation": "2164:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 961,
									"src": "2140:33:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IStaterDiscounts_$1143",
										"typeString": "contract IStaterDiscounts"
									},
									"typeName": {
										"id": 732,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 731,
											"name": "IStaterDiscounts",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1143,
											"src": "2140:16:12"
										},
										"referencedDeclaration": 1143,
										"src": "2140:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IStaterDiscounts_$1143",
											"typeString": "contract IStaterDiscounts"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "af640d0f",
									"id": 736,
									"mutability": "mutable",
									"name": "id",
									"nameLocation": "2194:2:12",
									"nodeType": "VariableDeclaration",
									"scope": 961,
									"src": "2179:21:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 734,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2179:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 735,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2199:1:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6fb49d73",
									"id": 739,
									"mutability": "mutable",
									"name": "ltv",
									"nameLocation": "2236:3:12",
									"nodeType": "VariableDeclaration",
									"scope": 961,
									"src": "2221:23:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 737,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2221:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3630",
										"id": 738,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2242:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_60_by_1",
											"typeString": "int_const 60"
										},
										"value": "60"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7c3a00fd",
									"id": 742,
									"mutability": "mutable",
									"name": "interestRate",
									"nameLocation": "2272:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 961,
									"src": "2257:32:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 740,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2257:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 741,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2287:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f829275",
									"id": 745,
									"mutability": "mutable",
									"name": "interestRateToStater",
									"nameLocation": "2310:20:12",
									"nodeType": "VariableDeclaration",
									"scope": 961,
									"src": "2295:40:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 743,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2295:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3430",
										"id": 744,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2333:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_40_by_1",
											"typeString": "int_const 40"
										},
										"value": "40"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8ca83f07",
									"id": 748,
									"mutability": "mutable",
									"name": "lenderFee",
									"nameLocation": "2355:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 961,
									"src": "2341:29:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 746,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "2341:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 747,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2367:3:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "LendingCore.Status",
									"id": 754,
									"members": [
										{
											"id": 749,
											"name": "LISTED",
											"nameLocation": "2398:6:12",
											"nodeType": "EnumValue",
											"src": "2398:6:12"
										},
										{
											"id": 750,
											"name": "APPROVED",
											"nameLocation": "2415:8:12",
											"nodeType": "EnumValue",
											"src": "2415:8:12"
										},
										{
											"id": 751,
											"name": "LIQUIDATED",
											"nameLocation": "2434:10:12",
											"nodeType": "EnumValue",
											"src": "2434:10:12"
										},
										{
											"id": 752,
											"name": "CANCELLED",
											"nameLocation": "2455:9:12",
											"nodeType": "EnumValue",
											"src": "2455:9:12"
										},
										{
											"id": 753,
											"name": "WITHDRAWN",
											"nameLocation": "2475:9:12",
											"nodeType": "EnumValue",
											"src": "2475:9:12"
										}
									],
									"name": "Status",
									"nameLocation": "2381:6:12",
									"nodeType": "EnumDefinition",
									"src": "2376:115:12"
								},
								{
									"canonicalName": "LendingCore.Loan",
									"id": 799,
									"members": [
										{
											"constant": false,
											"id": 757,
											"mutability": "mutable",
											"name": "nftAddressArray",
											"nameLocation": "2590:15:12",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "2580:25:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2580:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 756,
												"nodeType": "ArrayTypeName",
												"src": "2580:9:12",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 759,
											"mutability": "mutable",
											"name": "borrower",
											"nameLocation": "2661:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "2645:24:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 758,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2645:15:12",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 761,
											"mutability": "mutable",
											"name": "lender",
											"nameLocation": "2732:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "2716:22:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 760,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2716:15:12",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 763,
											"mutability": "mutable",
											"name": "currency",
											"nameLocation": "2813:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "2805:16:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 762,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2805:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 766,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "2895:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "2888:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Status_$754",
												"typeString": "enum LendingCore.Status"
											},
											"typeName": {
												"id": 765,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 764,
													"name": "Status",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 754,
													"src": "2888:6:12"
												},
												"referencedDeclaration": 754,
												"src": "2888:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$754",
													"typeString": "enum LendingCore.Status"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 769,
											"mutability": "mutable",
											"name": "nftTokenIdArray",
											"nameLocation": "2940:15:12",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "2930:25:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2930:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 768,
												"nodeType": "ArrayTypeName",
												"src": "2930:9:12",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 771,
											"mutability": "mutable",
											"name": "installmentTime",
											"nameLocation": "3052:15:12",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "3044:23:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 770,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3044:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 773,
											"mutability": "mutable",
											"name": "nrOfPayments",
											"nameLocation": "3119:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "3111:20:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 772,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3111:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 775,
											"mutability": "mutable",
											"name": "loanAmount",
											"nameLocation": "3184:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "3176:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 774,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3176:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 777,
											"mutability": "mutable",
											"name": "assetsValue",
											"nameLocation": "3293:11:12",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "3285:19:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 776,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3285:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 781,
											"mutability": "mutable",
											"name": "startEnd",
											"nameLocation": "3387:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "3376:19:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
												"typeString": "uint256[2]"
											},
											"typeName": {
												"baseType": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3376:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 780,
												"length": {
													"hexValue": "32",
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3384:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2_by_1",
														"typeString": "int_const 2"
													},
													"value": "2"
												},
												"nodeType": "ArrayTypeName",
												"src": "3376:10:12",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
													"typeString": "uint256[2]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 783,
											"mutability": "mutable",
											"name": "installmentAmount",
											"nameLocation": "3472:17:12",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "3464:25:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 782,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3464:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 785,
											"mutability": "mutable",
											"name": "amountDue",
											"nameLocation": "3547:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "3539:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 784,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3539:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 787,
											"mutability": "mutable",
											"name": "paidAmount",
											"nameLocation": "3638:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "3630:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 786,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3630:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 789,
											"mutability": "mutable",
											"name": "nrOfInstallments",
											"nameLocation": "3725:16:12",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "3718:23:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 788,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "3718:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 791,
											"mutability": "mutable",
											"name": "defaultingLimit",
											"nameLocation": "3815:15:12",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "3809:21:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 790,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "3809:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 794,
											"mutability": "mutable",
											"name": "nftTokenTypeArray",
											"nameLocation": "3925:17:12",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "3917:25:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
												"typeString": "uint8[]"
											},
											"typeName": {
												"baseType": {
													"id": 792,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3917:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 793,
												"nodeType": "ArrayTypeName",
												"src": "3917:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
													"typeString": "uint8[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 798,
											"mutability": "mutable",
											"name": "offers",
											"nameLocation": "4024:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "3996:34:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 797,
												"keyType": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "3996:27:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueType": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Loan",
									"nameLocation": "2565:4:12",
									"nodeType": "StructDefinition",
									"scope": 961,
									"src": "2558:1479:12",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e1ec3c68",
									"id": 804,
									"mutability": "mutable",
									"name": "loans",
									"nameLocation": "4163:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 961,
									"src": "4131:37:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$799_storage_$",
										"typeString": "mapping(uint256 => struct LendingCore.Loan)"
									},
									"typeName": {
										"id": 803,
										"keyType": {
											"id": 800,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4139:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4131:24:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$799_storage_$",
											"typeString": "mapping(uint256 => struct LendingCore.Loan)"
										},
										"valueType": {
											"id": 802,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 801,
												"name": "Loan",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "4150:4:12"
											},
											"referencedDeclaration": 799,
											"src": "4150:4:12",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Loan_$799_storage_ptr",
												"typeString": "struct LendingCore.Loan"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "24c93fe5",
									"id": 808,
									"mutability": "mutable",
									"name": "promissoryPermissions",
									"nameLocation": "4329:21:12",
									"nodeType": "VariableDeclaration",
									"scope": 961,
									"src": "4294:56:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 807,
										"keyType": {
											"id": 805,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4302:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4294:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 806,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4313:7:12",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "4387:106:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 811,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4405:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4405:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 813,
																"name": "promissoryNoteAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "4419:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4405:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c656e64696e67204d6574686f64733a204163636573732064656e696564",
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4442:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4de51fdb1b0b7884da94cef60bb083570376100621c8d78d46080e966919ced3",
																"typeString": "literal_string \"Lending Methods: Access denied\""
															},
															"value": "Lending Methods: Access denied"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4de51fdb1b0b7884da94cef60bb083570376100621c8d78d46080e966919ced3",
																"typeString": "literal_string \"Lending Methods: Access denied\""
															}
														],
														"id": 810,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4397:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4397:78:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "4397:78:12"
											},
											{
												"id": 818,
												"nodeType": "PlaceholderStatement",
												"src": "4485:1:12"
											}
										]
									},
									"id": 820,
									"name": "isPromissoryNote",
									"nameLocation": "4370:16:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4387:0:12"
									},
									"src": "4361:132:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "4912:469:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Status_$754",
																	"typeString": "enum LendingCore.Status"
																},
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 828,
																			"name": "loans",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 804,
																			"src": "4930:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$799_storage_$",
																				"typeString": "mapping(uint256 => struct LendingCore.Loan storage ref)"
																			}
																		},
																		"id": 830,
																		"indexExpression": {
																			"id": 829,
																			"name": "loanId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 822,
																			"src": "4936:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4930:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Loan_$799_storage",
																			"typeString": "struct LendingCore.Loan storage ref"
																		}
																	},
																	"id": 831,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "status",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 766,
																	"src": "4930:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Status_$754",
																		"typeString": "enum LendingCore.Status"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 832,
																		"name": "Status",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 754,
																		"src": "4954:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Status_$754_$",
																			"typeString": "type(enum LendingCore.Status)"
																		}
																	},
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "APPROVED",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 750,
																	"src": "4954:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Status_$754",
																		"typeString": "enum LendingCore.Status"
																	}
																},
																"src": "4930:39:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Status_$754",
																	"typeString": "enum LendingCore.Status"
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 835,
																			"name": "loans",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 804,
																			"src": "4973:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$799_storage_$",
																				"typeString": "mapping(uint256 => struct LendingCore.Loan storage ref)"
																			}
																		},
																		"id": 837,
																		"indexExpression": {
																			"id": 836,
																			"name": "loanId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 822,
																			"src": "4979:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4973:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Loan_$799_storage",
																			"typeString": "struct LendingCore.Loan storage ref"
																		}
																	},
																	"id": 838,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "status",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 766,
																	"src": "4973:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Status_$754",
																		"typeString": "enum LendingCore.Status"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 839,
																		"name": "Status",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 754,
																		"src": "4997:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Status_$754_$",
																			"typeString": "type(enum LendingCore.Status)"
																		}
																	},
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "LIQUIDATED",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 751,
																	"src": "4997:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Status_$754",
																		"typeString": "enum LendingCore.Status"
																	}
																},
																"src": "4973:41:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4930:84:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f616e206973206e6f742079657420617070726f766564",
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5016:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_478142894a73e4367ad0a4b08d8222ee9ec2723a3f3302630cc67da6a7df39bb",
																"typeString": "literal_string \"Loan is not yet approved\""
															},
															"value": "Loan is not yet approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_478142894a73e4367ad0a4b08d8222ee9ec2723a3f3302630cc67da6a7df39bb",
																"typeString": "literal_string \"Loan is not yet approved\""
															}
														],
														"id": 827,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4922:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4922:121:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "4922:121:12"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 846,
																					"name": "loans",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 804,
																					"src": "5172:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$799_storage_$",
																						"typeString": "mapping(uint256 => struct LendingCore.Loan storage ref)"
																					}
																				},
																				"id": 848,
																				"indexExpression": {
																					"id": 847,
																					"name": "loanId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "5178:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5172:13:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Loan_$799_storage",
																					"typeString": "struct LendingCore.Loan storage ref"
																				}
																			},
																			"id": 849,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "startEnd",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 781,
																			"src": "5172:22:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$2_storage",
																				"typeString": "uint256[2] storage ref"
																			}
																		},
																		"id": 851,
																		"indexExpression": {
																			"hexValue": "30",
																			"id": 850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5195:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5172:25:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 852,
																					"name": "loans",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 804,
																					"src": "5200:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$799_storage_$",
																						"typeString": "mapping(uint256 => struct LendingCore.Loan storage ref)"
																					}
																				},
																				"id": 854,
																				"indexExpression": {
																					"id": 853,
																					"name": "loanId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "5206:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5200:13:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Loan_$799_storage",
																					"typeString": "struct LendingCore.Loan storage ref"
																				}
																			},
																			"id": 855,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "nrOfPayments",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 773,
																			"src": "5200:26:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 856,
																					"name": "loans",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 804,
																					"src": "5229:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$799_storage_$",
																						"typeString": "mapping(uint256 => struct LendingCore.Loan storage ref)"
																					}
																				},
																				"id": 858,
																				"indexExpression": {
																					"id": 857,
																					"name": "loanId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "5235:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5229:13:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Loan_$799_storage",
																					"typeString": "struct LendingCore.Loan storage ref"
																				}
																			},
																			"id": 859,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "installmentTime",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 771,
																			"src": "5229:29:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5200:58:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5172:86:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 862,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5170:90:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 863,
																		"name": "loans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 804,
																		"src": "5263:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$799_storage_$",
																			"typeString": "mapping(uint256 => struct LendingCore.Loan storage ref)"
																		}
																	},
																	"id": 865,
																	"indexExpression": {
																		"id": 864,
																		"name": "loanId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 822,
																		"src": "5269:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5263:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Loan_$799_storage",
																		"typeString": "struct LendingCore.Loan storage ref"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "defaultingLimit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 791,
																"src": "5263:29:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 867,
																		"name": "loans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 804,
																		"src": "5295:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$799_storage_$",
																			"typeString": "mapping(uint256 => struct LendingCore.Loan storage ref)"
																		}
																	},
																	"id": 869,
																	"indexExpression": {
																		"id": 868,
																		"name": "loanId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 822,
																		"src": "5301:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5295:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Loan_$799_storage",
																		"typeString": "struct LendingCore.Loan storage ref"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "installmentTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 771,
																"src": "5295:29:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5263:61:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5170:154:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 874,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5332:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5332:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 876,
																			"name": "loans",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 804,
																			"src": "5348:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$799_storage_$",
																				"typeString": "mapping(uint256 => struct LendingCore.Loan storage ref)"
																			}
																		},
																		"id": 878,
																		"indexExpression": {
																			"id": 877,
																			"name": "loanId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 822,
																			"src": "5354:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5348:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Loan_$799_storage",
																			"typeString": "struct LendingCore.Loan storage ref"
																		}
																	},
																	"id": 879,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "startEnd",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 781,
																	"src": "5348:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$2_storage",
																		"typeString": "uint256[2] storage ref"
																	}
																},
																"id": 881,
																"indexExpression": {
																	"hexValue": "31",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5371:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5348:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 873,
															"name": "min",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "5328:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5328:46:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5170:204:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 826,
												"id": 884,
												"nodeType": "Return",
												"src": "5163:211:12"
											}
										]
									},
									"functionSelector": "e70c7446",
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canBeTerminated",
									"nameLocation": "4854:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "loanId",
												"nameLocation": "4878:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "4870:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4869:16:12"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "4906:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 824,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4906:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4905:6:12"
									},
									"scope": 961,
									"src": "4845:536:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "5495:78:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 894,
																"name": "loanValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "5513:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 895,
																		"name": "assetsValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 890,
																		"src": "5526:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5540:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "5526:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 898,
																	"name": "ltv",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "5546:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5526:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5513:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c545620746f6f2068696768",
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5551:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f0de68062a842abb84ef157303850435e43264a8047bfb78c61550e10af3f4c",
																"typeString": "literal_string \"LTV too high\""
															},
															"value": "LTV too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f0de68062a842abb84ef157303850435e43264a8047bfb78c61550e10af3f4c",
																"typeString": "literal_string \"LTV too high\""
															}
														],
														"id": 893,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5505:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:61:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "5505:61:12"
											}
										]
									},
									"functionSelector": "87715588",
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkLtv",
									"nameLocation": "5434:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "loanValue",
												"nameLocation": "5451:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "5443:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5443:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "assetsValue",
												"nameLocation": "5470:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "5462:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5462:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5442:40:12"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5495:0:12"
									},
									"scope": 961,
									"src": "5425:148:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "5646:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 914,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "5663:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 915,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "5667:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5663:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 918,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "5675:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5663:13:12",
													"trueExpression": {
														"id": 917,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "5671:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 913,
												"id": 920,
												"nodeType": "Return",
												"src": "5656:20:12"
											}
										]
									},
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "5589:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5601:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "5593:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5593:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5612:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "5604:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5604:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5592:22:12"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "5637:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5637:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:9:12"
									},
									"scope": 961,
									"src": "5580:103:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "5771:46:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 931,
															"name": "loans",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "5788:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$799_storage_$",
																"typeString": "mapping(uint256 => struct LendingCore.Loan storage ref)"
															}
														},
														"id": 933,
														"indexExpression": {
															"id": 932,
															"name": "loanId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "5794:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5788:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Loan_$799_storage",
															"typeString": "struct LendingCore.Loan storage ref"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "startEnd",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 781,
													"src": "5788:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage",
														"typeString": "uint256[2] storage ref"
													}
												},
												"functionReturnParameters": 930,
												"id": 935,
												"nodeType": "Return",
												"src": "5781:29:12"
											}
										]
									},
									"functionSelector": "9e1d7a1e",
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLoanStartEnd",
									"nameLocation": "5698:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "loanId",
												"nameLocation": "5722:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "5714:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5714:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:16:12"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "5752:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
													"typeString": "uint256[2]"
												},
												"typeName": {
													"baseType": {
														"id": 926,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5752:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 928,
													"length": {
														"hexValue": "32",
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5760:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "5752:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
														"typeString": "uint256[2]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5751:19:12"
									},
									"scope": 961,
									"src": "5689:128:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "5903:141:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Status_$754",
																"typeString": "enum LendingCore.Status"
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 945,
																		"name": "loans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 804,
																		"src": "5921:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$799_storage_$",
																			"typeString": "mapping(uint256 => struct LendingCore.Loan storage ref)"
																		}
																	},
																	"id": 947,
																	"indexExpression": {
																		"id": 946,
																		"name": "loanId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "5927:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5921:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Loan_$799_storage",
																		"typeString": "struct LendingCore.Loan storage ref"
																	}
																},
																"id": 948,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 766,
																"src": "5921:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$754",
																	"typeString": "enum LendingCore.Status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 949,
																	"name": "Status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "5945:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Status_$754_$",
																		"typeString": "type(enum LendingCore.Status)"
																	}
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "APPROVED",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 750,
																"src": "5945:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$754",
																	"typeString": "enum LendingCore.Status"
																}
															},
															"src": "5921:39:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f616e206973206e6f206c6f6e67657220617070726f766564",
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5962:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_99b928c8ec253dbe3fbead0f2af119c82bf50b31635c5a6a3b55a7d61063f1b1",
																"typeString": "literal_string \"Loan is no longer approved\""
															},
															"value": "Loan is no longer approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_99b928c8ec253dbe3fbead0f2af119c82bf50b31635c5a6a3b55a7d61063f1b1",
																"typeString": "literal_string \"Loan is no longer approved\""
															}
														],
														"id": 944,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5913:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5913:78:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "5913:78:12"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 955,
														"name": "promissoryPermissions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "6008:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 957,
													"indexExpression": {
														"id": 956,
														"name": "loanId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "6030:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6008:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 943,
												"id": 958,
												"nodeType": "Return",
												"src": "6001:36:12"
											}
										]
									},
									"functionSelector": "756db756",
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPromissoryPermission",
									"nameLocation": "5832:23:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "loanId",
												"nameLocation": "5864:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "5856:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5855:16:12"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "5894:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5894:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5893:9:12"
									},
									"scope": 961,
									"src": "5823:221:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 962,
							"src": "140:5907:12",
							"usedErrors": []
						}
					],
					"src": "32:6015:12"
				},
				"id": 12
			},
			"contracts/plugins/StaterTransfers.sol": {
				"ast": {
					"absolutePath": "contracts/plugins/StaterTransfers.sol",
					"exportedSymbols": {
						"Context": [
							613
						],
						"ERC1155Holder": [
							318
						],
						"ERC1155Receiver": [
							352
						],
						"ERC165": [
							637
						],
						"ERC721Holder": [
							591
						],
						"IERC1155": [
							226
						],
						"IERC1155Receiver": [
							267
						],
						"IERC165": [
							649
						],
						"IERC20": [
							430
						],
						"IERC721": [
							546
						],
						"IERC721Receiver": [
							564
						],
						"Ownable": [
							104
						],
						"StaterTransfers": [
							1124
						]
					},
					"id": 1125,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 963,
							"literals": [
								"solidity",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"id": 964,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1125,
							"sourceUnit": 227,
							"src": "56:60:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 965,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1125,
							"sourceUnit": 105,
							"src": "117:52:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 966,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1125,
							"sourceUnit": 431,
							"src": "170:56:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 967,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1125,
							"sourceUnit": 547,
							"src": "227:58:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
							"file": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
							"id": 968,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1125,
							"sourceUnit": 592,
							"src": "286:69:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"id": 969,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1125,
							"sourceUnit": 319,
							"src": "356:71:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 970,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "458:7:13"
									},
									"id": 971,
									"nodeType": "InheritanceSpecifier",
									"src": "458:7:13"
								},
								{
									"baseName": {
										"id": 972,
										"name": "ERC721Holder",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 591,
										"src": "467:12:13"
									},
									"id": 973,
									"nodeType": "InheritanceSpecifier",
									"src": "467:12:13"
								},
								{
									"baseName": {
										"id": 974,
										"name": "ERC1155Holder",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 318,
										"src": "481:13:13"
									},
									"id": 975,
									"nodeType": "InheritanceSpecifier",
									"src": "481:13:13"
								}
							],
							"canonicalName": "StaterTransfers",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1124,
							"linearizedBaseContracts": [
								1124,
								318,
								352,
								267,
								637,
								649,
								591,
								564,
								104,
								613
							],
							"name": "StaterTransfers",
							"nameLocation": "439:15:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "782:548:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 988,
														"name": "currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "795:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "815:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "807:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 989,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "807:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "807:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "795:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1040,
													"nodeType": "Block",
													"src": "1159:165:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1023,
																				"name": "qty1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 983,
																				"src": "1187:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1021,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 979,
																				"src": "1179:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"id": 1022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "send",
																			"nodeType": "MemberAccess",
																			"src": "1179:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (uint256) returns (bool)"
																			}
																		},
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1179:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e73666572206f662045544820746f207265636569766572206661696c6564",
																		"id": 1025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1194:36:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54",
																			"typeString": "literal_string \"Transfer of ETH to receiver failed\""
																		},
																		"value": "Transfer of ETH to receiver failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_7e4416aac337c098e93101861586f82c91441049b430235a053d51cdb40c1e54",
																			"typeString": "literal_string \"Transfer of ETH to receiver failed\""
																		}
																	],
																	"id": 1020,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1171:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1171:60:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1027,
															"nodeType": "ExpressionStatement",
															"src": "1171:60:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1035,
																				"name": "qty2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 985,
																				"src": "1273:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1031,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 32,
																							"src": "1259:5:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																								"typeString": "function () view returns (address)"
																							}
																						},
																						"id": 1032,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1259:7:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1030,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1251:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_payable_$",
																						"typeString": "type(address payable)"
																					},
																					"typeName": {
																						"id": 1029,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "1251:8:13",
																						"stateMutability": "payable",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1251:16:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"id": 1034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "send",
																			"nodeType": "MemberAccess",
																			"src": "1251:21:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (uint256) returns (bool)"
																			}
																		},
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1251:27:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e73666572206f662045544820746f20537461746572206661696c6564",
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1280:34:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea",
																			"typeString": "literal_string \"Transfer of ETH to Stater failed\""
																		},
																		"value": "Transfer of ETH to Stater failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ac84f643284b7e058489d11be1773eb7a2dedc59ad9996ec3977d4e7bf0883ea",
																			"typeString": "literal_string \"Transfer of ETH to Stater failed\""
																		}
																	],
																	"id": 1028,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1243:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1243:72:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1039,
															"nodeType": "ExpressionStatement",
															"src": "1243:72:13"
														}
													]
												},
												"id": 1041,
												"nodeType": "IfStatement",
												"src": "790:534:13",
												"trueBody": {
													"id": 1019,
													"nodeType": "Block",
													"src": "819:336:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 999,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 977,
																				"src": "884:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1000,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 979,
																				"src": "904:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			{
																				"id": 1001,
																				"name": "qty1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 983,
																				"src": "923:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 996,
																						"name": "currency",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 981,
																						"src": "846:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 995,
																					"name": "IERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 430,
																					"src": "839:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC20_$430_$",
																						"typeString": "type(contract IERC20)"
																					}
																				},
																				"id": 997,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "839:16:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$430",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "transferFrom",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 429,
																			"src": "839:29:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,address,uint256) external returns (bool)"
																			}
																		},
																		"id": 1002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "839:100:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e73666572206f6620746f6b656e7320746f207265636569766572206661696c6564",
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "941:39:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5",
																			"typeString": "literal_string \"Transfer of tokens to receiver failed\""
																		},
																		"value": "Transfer of tokens to receiver failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5250fd75a1ec48c6dc23482a02e363994bf226be28a8ad08e182a8a87c6d46a5",
																			"typeString": "literal_string \"Transfer of tokens to receiver failed\""
																		}
																	],
																	"id": 994,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "831:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "831:150:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1005,
															"nodeType": "ExpressionStatement",
															"src": "831:150:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1011,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 977,
																				"src": "1046:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1012,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 32,
																					"src": "1066:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1013,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1066:7:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1014,
																				"name": "qty2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 985,
																				"src": "1090:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1008,
																						"name": "currency",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 981,
																						"src": "1008:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1007,
																					"name": "IERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 430,
																					"src": "1001:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC20_$430_$",
																						"typeString": "type(contract IERC20)"
																					}
																				},
																				"id": 1009,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1001:16:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$430",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "transferFrom",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 429,
																			"src": "1001:29:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,address,uint256) external returns (bool)"
																			}
																		},
																		"id": 1015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1001:105:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e73666572206f6620746f6b656e7320746f20537461746572206661696c6564",
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1108:37:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e",
																			"typeString": "literal_string \"Transfer of tokens to Stater failed\""
																		},
																		"value": "Transfer of tokens to Stater failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_964cb1d3b04a5a6d51702e9875175426ec8207572026a07f60ea6c5d7e828e4e",
																			"typeString": "literal_string \"Transfer of tokens to Stater failed\""
																		}
																	],
																	"id": 1006,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "993:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "993:153:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1018,
															"nodeType": "ExpressionStatement",
															"src": "993:153:13"
														}
													]
												}
											}
										]
									},
									"functionSelector": "2e3f4a5d",
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "634:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "666:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "658:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "696:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "680:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "680:15:13",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "716:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "708:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "qty1",
												"nameLocation": "742:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "734:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "qty2",
												"nameLocation": "764:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "756:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:126:13"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "782:0:13"
									},
									"scope": 1124,
									"src": "625:705:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "1634:680:13",
										"statements": [
											{
												"assignments": [
													1060
												],
												"declarations": [
													{
														"constant": false,
														"id": 1060,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1652:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 1122,
														"src": "1644:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1059,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1644:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1063,
												"initialValue": {
													"expression": {
														"id": 1061,
														"name": "nftAddressArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "1661:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1661:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1644:39:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1065,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1060,
																	"src": "1701:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1066,
																		"name": "nftTokenIdArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1053,
																		"src": "1711:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1711:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1701:32:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1069,
																		"name": "nftTokenTypeArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1056,
																		"src": "1737:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																			"typeString": "uint8[] memory"
																		}
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1737:24:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1071,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1060,
																	"src": "1765:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1737:34:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1701:70:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20696e666f732070726f76696465642061726520696e76616c6964",
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1773:34:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1",
																"typeString": "literal_string \"Token infos provided are invalid\""
															},
															"value": "Token infos provided are invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_624287f4897365043c17c954a6a44e264acc021d1e869f657fd8268a6d3518b1",
																"typeString": "literal_string \"Token infos provided are invalid\""
															}
														],
														"id": 1064,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1693:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1693:115:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "1693:115:13"
											},
											{
												"body": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1087,
																"name": "nftTokenTypeArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "1872:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																	"typeString": "uint8[] memory"
																}
															},
															"id": 1089,
															"indexExpression": {
																"id": 1088,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "1890:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1872:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1896:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1872:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"expression": {
															"arguments": [
																{
																	"id": 1111,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "2170:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1112,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1047,
																	"src": "2196:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"baseExpression": {
																		"id": 1113,
																		"name": "nftTokenIdArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1053,
																		"src": "2220:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1115,
																	"indexExpression": {
																		"id": 1114,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1078,
																		"src": "2236:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2220:18:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "31",
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2260:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																{
																	"hexValue": "30783030",
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																		"typeString": "literal_string \"0x00\""
																	},
																	"value": "0x00"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																		"typeString": "literal_string \"0x00\""
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1106,
																				"name": "nftAddressArray",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1050,
																				"src": "2112:15:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 1108,
																			"indexExpression": {
																				"id": 1107,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1078,
																				"src": "2128:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2112:18:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1105,
																		"name": "IERC1155",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 226,
																		"src": "2103:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1155_$226_$",
																			"typeString": "type(contract IERC1155)"
																		}
																	},
																	"id": 1109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2103:28:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1155_$226",
																		"typeString": "contract IERC1155"
																	}
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "safeTransferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 209,
																"src": "2103:45:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (address,address,uint256,uint256,bytes memory) external"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2103:204:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1119,
														"nodeType": "ExpressionStatement",
														"src": "2103:204:13"
													},
													"id": 1120,
													"nodeType": "IfStatement",
													"src": "1867:440:13",
													"trueBody": {
														"expression": {
															"arguments": [
																{
																	"id": 1098,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "1982:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1099,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1047,
																	"src": "2008:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"baseExpression": {
																		"id": 1100,
																		"name": "nftTokenIdArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1053,
																		"src": "2032:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1102,
																	"indexExpression": {
																		"id": 1101,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1078,
																		"src": "2048:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2032:18:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1093,
																				"name": "nftAddressArray",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1050,
																				"src": "1924:15:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 1095,
																			"indexExpression": {
																				"id": 1094,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1078,
																				"src": "1940:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1924:18:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1092,
																		"name": "IERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "1916:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721_$546_$",
																			"typeString": "type(contract IERC721)"
																		}
																	},
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1916:27:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721_$546",
																		"typeString": "contract IERC721"
																	}
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "safeTransferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 501,
																"src": "1916:44:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256) external"
																}
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1916:152:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1104,
														"nodeType": "ExpressionStatement",
														"src": "1916:152:13"
													}
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1081,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "1837:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1082,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "1841:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1837:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1121,
												"initializationExpression": {
													"assignments": [
														1078
													],
													"declarations": [
														{
															"constant": false,
															"id": 1078,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1830:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1121,
															"src": "1822:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1077,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1822:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1080,
													"initialValue": {
														"hexValue": "30",
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1834:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1822:13:13"
												},
												"loopExpression": {
													"expression": {
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "1849:3:13",
														"subExpression": {
															"id": 1084,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "1851:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1086,
													"nodeType": "ExpressionStatement",
													"src": "1849:3:13"
												},
												"nodeType": "ForStatement",
												"src": "1818:489:13"
											}
										]
									},
									"functionSelector": "407299d7",
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferItems",
									"nameLocation": "1436:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1467:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1459:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1459:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1490:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1482:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1482:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "nftAddressArray",
												"nameLocation": "1520:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1503:32:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1048,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1503:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1049,
													"nodeType": "ArrayTypeName",
													"src": "1503:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "nftTokenIdArray",
												"nameLocation": "1563:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1546:32:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1051,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1546:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1052,
													"nodeType": "ArrayTypeName",
													"src": "1546:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "nftTokenTypeArray",
												"nameLocation": "1603:17:13",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1588:32:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
													"typeString": "uint8[]"
												},
												"typeName": {
													"baseType": {
														"id": 1054,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "1588:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1055,
													"nodeType": "ArrayTypeName",
													"src": "1588:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
														"typeString": "uint8[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1449:177:13"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1634:0:13"
									},
									"scope": 1124,
									"src": "1427:887:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1125,
							"src": "430:1887:13",
							"usedErrors": []
						}
					],
					"src": "32:2285:13"
				},
				"id": 13
			},
			"contracts/workers/IStaterDiscounts.sol": {
				"ast": {
					"absolutePath": "contracts/workers/IStaterDiscounts.sol",
					"exportedSymbols": {
						"IStaterDiscounts": [
							1143
						]
					},
					"id": 1144,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1126,
							"literals": [
								"solidity",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStaterDiscounts",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1143,
							"linearizedBaseContracts": [
								1143
							],
							"name": "IStaterDiscounts",
							"nameLocation": "68:16:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "19cb2350",
									"id": 1135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDiscountTokenId",
									"nameLocation": "100:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "_discountId",
												"nameLocation": "127:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "119:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "119:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "tokenIdIndex",
												"nameLocation": "148:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "140:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "118:43:14"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "184:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "184:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "183:9:14"
									},
									"scope": 1143,
									"src": "91:102:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad6a8745",
									"id": 1142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateDiscount",
									"nameLocation": "207:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "233:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "225:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "225:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "224:19:14"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "266:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "266:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "265:9:14"
									},
									"scope": 1143,
									"src": "198:77:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1144,
							"src": "58:219:14",
							"usedErrors": []
						}
					],
					"src": "32:245:14"
				},
				"id": 14
			}
		}
	}
}