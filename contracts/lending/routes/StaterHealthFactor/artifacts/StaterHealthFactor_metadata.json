{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_uniswapV3NftAddress",
						"type": "address"
					},
					{
						"internalType": "address[]",
						"name": "_whitelistedCurrencies",
						"type": "address[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "currency",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "loanAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountDue",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "installmentAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "assetsValue",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "frequencyTime",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "frequencyTimeUnit",
						"type": "uint256"
					}
				],
				"name": "EditLoan",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "requester",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "enum LendingCore.Status",
						"name": "status",
						"type": "uint8"
					}
				],
				"name": "ItemsWithdrawn",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "lender",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "loanPaymentEnd",
						"type": "uint256"
					}
				],
				"name": "LoanApproved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					}
				],
				"name": "LoanCancelled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "installmentAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountPaidAsInstallmentToLender",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "interestPerInstallement",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "interestToStaterPerInstallement",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "enum LendingCore.Status",
						"name": "status",
						"type": "uint8"
					}
				],
				"name": "LoanPayment",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "currency",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address[]",
						"name": "nftAddressArray",
						"type": "address[]"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "nftTokenIdArray",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint8[]",
						"name": "nftTokenTypeArray",
						"type": "uint8[]"
					}
				],
				"name": "NewLoan",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "MAX_SQRT_RATIO",
				"outputs": [
					{
						"internalType": "uint160",
						"name": "",
						"type": "uint160"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MIN_SQRT_RATIO",
				"outputs": [
					{
						"internalType": "uint160",
						"name": "",
						"type": "uint160"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					}
				],
				"name": "approveLoan",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "poolId",
						"type": "uint256"
					}
				],
				"name": "approveLoanWithPool",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					}
				],
				"name": "cancelLoan",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "currency",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "installmentTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256[]",
								"name": "nftTokenIdArray",
								"type": "uint256[]"
							},
							{
								"internalType": "uint256",
								"name": "loanAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint16",
								"name": "nrOfInstallments",
								"type": "uint16"
							}
						],
						"internalType": "struct HealthFactorCreateLoanMethod.HealthFactorCreateLoanMethodParams",
						"name": "loan",
						"type": "tuple"
					}
				],
				"name": "createLoan",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "discountsHandler",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					},
					{
						"internalType": "uint16",
						"name": "nrOfInstallments",
						"type": "uint16"
					},
					{
						"internalType": "uint256",
						"name": "installmentTime",
						"type": "uint256"
					}
				],
				"name": "editLoan",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "int24",
						"name": "tick",
						"type": "int24"
					}
				],
				"name": "getGasCostOfGetSqrtRatioAtTick",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint160",
						"name": "sqrtPriceX96",
						"type": "uint160"
					}
				],
				"name": "getGasCostOfGetTickAtSqrtRatio",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "currency",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "installmentTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256[]",
								"name": "nftTokenIdArray",
								"type": "uint256[]"
							},
							{
								"internalType": "uint256",
								"name": "loanAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint16",
								"name": "nrOfInstallments",
								"type": "uint16"
							}
						],
						"internalType": "struct HealthFactorCreateLoanMethod.HealthFactorCreateLoanMethodParams",
						"name": "loan",
						"type": "tuple"
					}
				],
				"name": "getLoanAssetsValue",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint160",
						"name": "sqrtPriceX96",
						"type": "uint160"
					}
				],
				"name": "getTickAtSqrtRatio",
				"outputs": [
					{
						"internalType": "int24",
						"name": "",
						"type": "int24"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "id",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "interestRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "interestRateToStater",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					}
				],
				"name": "lackOfPayment",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lenderFee",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "liquidationTreshold",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "loanControlPanels",
				"outputs": [
					{
						"internalType": "enum LendingCore.Status",
						"name": "status",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "poolId",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "defaultingLimit",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "installmentAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountDue",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "paidAmount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "loanHandler",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "promissoryHandler",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "discountsHandler",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "poolHandler",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "loanFeesHandler",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "ltv",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "interestRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "interestRateToStater",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "lenderFee",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "loanHandler",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "loans",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "address payable",
						"name": "lender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "currency",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "installmentTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "nrOfPayments",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "loanAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "assetsValue",
						"type": "uint256"
					},
					{
						"internalType": "uint16",
						"name": "nrOfInstallments",
						"type": "uint16"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ltv",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "onERC1155BatchReceived",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "onERC1155Received",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "onERC721Received",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "payLoan",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_whitelistedCurrencies",
						"type": "address[]"
					},
					{
						"internalType": "bool[]",
						"name": "_status",
						"type": "bool[]"
					}
				],
				"name": "setGlobalRouteVariables",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "loanId",
						"type": "uint256"
					}
				],
				"name": "terminateLoan",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "address[]",
						"name": "nftAddressArray",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "nftTokenIdArray",
						"type": "uint256[]"
					},
					{
						"internalType": "uint8[]",
						"name": "nftTokenTypeArray",
						"type": "uint8[]"
					}
				],
				"name": "transferItems",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address payable",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "currency",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "qty1",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "qty2",
						"type": "uint256"
					}
				],
				"name": "transferTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "uniswapV3NftAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "whitelistedCurrencies",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"onERC721Received(address,address,uint256,bytes)": {
					"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/lending/routes/StaterHealthFactor/StaterHealthFactor.sol": "StaterHealthFactor"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol": {
			"keccak256": "0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d",
				"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP"
			]
		},
		"@uniswap/v3-core/contracts/libraries/FullMath.sol": {
			"keccak256": "0xe511530871deaef86692cea9adb6076d26d7b47fd4815ce51af52af981026057",
			"license": "MIT",
			"urls": [
				"bzz-raw://bc5a6ae776be3e7dcbd23d49ffbc9d792fed0ddf4b111ebb64b9bb2133ec263e",
				"dweb:/ipfs/QmbAUtWqvipzEARQpFpkzYKBELy3qeW5WXnZxHFU84sxG7"
			]
		},
		"contracts/lending/LendingCore.sol": {
			"keccak256": "0x6acf27dc9d27546426c209dc5df94696af64663e1deea7f4d9eab7d783533289",
			"license": "MIT",
			"urls": [
				"bzz-raw://a640916658851784a762d1cc3236b71b70cecac713fbe3894abf458b559cdc46",
				"dweb:/ipfs/QmSFsCqLv1rVFe5inhmGC8Wjbkaeac1rNPjQbbiXugNnQt"
			]
		},
		"contracts/lending/routes/StaterHealthFactor/StaterHealthFactor.sol": {
			"keccak256": "0x49d2b4c9a92e022d710fb7c9a2d8720d1ccb7634b0c70e475f7dff2ea30724b6",
			"license": "MIT",
			"urls": [
				"bzz-raw://07f61a197590c9c2e88b01c122ea1e53114f02e0965da234c73247ac8b39879b",
				"dweb:/ipfs/QmXf4ypDCRbS1nS9vvyB8u6Zyd9TbksqVCuMFpEs3VPYCd"
			]
		},
		"contracts/lending/routes/StaterHealthFactor/params/HealthFactorCreateLoanMethod.sol": {
			"keccak256": "0x4b3aa36329dbbf099fc917e6be82d2707cbdb0b348bceff608b7b729cff1afa7",
			"license": "MIT",
			"urls": [
				"bzz-raw://b81218533b682da2b74e299e02232f524548670d377b50b25f297d21f7db530f",
				"dweb:/ipfs/QmTrqfCSyLwPPHknBpM9mirgq9xynJHmNgs56n2nwoftvi"
			]
		},
		"contracts/libs/multi-token-standard/contracts/interfaces/IERC1155.sol": {
			"keccak256": "0x813ebd2bf6cc80ec02bea50e8946b6e7a5668133bc388db1cc4c0c8391f70470",
			"license": "MIT",
			"urls": [
				"bzz-raw://3208427ec9416b570a4feb7a21839b1cddd6a26355dfb542b05997bfc985dd4f",
				"dweb:/ipfs/QmZ4bQxEyGhSSwNF2mHqhgfZtHyjsVnRxFrY5Xhug3TQUb"
			]
		},
		"contracts/libs/openzeppelin-solidity/contracts/access/Ownable.sol": {
			"keccak256": "0x549c5343ad9f7e3f38aa4c4761854403502574bbc15b822db2ce892ff9b79da7",
			"license": "MIT",
			"urls": [
				"bzz-raw://19c0dfbf7bb7744af0c03156e372d0096e0d07de8805ead7722243b8b42276a3",
				"dweb:/ipfs/QmPEFDvi6mJZ3sVii3uBs3CQzAARXPFwCKiHG5zkiCmC4V"
			]
		},
		"contracts/libs/openzeppelin-solidity/contracts/introspection/ERC165.sol": {
			"keccak256": "0x234cdf2c3efd5f0dc17d32fe65d33c21674ca17de1e945eb60ac1076d7152d96",
			"license": "MIT",
			"urls": [
				"bzz-raw://bd196df6ec4549923b4581fcb4be3d05237b5221067410d0bc34cb76d4174441",
				"dweb:/ipfs/Qmf2vFVgbfpD4FvAhQXkprg9sKSX3TXKRdbQTSjJVEmzWj"
			]
		},
		"contracts/libs/openzeppelin-solidity/contracts/introspection/IERC165.sol": {
			"keccak256": "0xd2f30fad5b24c4120f96dbac83aacdb7993ee610a9092bc23c44463da292bf8d",
			"license": "MIT",
			"urls": [
				"bzz-raw://e3d4e72409e392c7694b6405a0136cf073d8da016df33ef8f9ad195f724ebfea",
				"dweb:/ipfs/QmPGcddKq6CgsiKnxUUif2q76wRqP3dmdQ6bKuHCLmb8Wa"
			]
		},
		"contracts/libs/openzeppelin-solidity/contracts/math/SafeMath.sol": {
			"keccak256": "0xe22a1fc7400ae196eba2ad1562d0386462b00a6363b742d55a2fd2021a58586f",
			"license": "MIT",
			"urls": [
				"bzz-raw://4a635cec58fb4141a16cfd408f1a21ac944c335a3beaba541c35d2e95c04536f",
				"dweb:/ipfs/QmXWcz73UenN1ji8jiWMbzxHjjfLbNQwLVKTEB5zNFE34K"
			]
		},
		"contracts/libs/openzeppelin-solidity/contracts/token/ERC1155/ERC1155Holder.sol": {
			"keccak256": "0xddaa787a766d4111e496276fc7ca3cbe77f8524fd5489b3b3888db2b0a14dede",
			"license": "MIT",
			"urls": [
				"bzz-raw://6f0ff8bf1b0fd0ff5b17ab425c22028f56762ac5f1efb244bff0c36dab658afb",
				"dweb:/ipfs/QmajcVj73HenueaiCG7RoJpGgmb7LjgSm9xf6q9HJQr4XK"
			]
		},
		"contracts/libs/openzeppelin-solidity/contracts/token/ERC1155/ERC1155Receiver.sol": {
			"keccak256": "0x2a7175de49a1c811847d56266eb66400142eabdc0461656c2d2e5bc6f24cc0c7",
			"license": "MIT",
			"urls": [
				"bzz-raw://8d4849c27195eee0b072b5aed2a49aa6cf058d0cf8ae344d2a27f8d2cba971dc",
				"dweb:/ipfs/QmddDqDJRtL5sQuoT8iMfJgB2n278ZdFGnc3dNb3ump4BE"
			]
		},
		"contracts/libs/openzeppelin-solidity/contracts/token/ERC1155/IERC1155Receiver.sol": {
			"keccak256": "0x9cd66d9f2777cf22eedebe5f1e56d87d1582393ab5be121fe1d935464d371283",
			"license": "MIT",
			"urls": [
				"bzz-raw://58a7b6ef9e635297ec346e9caa4d43e07f25164cfa2b79f372a0b2393d370558",
				"dweb:/ipfs/QmPjpehAVRQnYc2fW42hL85fpWwC4ZEk7qxB8Mq7CHTqVi"
			]
		},
		"contracts/libs/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0x36b5ca4eabe888b39b10973621ca0dcc9b1508f8d06db9ddf045d7aa7c867d4a",
			"license": "MIT",
			"urls": [
				"bzz-raw://ccbd79e8d556aa7011babb0e5d1e55a966add74853e7ba0274ff184bd96ef002",
				"dweb:/ipfs/QmV28ozNRUFDiDUMvCwcFmLTQPG6nfvgeKr4cmbHWoegtH"
			]
		},
		"contracts/libs/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76",
			"license": "MIT",
			"urls": [
				"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b",
				"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU"
			]
		},
		"contracts/libs/openzeppelin-solidity/contracts/token/ERC721/ERC721Holder.sol": {
			"keccak256": "0x4dded98c5912fe68c28806a9a14eb13daf7f0c74715658008dfe10a0c3f30b05",
			"license": "MIT",
			"urls": [
				"bzz-raw://7ffee67f40169600aad983c0101a6523548efbb65b6cd7007d3fd3cb4f6c360e",
				"dweb:/ipfs/QmbyxEgpZ6vLMgDjMXKVsCtdX3p6YGMrrQicTNZnLLh8zz"
			]
		},
		"contracts/libs/openzeppelin-solidity/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0xb11597841d47f7a773bca63ca323c76f804cb5d944788de0327db5526319dc82",
			"license": "MIT",
			"urls": [
				"bzz-raw://930d2da1934886a1098753be4173dd89c45ca0b306a1930accd37e00b1af4aaf",
				"dweb:/ipfs/QmVSXnvEV41d43k8cfpANHoTYMKgBDBL8iCbxkLfEtQZBe"
			]
		},
		"contracts/libs/openzeppelin-solidity/contracts/token/ERC721/IERC721Enumerable.sol": {
			"keccak256": "0x2789dfea2d73182683d637db5729201f6730dae6113030a94c828f8688f38f2f",
			"license": "MIT",
			"urls": [
				"bzz-raw://36374eaa68c0737bf7e1ae13d55327b4868fb0825e971ee729f4b8d355ededb4",
				"dweb:/ipfs/QmYN9yuzz4P5SumiT6rgYgTEY8MhnPQapMwx2LHxRKju7r"
			]
		},
		"contracts/libs/openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol": {
			"keccak256": "0xc82c7d1d732081d9bd23f1555ebdf8f3bc1738bc42c2bfc4b9aa7564d9fa3573",
			"license": "MIT",
			"urls": [
				"bzz-raw://5cb07e4ff3352161510a0d1536fe93f3c62526358e073a8bab2a8abbb27d0da1",
				"dweb:/ipfs/QmX7K1JjnWKT1JzZT92Qx5zNJQYbssE533TLFHP88hj2fb"
			]
		},
		"contracts/libs/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol": {
			"keccak256": "0x05604ffcf69e416b8a42728bb0e4fd75170d8fac70bf1a284afeb4752a9bc52f",
			"license": "MIT",
			"urls": [
				"bzz-raw://a8a7fd1043372336ecccdbcbcf4962c6df8958dc9c7c7f8361fc2b3dd23570cc",
				"dweb:/ipfs/QmYHKgZxnanBfu7Q8ZicVhDDuB7XRGxuwvmCjfQQ1E5j39"
			]
		},
		"contracts/libs/openzeppelin-solidity/contracts/utils/Context.sol": {
			"keccak256": "0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0",
			"license": "MIT",
			"urls": [
				"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f",
				"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96"
			]
		},
		"contracts/libs/uniswap-v3-core/libraries/TickMath.sol": {
			"keccak256": "0x1f864a2bf61ba05f3173eaf2e3f94c5e1da4bec0554757527b6d1ef1fe439e4e",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://5139b586df546a9d1c46804ca400b1cb9ce87236eaf212ebd64edee6747a172a",
				"dweb:/ipfs/QmVa2kcRw3VyuB6j1EVWXACKnkbQZgfXYXNi5voq3XkYG8"
			]
		},
		"contracts/libs/uniswap-v3-core/test/TickMathTest.sol": {
			"keccak256": "0xe63f27872726e32d1a7b5c857843ec598b865a2da26528602e97af4b7e60d300",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://c682b96fbf1ec85df955e56e88a1e1ff423198b3525e8c9aeebf75ee0285d233",
				"dweb:/ipfs/QmPxhs3NEorAHiyK7LjAMPo3NSEGPZEnsUftDDD4PNQCXS"
			]
		},
		"contracts/libs/uniswap-v3-periphery/interfaces/IERC721Permit.sol": {
			"keccak256": "0xc7e5e397deb7136b36731de129731c11133ef78cbe667d112d244cb3dcd62ad1",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://8d7ba393f304a3d771466ac2a074f0bc7d43846812b425f7cb1674eb01168756",
				"dweb:/ipfs/QmVU6JoefucXsGx8jYF8wuKKEXVKFzu4QYD9jXXF21Gw8K"
			]
		},
		"contracts/libs/uniswap-v3-periphery/interfaces/INonfungiblePositionManager.sol": {
			"keccak256": "0xc74145fc131149626da4e93898be32cbdaff36b44456ad3437dc9bc816dbe707",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://d0a53a54efb94dcb910395c1e39339ab44e3f74bda6d523547c93b6d30f7ad40",
				"dweb:/ipfs/QmdqEAo1tGLV2umvWUo9HkLttgJ4vick5vaZPdYzF6rsw4"
			]
		},
		"contracts/libs/uniswap-v3-periphery/interfaces/IPeripheryImmutableState.sol": {
			"keccak256": "0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f",
				"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127"
			]
		},
		"contracts/libs/uniswap-v3-periphery/interfaces/IPeripheryPayments.sol": {
			"keccak256": "0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407",
				"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp"
			]
		},
		"contracts/libs/uniswap-v3-periphery/interfaces/IPoolInitializer.sol": {
			"keccak256": "0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://61b50933026ee1017db2a6273af8cedc3238c95dca58880db0918dbdbb2f064f",
				"dweb:/ipfs/QmUebR26pqG25d18aBELKz8aFFKkmHa8PxntzXTA7o9Ldu"
			]
		},
		"contracts/libs/uniswap-v3-periphery/libraries/LiquidityAmounts.sol": {
			"keccak256": "0xf149581d28e1c81736dfe72be73ee1301d4945340cc6282fcdd63fe3c85abf24",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://0b67f375180bb62fe6753601cd09740496dcdcec4c0a4f9eaa6e94c5e1bb6844",
				"dweb:/ipfs/QmWYwkmqynRq7g81Nijg4eEkPgSRGnegDrbbEKkkTC1k2w"
			]
		},
		"contracts/libs/uniswap-v3-periphery/libraries/PoolAddress.sol": {
			"keccak256": "0x4c756492e4b7286761a2a660585ffdbce6f810050f2ff4cbc3267bbc650b56b2",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://b886dc6be56da7ab2a116364c8cd9e00ab6d155907ab3aae271ae670aaf2ff21",
				"dweb:/ipfs/QmbJoRJbp4iRuoP4NL2fXiehiWgr4RXaoR4UwagHJHFqhG"
			]
		},
		"contracts/plugins/StaterTransfers.sol": {
			"keccak256": "0xa752d1eece05ce550202a9bab6f5e741e0e7380b341aa0778a57588a41a494a3",
			"license": "MIT",
			"urls": [
				"bzz-raw://723a58bc3d735afaf58985571a050f8f2dad3ca938904b158edaf53e63e4a8da",
				"dweb:/ipfs/QmWTtU1kwar8e2JiJaejd2LrfketgVyHLwr6oiD8g1U5rT"
			]
		}
	},
	"version": 1
}