/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface MockFlashLoanReceiverInterface extends ethers.utils.Interface {
  functions: {
    "ADDRESSES_PROVIDER()": FunctionFragment;
    "LENDING_POOL()": FunctionFragment;
    "amountToApprove()": FunctionFragment;
    "executeOperation(address[],uint256[],uint256[],address,bytes)": FunctionFragment;
    "setAmountToApprove(uint256)": FunctionFragment;
    "setFailExecutionTransfer(bool)": FunctionFragment;
    "setSimulateEOA(bool)": FunctionFragment;
    "simulateEOA()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "ADDRESSES_PROVIDER",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "LENDING_POOL",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "amountToApprove",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "executeOperation",
    values: [string[], BigNumberish[], BigNumberish[], string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setAmountToApprove",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setFailExecutionTransfer",
    values: [boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setSimulateEOA",
    values: [boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "simulateEOA",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "ADDRESSES_PROVIDER",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "LENDING_POOL",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "amountToApprove",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeOperation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAmountToApprove",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFailExecutionTransfer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setSimulateEOA",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "simulateEOA",
    data: BytesLike
  ): Result;

  events: {
    "ExecutedWithFail(address[],uint256[],uint256[])": EventFragment;
    "ExecutedWithSuccess(address[],uint256[],uint256[])": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ExecutedWithFail"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExecutedWithSuccess"): EventFragment;
}

export class MockFlashLoanReceiver extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: MockFlashLoanReceiverInterface;

  functions: {
    ADDRESSES_PROVIDER(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "ADDRESSES_PROVIDER()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    LENDING_POOL(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "LENDING_POOL()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    amountToApprove(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "amountToApprove()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    executeOperation(
      assets: string[],
      amounts: BigNumberish[],
      premiums: BigNumberish[],
      initiator: string,
      params: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "executeOperation(address[],uint256[],uint256[],address,bytes)"(
      assets: string[],
      amounts: BigNumberish[],
      premiums: BigNumberish[],
      initiator: string,
      params: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setAmountToApprove(
      amountToApprove: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setAmountToApprove(uint256)"(
      amountToApprove: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setFailExecutionTransfer(
      fail: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setFailExecutionTransfer(bool)"(
      fail: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setSimulateEOA(
      flag: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setSimulateEOA(bool)"(
      flag: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    simulateEOA(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    "simulateEOA()"(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;
  };

  ADDRESSES_PROVIDER(overrides?: CallOverrides): Promise<string>;

  "ADDRESSES_PROVIDER()"(overrides?: CallOverrides): Promise<string>;

  LENDING_POOL(overrides?: CallOverrides): Promise<string>;

  "LENDING_POOL()"(overrides?: CallOverrides): Promise<string>;

  amountToApprove(overrides?: CallOverrides): Promise<BigNumber>;

  "amountToApprove()"(overrides?: CallOverrides): Promise<BigNumber>;

  executeOperation(
    assets: string[],
    amounts: BigNumberish[],
    premiums: BigNumberish[],
    initiator: string,
    params: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "executeOperation(address[],uint256[],uint256[],address,bytes)"(
    assets: string[],
    amounts: BigNumberish[],
    premiums: BigNumberish[],
    initiator: string,
    params: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setAmountToApprove(
    amountToApprove: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setAmountToApprove(uint256)"(
    amountToApprove: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setFailExecutionTransfer(
    fail: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setFailExecutionTransfer(bool)"(
    fail: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setSimulateEOA(
    flag: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setSimulateEOA(bool)"(
    flag: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  simulateEOA(overrides?: CallOverrides): Promise<boolean>;

  "simulateEOA()"(overrides?: CallOverrides): Promise<boolean>;

  callStatic: {
    ADDRESSES_PROVIDER(overrides?: CallOverrides): Promise<string>;

    "ADDRESSES_PROVIDER()"(overrides?: CallOverrides): Promise<string>;

    LENDING_POOL(overrides?: CallOverrides): Promise<string>;

    "LENDING_POOL()"(overrides?: CallOverrides): Promise<string>;

    amountToApprove(overrides?: CallOverrides): Promise<BigNumber>;

    "amountToApprove()"(overrides?: CallOverrides): Promise<BigNumber>;

    executeOperation(
      assets: string[],
      amounts: BigNumberish[],
      premiums: BigNumberish[],
      initiator: string,
      params: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "executeOperation(address[],uint256[],uint256[],address,bytes)"(
      assets: string[],
      amounts: BigNumberish[],
      premiums: BigNumberish[],
      initiator: string,
      params: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setAmountToApprove(
      amountToApprove: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setAmountToApprove(uint256)"(
      amountToApprove: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setFailExecutionTransfer(
      fail: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "setFailExecutionTransfer(bool)"(
      fail: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    setSimulateEOA(flag: boolean, overrides?: CallOverrides): Promise<void>;

    "setSimulateEOA(bool)"(
      flag: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    simulateEOA(overrides?: CallOverrides): Promise<boolean>;

    "simulateEOA()"(overrides?: CallOverrides): Promise<boolean>;
  };

  filters: {
    ExecutedWithFail(
      _assets: null,
      _amounts: null,
      _premiums: null
    ): EventFilter;

    ExecutedWithSuccess(
      _assets: null,
      _amounts: null,
      _premiums: null
    ): EventFilter;
  };

  estimateGas: {
    ADDRESSES_PROVIDER(overrides?: CallOverrides): Promise<BigNumber>;

    "ADDRESSES_PROVIDER()"(overrides?: CallOverrides): Promise<BigNumber>;

    LENDING_POOL(overrides?: CallOverrides): Promise<BigNumber>;

    "LENDING_POOL()"(overrides?: CallOverrides): Promise<BigNumber>;

    amountToApprove(overrides?: CallOverrides): Promise<BigNumber>;

    "amountToApprove()"(overrides?: CallOverrides): Promise<BigNumber>;

    executeOperation(
      assets: string[],
      amounts: BigNumberish[],
      premiums: BigNumberish[],
      initiator: string,
      params: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "executeOperation(address[],uint256[],uint256[],address,bytes)"(
      assets: string[],
      amounts: BigNumberish[],
      premiums: BigNumberish[],
      initiator: string,
      params: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setAmountToApprove(
      amountToApprove: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setAmountToApprove(uint256)"(
      amountToApprove: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setFailExecutionTransfer(
      fail: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setFailExecutionTransfer(bool)"(
      fail: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setSimulateEOA(flag: boolean, overrides?: Overrides): Promise<BigNumber>;

    "setSimulateEOA(bool)"(
      flag: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    simulateEOA(overrides?: CallOverrides): Promise<BigNumber>;

    "simulateEOA()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    ADDRESSES_PROVIDER(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "ADDRESSES_PROVIDER()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    LENDING_POOL(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "LENDING_POOL()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    amountToApprove(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "amountToApprove()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    executeOperation(
      assets: string[],
      amounts: BigNumberish[],
      premiums: BigNumberish[],
      initiator: string,
      params: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "executeOperation(address[],uint256[],uint256[],address,bytes)"(
      assets: string[],
      amounts: BigNumberish[],
      premiums: BigNumberish[],
      initiator: string,
      params: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setAmountToApprove(
      amountToApprove: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setAmountToApprove(uint256)"(
      amountToApprove: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setFailExecutionTransfer(
      fail: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setFailExecutionTransfer(bool)"(
      fail: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setSimulateEOA(
      flag: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setSimulateEOA(bool)"(
      flag: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    simulateEOA(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "simulateEOA()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
