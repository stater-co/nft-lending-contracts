/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IBaseUniswapAdapterInterface extends ethers.utils.Interface {
  functions: {
    "FLASHLOAN_PREMIUM_TOTAL()": FunctionFragment;
    "MAX_SLIPPAGE_PERCENT()": FunctionFragment;
    "ORACLE()": FunctionFragment;
    "UNISWAP_ROUTER()": FunctionFragment;
    "USD_ADDRESS()": FunctionFragment;
    "WETH_ADDRESS()": FunctionFragment;
    "getAmountsIn(uint256,address,address)": FunctionFragment;
    "getAmountsOut(uint256,address,address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "FLASHLOAN_PREMIUM_TOTAL",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAX_SLIPPAGE_PERCENT",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "ORACLE", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "UNISWAP_ROUTER",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "USD_ADDRESS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "WETH_ADDRESS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getAmountsIn",
    values: [BigNumberish, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getAmountsOut",
    values: [BigNumberish, string, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "FLASHLOAN_PREMIUM_TOTAL",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAX_SLIPPAGE_PERCENT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ORACLE", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "UNISWAP_ROUTER",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "USD_ADDRESS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "WETH_ADDRESS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAmountsIn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAmountsOut",
    data: BytesLike
  ): Result;

  events: {
    "Swapped(address,address,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Swapped"): EventFragment;
}

export class IBaseUniswapAdapter extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IBaseUniswapAdapterInterface;

  functions: {
    FLASHLOAN_PREMIUM_TOTAL(
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "FLASHLOAN_PREMIUM_TOTAL()"(
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    MAX_SLIPPAGE_PERCENT(overrides?: Overrides): Promise<ContractTransaction>;

    "MAX_SLIPPAGE_PERCENT()"(
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    ORACLE(overrides?: Overrides): Promise<ContractTransaction>;

    "ORACLE()"(overrides?: Overrides): Promise<ContractTransaction>;

    UNISWAP_ROUTER(overrides?: Overrides): Promise<ContractTransaction>;

    "UNISWAP_ROUTER()"(overrides?: Overrides): Promise<ContractTransaction>;

    USD_ADDRESS(overrides?: Overrides): Promise<ContractTransaction>;

    "USD_ADDRESS()"(overrides?: Overrides): Promise<ContractTransaction>;

    WETH_ADDRESS(overrides?: Overrides): Promise<ContractTransaction>;

    "WETH_ADDRESS()"(overrides?: Overrides): Promise<ContractTransaction>;

    getAmountsIn(
      amountOut: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
    }>;

    "getAmountsIn(uint256,address,address)"(
      amountOut: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
    }>;

    getAmountsOut(
      amountIn: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
    }>;

    "getAmountsOut(uint256,address,address)"(
      amountIn: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
    }>;
  };

  FLASHLOAN_PREMIUM_TOTAL(overrides?: Overrides): Promise<ContractTransaction>;

  "FLASHLOAN_PREMIUM_TOTAL()"(
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  MAX_SLIPPAGE_PERCENT(overrides?: Overrides): Promise<ContractTransaction>;

  "MAX_SLIPPAGE_PERCENT()"(overrides?: Overrides): Promise<ContractTransaction>;

  ORACLE(overrides?: Overrides): Promise<ContractTransaction>;

  "ORACLE()"(overrides?: Overrides): Promise<ContractTransaction>;

  UNISWAP_ROUTER(overrides?: Overrides): Promise<ContractTransaction>;

  "UNISWAP_ROUTER()"(overrides?: Overrides): Promise<ContractTransaction>;

  USD_ADDRESS(overrides?: Overrides): Promise<ContractTransaction>;

  "USD_ADDRESS()"(overrides?: Overrides): Promise<ContractTransaction>;

  WETH_ADDRESS(overrides?: Overrides): Promise<ContractTransaction>;

  "WETH_ADDRESS()"(overrides?: Overrides): Promise<ContractTransaction>;

  getAmountsIn(
    amountOut: BigNumberish,
    reserveIn: string,
    reserveOut: string,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: string[];
  }>;

  "getAmountsIn(uint256,address,address)"(
    amountOut: BigNumberish,
    reserveIn: string,
    reserveOut: string,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: string[];
  }>;

  getAmountsOut(
    amountIn: BigNumberish,
    reserveIn: string,
    reserveOut: string,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: string[];
  }>;

  "getAmountsOut(uint256,address,address)"(
    amountIn: BigNumberish,
    reserveIn: string,
    reserveOut: string,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: string[];
  }>;

  callStatic: {
    FLASHLOAN_PREMIUM_TOTAL(overrides?: CallOverrides): Promise<BigNumber>;

    "FLASHLOAN_PREMIUM_TOTAL()"(overrides?: CallOverrides): Promise<BigNumber>;

    MAX_SLIPPAGE_PERCENT(overrides?: CallOverrides): Promise<BigNumber>;

    "MAX_SLIPPAGE_PERCENT()"(overrides?: CallOverrides): Promise<BigNumber>;

    ORACLE(overrides?: CallOverrides): Promise<string>;

    "ORACLE()"(overrides?: CallOverrides): Promise<string>;

    UNISWAP_ROUTER(overrides?: CallOverrides): Promise<string>;

    "UNISWAP_ROUTER()"(overrides?: CallOverrides): Promise<string>;

    USD_ADDRESS(overrides?: CallOverrides): Promise<string>;

    "USD_ADDRESS()"(overrides?: CallOverrides): Promise<string>;

    WETH_ADDRESS(overrides?: CallOverrides): Promise<string>;

    "WETH_ADDRESS()"(overrides?: CallOverrides): Promise<string>;

    getAmountsIn(
      amountOut: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
    }>;

    "getAmountsIn(uint256,address,address)"(
      amountOut: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
    }>;

    getAmountsOut(
      amountIn: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
    }>;

    "getAmountsOut(uint256,address,address)"(
      amountIn: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
    }>;
  };

  filters: {
    Swapped(
      fromAsset: null,
      toAsset: null,
      fromAmount: null,
      receivedAmount: null
    ): EventFilter;
  };

  estimateGas: {
    FLASHLOAN_PREMIUM_TOTAL(overrides?: Overrides): Promise<BigNumber>;

    "FLASHLOAN_PREMIUM_TOTAL()"(overrides?: Overrides): Promise<BigNumber>;

    MAX_SLIPPAGE_PERCENT(overrides?: Overrides): Promise<BigNumber>;

    "MAX_SLIPPAGE_PERCENT()"(overrides?: Overrides): Promise<BigNumber>;

    ORACLE(overrides?: Overrides): Promise<BigNumber>;

    "ORACLE()"(overrides?: Overrides): Promise<BigNumber>;

    UNISWAP_ROUTER(overrides?: Overrides): Promise<BigNumber>;

    "UNISWAP_ROUTER()"(overrides?: Overrides): Promise<BigNumber>;

    USD_ADDRESS(overrides?: Overrides): Promise<BigNumber>;

    "USD_ADDRESS()"(overrides?: Overrides): Promise<BigNumber>;

    WETH_ADDRESS(overrides?: Overrides): Promise<BigNumber>;

    "WETH_ADDRESS()"(overrides?: Overrides): Promise<BigNumber>;

    getAmountsIn(
      amountOut: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAmountsIn(uint256,address,address)"(
      amountOut: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAmountsOut(
      amountIn: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAmountsOut(uint256,address,address)"(
      amountIn: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    FLASHLOAN_PREMIUM_TOTAL(
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "FLASHLOAN_PREMIUM_TOTAL()"(
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    MAX_SLIPPAGE_PERCENT(overrides?: Overrides): Promise<PopulatedTransaction>;

    "MAX_SLIPPAGE_PERCENT()"(
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    ORACLE(overrides?: Overrides): Promise<PopulatedTransaction>;

    "ORACLE()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    UNISWAP_ROUTER(overrides?: Overrides): Promise<PopulatedTransaction>;

    "UNISWAP_ROUTER()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    USD_ADDRESS(overrides?: Overrides): Promise<PopulatedTransaction>;

    "USD_ADDRESS()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    WETH_ADDRESS(overrides?: Overrides): Promise<PopulatedTransaction>;

    "WETH_ADDRESS()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    getAmountsIn(
      amountOut: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAmountsIn(uint256,address,address)"(
      amountOut: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAmountsOut(
      amountIn: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAmountsOut(uint256,address,address)"(
      amountIn: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
