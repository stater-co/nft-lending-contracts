/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ILendingCoreMethodsInterface extends ethers.utils.Interface {
  functions: {
    "getLoanApprovalCost(uint256)": FunctionFragment;
    "getLoanApprovalCostOnly(uint256)": FunctionFragment;
    "getLoanInstallmentCost(uint256,uint256)": FunctionFragment;
    "getLoanRemainToPay(uint256)": FunctionFragment;
    "getLoanStartEnd(uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getLoanApprovalCost",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getLoanApprovalCostOnly",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getLoanInstallmentCost",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getLoanRemainToPay",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getLoanStartEnd",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "getLoanApprovalCost",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLoanApprovalCostOnly",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLoanInstallmentCost",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLoanRemainToPay",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLoanStartEnd",
    data: BytesLike
  ): Result;

  events: {};
}

export class ILendingCoreMethods extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ILendingCoreMethodsInterface;

  functions: {
    getLoanApprovalCost(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string;
    }>;

    "getLoanApprovalCost(uint256)"(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string;
    }>;

    getLoanApprovalCostOnly(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getLoanApprovalCostOnly(uint256)"(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getLoanInstallmentCost(
      loanId: BigNumberish,
      nrOfInstallments: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      overallInstallmentAmount: BigNumber;
      interestPerInstallement: BigNumber;
      interestDiscounted: BigNumber;
      interestToStaterPerInstallement: BigNumber;
      amountPaidAsInstallmentToLender: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    "getLoanInstallmentCost(uint256,uint256)"(
      loanId: BigNumberish,
      nrOfInstallments: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      overallInstallmentAmount: BigNumber;
      interestPerInstallement: BigNumber;
      interestDiscounted: BigNumber;
      interestToStaterPerInstallement: BigNumber;
      amountPaidAsInstallmentToLender: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    getLoanRemainToPay(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getLoanRemainToPay(uint256)"(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getLoanStartEnd(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: [BigNumber, BigNumber];
    }>;

    "getLoanStartEnd(uint256)"(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: [BigNumber, BigNumber];
    }>;
  };

  getLoanApprovalCost(
    loanId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: string;
  }>;

  "getLoanApprovalCost(uint256)"(
    loanId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: string;
  }>;

  getLoanApprovalCostOnly(
    loanId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getLoanApprovalCostOnly(uint256)"(
    loanId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getLoanInstallmentCost(
    loanId: BigNumberish,
    nrOfInstallments: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    overallInstallmentAmount: BigNumber;
    interestPerInstallement: BigNumber;
    interestDiscounted: BigNumber;
    interestToStaterPerInstallement: BigNumber;
    amountPaidAsInstallmentToLender: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
  }>;

  "getLoanInstallmentCost(uint256,uint256)"(
    loanId: BigNumberish,
    nrOfInstallments: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    overallInstallmentAmount: BigNumber;
    interestPerInstallement: BigNumber;
    interestDiscounted: BigNumber;
    interestToStaterPerInstallement: BigNumber;
    amountPaidAsInstallmentToLender: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
  }>;

  getLoanRemainToPay(
    loanId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getLoanRemainToPay(uint256)"(
    loanId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getLoanStartEnd(
    loanId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber]>;

  "getLoanStartEnd(uint256)"(
    loanId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber]>;

  callStatic: {
    getLoanApprovalCost(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string;
    }>;

    "getLoanApprovalCost(uint256)"(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string;
    }>;

    getLoanApprovalCostOnly(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getLoanApprovalCostOnly(uint256)"(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLoanInstallmentCost(
      loanId: BigNumberish,
      nrOfInstallments: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      overallInstallmentAmount: BigNumber;
      interestPerInstallement: BigNumber;
      interestDiscounted: BigNumber;
      interestToStaterPerInstallement: BigNumber;
      amountPaidAsInstallmentToLender: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    "getLoanInstallmentCost(uint256,uint256)"(
      loanId: BigNumberish,
      nrOfInstallments: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      overallInstallmentAmount: BigNumber;
      interestPerInstallement: BigNumber;
      interestDiscounted: BigNumber;
      interestToStaterPerInstallement: BigNumber;
      amountPaidAsInstallmentToLender: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    getLoanRemainToPay(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getLoanRemainToPay(uint256)"(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLoanStartEnd(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    "getLoanStartEnd(uint256)"(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;
  };

  filters: {};

  estimateGas: {
    getLoanApprovalCost(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getLoanApprovalCost(uint256)"(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLoanApprovalCostOnly(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getLoanApprovalCostOnly(uint256)"(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLoanInstallmentCost(
      loanId: BigNumberish,
      nrOfInstallments: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getLoanInstallmentCost(uint256,uint256)"(
      loanId: BigNumberish,
      nrOfInstallments: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLoanRemainToPay(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getLoanRemainToPay(uint256)"(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLoanStartEnd(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getLoanStartEnd(uint256)"(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getLoanApprovalCost(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getLoanApprovalCost(uint256)"(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLoanApprovalCostOnly(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getLoanApprovalCostOnly(uint256)"(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLoanInstallmentCost(
      loanId: BigNumberish,
      nrOfInstallments: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getLoanInstallmentCost(uint256,uint256)"(
      loanId: BigNumberish,
      nrOfInstallments: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLoanRemainToPay(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getLoanRemainToPay(uint256)"(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLoanStartEnd(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getLoanStartEnd(uint256)"(
      loanId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
