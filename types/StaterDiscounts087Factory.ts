/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { StaterDiscounts087 } from "./StaterDiscounts087";

export class StaterDiscounts087Factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<StaterDiscounts087> {
    return super.deploy(overrides || {}) as Promise<StaterDiscounts087>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StaterDiscounts087 {
    return super.attach(address) as StaterDiscounts087;
  }
  connect(signer: Signer): StaterDiscounts087Factory {
    return super.connect(signer) as StaterDiscounts087Factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StaterDiscounts087 {
    return new Contract(address, _abi, signerOrProvider) as StaterDiscounts087;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_tokenType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_discount",
        type: "uint8",
      },
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    name: "addDiscount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "calculateDiscount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "discountId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "discounts",
    outputs: [
      {
        internalType: "uint8",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "discount",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_discountId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_discount",
        type: "uint8",
      },
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint8",
        name: "_tokenType",
        type: "uint8",
      },
    ],
    name: "editDiscount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_discountId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenIdIndex",
        type: "uint256",
      },
    ],
    name: "getDiscountTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b610bad8061007d6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063ad6a874511610066578063ad6a87451461018d578063bae6a690146101b3578063d1a55e37146101fd578063f2fde38b14610205578063ff1a48f71461022b57610093565b806319cb235014610098578063715018a6146100cd5780638aa51ec8146100d75780638da5cb5b14610169575b600080fd5b6100bb600480360360408110156100ae57600080fd5b50803590602001356102f0565b60408051918252519081900360200190f35b6100d5610320565b005b6100d5600480360360a08110156100ed57600080fd5b8135916001600160a01b036020820135169160ff604083013516919081019060808101606082013564010000000081111561012757600080fd5b82018360208201111561013957600080fd5b8035906020019184602083028401116401000000008311171561015b57600080fd5b91935091503560ff166103c2565b61017161053d565b604080516001600160a01b039092168252519081900360200190f35b6100bb600480360360208110156101a357600080fd5b50356001600160a01b031661054c565b6101d0600480360360208110156101c957600080fd5b50356108b0565b6040805160ff94851681526001600160a01b03909316602084015292168183015290519081900360600190f35b6100bb6108e0565b6100d56004803603602081101561021b57600080fd5b50356001600160a01b03166108e6565b6100d56004803603608081101561024157600080fd5b60ff82358116926001600160a01b036020820135169260408201359092169181019060808101606082013564010000000081111561027e57600080fd5b82018360208201111561029057600080fd5b803590602001918460208302840111640100000000831117156102b257600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506109de945050505050565b600082815260026020526040812060010180548390811061030d57fe5b9060005260206000200154905092915050565b610328610acd565b6000546001600160a01b03908116911614610378576040805162461bcd60e51b81526020600482018190526024820152600080516020610b58833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6103ca610acd565b6000546001600160a01b0390811691161461041a576040805162461bcd60e51b81526020600482018190526024820152600080516020610b58833981519152604482015290519081900360640190fd5b6000868152600260205260408082208054610100600160a81b0319166101006001600160a01b038a16021760ff60a81b1916600160a81b60ff898116919091029190911782558416808452918320805460ff191690921790915587825260010154905b838110801561048b57508181105b156104d85784848281811061049c57fe5b90506020020135600260008a815260200190815260200160002060010182815481106104c457fe5b60009182526020909120015560010161047d565b508083111561053457805b8381101561053257600088815260026020526040902060010185858381811061050857fe5b835460018082018655600095865260209586902092909502939093013592019190915550016104e3565b505b50505050505050565b6000546001600160a01b031690565b60006001815b6001548110156108a95760008181526002602052604090205460ff16600114156106915760005b60008281526002602052604090206001015481101561068f57600082815260026020526040902054600160a81b900460ff168310156106875760008281526002602052604081208054600190910180546101009092046001600160a01b03169162fdd58e918991869081106105ea57fe5b90600052602060002001546040518363ffffffff1660e01b815260040180836001600160a01b031681526020018281526020019250505060206040518083038186803b15801561063957600080fd5b505afa15801561064d573d6000803e3d6000fd5b505050506040513d602081101561066357600080fd5b5051111561068757600082815260026020526040902054600160a81b900460ff1692505b600101610579565b505b60008181526002602081905260409091205460ff16141561077557600081815260026020526040902054600160a81b900460ff16821015610775576000818152600260209081526040808320548151634b341aed60e01b81526001600160a01b038981166004830152925161010090920490921692634b341aed9260248082019391829003018186803b15801561072757600080fd5b505afa15801561073b573d6000803e3d6000fd5b505050506040513d602081101561075157600080fd5b5051111561077557600081815260026020526040902054600160a81b900460ff1691505b60008181526002602052604090205460ff166108a15760005b60008281526002602052604090206001015481101561089f57600082815260026020526040902054600160a81b900460ff168310156108975760008281526002602052604090208054600190910180546001600160a01b038089169361010090041691636352211e918590811061080157fe5b90600052602060002001546040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561084057600080fd5b505afa158015610854573d6000803e3d6000fd5b505050506040513d602081101561086a57600080fd5b50516001600160a01b0316141561089757600082815260026020526040902054600160a81b900460ff1692505b60010161078e565b505b600101610552565b5092915050565b60026020526000908152604090205460ff808216916001600160a01b0361010082041691600160a81b9091041683565b60015481565b6108ee610acd565b6000546001600160a01b0390811691161461093e576040805162461bcd60e51b81526020600482018190526024820152600080516020610b58833981519152604482015290519081900360640190fd5b6001600160a01b0381166109835760405162461bcd60e51b8152600401808060200182810382526026815260200180610b326026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6109e6610acd565b6000546001600160a01b03908116911614610a36576040805162461bcd60e51b81526020600482018190526024820152600080516020610b58833981519152604482015290519081900360640190fd5b600180546000908152600260209081526040808320805460ff191660ff8a811691909117909155845484528184208054610100600160a81b0319166101006001600160a01b038b160217905584548452818420805460ff60a81b1916600160a81b92891692909202919091179055835483529091208351610abe939190910191840190610ad1565b50506001805481019055505050565b3390565b828054828255906000526020600020908101928215610b0c579160200282015b82811115610b0c578251825591602001919060010190610af1565b50610b18929150610b1c565b5090565b5b80821115610b185760008155600101610b1d56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220970e244ed6c3ba19e4e7b01cf987bfb4cf87633a2066ddb535083e5c30f5294c64736f6c634300060c0033";
